module CommonFeatures;


create view Nationalities as
  select  D.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__77__Temp_____sep_____D____id
  from  __Subquery__77__Temp D;

output view Nationalities;

create view CitiesAll as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__78__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__78__TempOp__1 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__78__TempOp__2 Op);

output view CitiesAll;

create view StateCandidate as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__79__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__79__TempOp__1 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__79__TempOp__2 Op);

output view StateCandidate;

create view StateStrongAbbrev as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__80__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__80__TempOp__1 Op);

output view StateStrongAbbrev;

create view StateWeakAbbrev as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__81__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__81__TempOp__1 Op);

output view StateWeakAbbrev;

create view StatesFromMajorCountries as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__82__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__82__TempOp__1 Op);

output view StatesFromMajorCountries;

create view StateStrongAll as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__83__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__83__TempOp__1 Op);

output view StateStrongAll;

create view StrongStateAll as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__84__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__84__TempOp__1 Op);

output view StrongStateAll;

create view StateWeakAll as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__85__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__85__TempOp__1 Op);

output view StateWeakAll;

create view StockExchangeContext1 as
  select  LeftContext(R.match, 50) as lc,
          RightContext(R.match, 10) as rc,
          R.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          R.__auto__id as StockExchanges1_____sep_____R____id
  from  StockExchanges1 R;

output view StockExchangeContext1;

create view StockExchangeAndTicker1 as
  extract R.match as exchange,
    R.lc as lc,
    AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_REGEX' as __stmt__type,
    R.__auto__id as StockExchangeContext1_____sep_____R____id,
    regex /[ ]?:[ ]?((\p{Lu}\p{M}*)+)/
    with flags 'DOTALL'
    on R.rc
    return group 1 as ticker
  from StockExchangeContext1 R;

output view StockExchangeAndTicker1;

create view StockExchangeContext2 as
  select  LeftContextTok(R.exchange, 3) as lc,
          R.exchange as exchange,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          R.__auto__id as StockExchange2_____sep_____R____id
  from  StockExchange2 R;

output view StockExchangeContext2;

create view StockExchangeAndTicker2 as
  select  R.exchange as exchange,
          LeftContext(R.ticker, 50) as lc,
          R.ticker as ticker,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          R.__auto__id as __Subquery__86__Temp_____sep_____R____id
  from  __Subquery__86__Temp R;

output view StockExchangeAndTicker2;

create view StockExchangeAndTicker as
  (select  Op.exchange as exchange,
            Op.lc as lc,
            Op.ticker as ticker,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__87__TempOp__0 Op)
  union all
  (select  Op.exchange as exchange,
            Op.lc as lc,
            Op.ticker as ticker,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__87__TempOp__1 Op);

output view StockExchangeAndTicker;

create view CityAll as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CitiesAll_____sep_____C____id
  from  CitiesAll C;

output view CityAll;

create view CityorStateOrCountry as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__88__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__88__TempOp__1 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__88__TempOp__2 Op);

output view CityorStateOrCountry;

create view __Subquery__77__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'WorldNationalities'
    on D.text as match
  from DocumentText D;

output view __Subquery__77__Temp;

create view __Subquery__86__Temp as
  extract R.exchange as exchange,
    AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_REGEX' as __stmt__type,
    R.__auto__id as StockExchangeContext2_____sep_____R____id,
    regex /[\(\[)][ ]?((\p{Lu}\p{M}*)+)[ ]?\.[ ]?\z/
    with flags 'DOTALL'
    on between 3 and 3 tokens in R.lc
    return group 1 as ticker
  from StockExchangeContext2 R;

output view __Subquery__86__Temp;

create view __Union__78__TempOp__0 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as USCity_____sep_____S____id
  from  USCity S;

output view __Union__78__TempOp__0;

create view __Union__78__TempOp__1 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as GermanCities_____sep_____S____id
  from  GermanCities S;

output view __Union__78__TempOp__1;

create view __Union__78__TempOp__2 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as MajorCity_____sep_____S____id
  from  MajorCity S;

output view __Union__78__TempOp__2;

create view __Union__79__TempOp__0 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as USStateCandidate_____sep_____C____id
  from  USStateCandidate C;

output view __Union__79__TempOp__0;

create view __Union__79__TempOp__1 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CanadianProvinceCandidate_____sep_____C____id
  from  CanadianProvinceCandidate C;

output view __Union__79__TempOp__1;

create view __Union__79__TempOp__2 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as StatesFromOtherMajorCountries_____sep_____C____id
  from  StatesFromOtherMajorCountries C;

output view __Union__79__TempOp__2;

create view __Union__80__TempOp__0 as
  select  A.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          A.__auto__id as USStateStrongAbbrev_____sep_____A____id
  from  USStateStrongAbbrev A;

output view __Union__80__TempOp__0;

create view __Union__80__TempOp__1 as
  select  A.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          A.__auto__id as CanadianProvinceStrongAbbrev_____sep_____A____id
  from  CanadianProvinceStrongAbbrev A;

output view __Union__80__TempOp__1;

create view __Union__81__TempOp__0 as
  select  A.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          A.__auto__id as USStateWeakAbbrev_____sep_____A____id
  from  USStateWeakAbbrev A;

output view __Union__81__TempOp__0;

create view __Union__81__TempOp__1 as
  select  A.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          A.__auto__id as CanadianProvinceWeakAbbrev_____sep_____A____id
  from  CanadianProvinceWeakAbbrev A;

output view __Union__81__TempOp__1;

create view __Union__82__TempOp__0 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as StateCandidate_____sep_____C____id
  from  StateCandidate C;

output view __Union__82__TempOp__0;

create view __Union__82__TempOp__1 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as StatesFromOtherMajorCountries_____sep_____C____id
  from  StatesFromOtherMajorCountries C;

output view __Union__82__TempOp__1;

create view __Union__83__TempOp__0 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StatesFromMajorCountries_____sep_____S____id
  from  StatesFromMajorCountries S;

output view __Union__83__TempOp__0;

create view __Union__83__TempOp__1 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StateStrongAbbrev_____sep_____S____id
  from  StateStrongAbbrev S;

output view __Union__83__TempOp__1;

create view __Union__84__TempOp__0 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StateStrongAll_____sep_____S____id
  from  StateStrongAll S;

output view __Union__84__TempOp__0;

create view __Union__84__TempOp__1 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StatesFromMajorCountries_____sep_____S____id
  from  StatesFromMajorCountries S;

output view __Union__84__TempOp__1;

create view __Union__85__TempOp__0 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StateCandidate_____sep_____S____id
  from  StateCandidate S;

output view __Union__85__TempOp__0;

create view __Union__85__TempOp__1 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StateWeakAbbrev_____sep_____S____id
  from  StateWeakAbbrev S;

output view __Union__85__TempOp__1;

create view __Union__87__TempOp__0 as
  select  StockExchangeAndTicker1.exchange as exchange,
          StockExchangeAndTicker1.lc as lc,
          StockExchangeAndTicker1.ticker as ticker,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          StockExchangeAndTicker1.__auto__id as StockExchangeAndTicker1_____sep_____StockExchangeAndTicker1____id
  from  StockExchangeAndTicker1 StockExchangeAndTicker1;

output view __Union__87__TempOp__0;

create view __Union__87__TempOp__1 as
  select  StockExchangeAndTicker2.exchange as exchange,
          StockExchangeAndTicker2.lc as lc,
          StockExchangeAndTicker2.ticker as ticker,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          StockExchangeAndTicker2.__auto__id as StockExchangeAndTicker2_____sep_____StockExchangeAndTicker2____id
  from  StockExchangeAndTicker2 StockExchangeAndTicker2;

output view __Union__87__TempOp__1;

create view __Union__88__TempOp__0 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CityAll_____sep_____C____id
  from  CityAll C;

output view __Union__88__TempOp__0;

create view __Union__88__TempOp__1 as
  select  S.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StateCandidate_____sep_____S____id
  from  StateCandidate S;

output view __Union__88__TempOp__1;

create view __Union__88__TempOp__2 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryCandidate_____sep_____C____id
  from  CountryCandidate C;

output view __Union__88__TempOp__2;

