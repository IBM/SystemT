module StateOrProvince;


import view Country_ from module Country as Country_
;


import view StateStrongAll from module CommonFeatures as StateStrongAll
;


create view StateCountry as
  select  S.match as state,
          C.country as country,
          C.continent as continent,
          CombineSpans(S.match, C.reference) as reference,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StateStrongAll_____sep_____S____id,
          C.__auto__id as Country______sep_____C____id
  from  StateStrongAll S,
        Country_ C
  where FollowsTok(S.match, C.country, 0, 1)
     and MatchesRegex(/\s*[,]?\s*/, SpanBetween(S.match, C.country))
     and Not(ContainsRegex(/[\n\r]/, SpanBetween(S.match, C.country)));

output view StateCountry;

create view StateAll as
  (select  Op.stateorprovince as stateorprovince,
            Op.country as country,
            Op.continent as continent,
            Op.reference as reference,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__367__TempOp__0 Op)
  union all
  (select  Op.stateorprovince as stateorprovince,
            Op.country as country,
            Op.continent as continent,
            Op.reference as reference,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__367__TempOp__1 Op);

output view StateAll;

create view StateOrProvince_ as
  select  __t2.stateorprovince as stateorprovince,
          __t2.country as country,
          __t2.continent as continent,
          __t2.reference as reference,
          AutoID() as __auto__id,
          List(__t1.__auto__id) as __Consolidate__368__Temp__1_____sep_______t1____id,
          'STMT_TYPE_CONSOLIDATE' as __stmt__type
  from  __Consolidate__368__Temp__1 __t1,
        __Consolidate__368__Temp__2 __t2
  where ContainedWithin(__t1.__consolidate__target, __t2.__consolidate__target)
  group by __t2.stateorprovince, __t2.country, __t2.continent, __t2.reference;

output view StateOrProvince_;

create view __Consolidate__368__Temp__1 as
  select  S.stateorprovince as stateorprovince,
          S.country as country,
          S.continent as continent,
          S.reference as reference,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StateAll_____sep_____S____id,
          S.stateorprovince as __consolidate__target
  from  StateAll S;

output view __Consolidate__368__Temp__1;

create view __Consolidate__368__Temp__2 as
  select  __t1.stateorprovince as stateorprovince,
          __t1.country as country,
          __t1.continent as continent,
          __t1.reference as reference,
          __t1.__consolidate__target as __consolidate__target
  from  __Consolidate__368__Temp__1 __t1
  consolidate on __t1.__consolidate__target using 'ContainedWithin';

output view __Consolidate__368__Temp__2;

create view __Union__367__TempOp__0 as
  select  S.state as stateorprovince,
          S.country as country,
          S.continent as continent,
          S.reference as reference,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StateCountry_____sep_____S____id
  from  StateCountry S;

output view __Union__367__TempOp__0;

create view __Union__367__TempOp__1 as
  select  S.match as stateorprovince,
          '' as country,
          '' as continent,
          S.match as reference,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StateCandidateValid_____sep_____S____id
  from  StateCandidateValid S;

output view __Union__367__TempOp__1;

