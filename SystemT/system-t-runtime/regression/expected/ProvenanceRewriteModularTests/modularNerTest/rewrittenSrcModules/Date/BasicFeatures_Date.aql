module Date;


import view DocumentDetagged from module InputDocumentProcessor as DocumentText
;


import dictionary MonthsInAYearFromGregorianCalendar from module Dictionaries as MonthsInAYearFromGregorianCalendar
;


require document with columns
  text Text;

create view DateNum as
  select  R.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          R.__auto__id as __Subquery__91__Temp_____sep_____R____id
  from  __Subquery__91__Temp R;

output view DateNum;

create view Month as
  select  D.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__92__Temp_____sep_____D____id
  from  __Subquery__92__Temp D;

output view Month;

create view __Subquery__91__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_REGEX' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    regex /\p{Nd}[[\p{Nd}\p{L}\-\,]\p{M}*]*(( )*\p{Nd}[[\p{Nd}\p{L}]\p{M}*]*)?/
    with flags 'DOTALL'
    on between 1 and 15 tokens in D.text
    return group 0 as match
  from DocumentText D;

output view __Subquery__91__Temp;

create view __Subquery__92__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'MonthsInAYearFromGregorianCalendar'
    on D.text as match
  from DocumentText D;

output view __Subquery__92__Temp;

