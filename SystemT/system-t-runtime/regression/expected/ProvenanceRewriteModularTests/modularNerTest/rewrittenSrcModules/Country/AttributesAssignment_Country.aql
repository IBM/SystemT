module Country;


import view Continent_ from module Continent as Continent_
;


create view CountryContinent as
  select  C.match as country,
          CT.continent as continent,
          CombineSpans(C.match, CT.continent) as reference,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryCandidate_____sep_____C____id,
          CT.__auto__id as Continent______sep_____CT____id
  from  CountryCandidate C,
        Continent_ CT
  where FollowsTok(C.match, CT.continent, 0, 1)
     and MatchesRegex(/\s*[,]?\s*/, SpanBetween(C.match, CT.continent))
     and Not(ContainsRegex(/[\n\r]/, SpanBetween(C.match, CT.continent)))
     and Not(Equals(GetText(CT.continent), 'Australia'));

output view CountryContinent;

create view CountryAll as
  (select  Op.country as country,
            Op.continent as continent,
            Op.reference as reference,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__352__TempOp__0 Op)
  union all
  (select  Op.country as country,
            Op.continent as continent,
            Op.reference as reference,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__352__TempOp__1 Op);

output view CountryAll;

create view Country_ as
  select  __t2.country as country,
          __t2.continent as continent,
          __t2.reference as reference,
          AutoID() as __auto__id,
          List(__t1.__auto__id) as __Consolidate__353__Temp__1_____sep_______t1____id,
          'STMT_TYPE_CONSOLIDATE' as __stmt__type
  from  __Consolidate__353__Temp__1 __t1,
        __Consolidate__353__Temp__2 __t2
  where Or(GreaterThan(GetBegin(__t1.__consolidate__target), GetBegin(__t2.__consolidate__target)), Equals(GetBegin(__t1.__consolidate__target), GetBegin(__t2.__consolidate__target)))
     and Overlaps(__t1.__consolidate__target, __t2.__consolidate__target)
  group by __t2.country, __t2.continent, __t2.reference;

output view Country_;

create view __Consolidate__353__Temp__1 as
  select  C.country as country,
          C.continent as continent,
          C.reference as reference,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryAll_____sep_____C____id,
          C.reference as __consolidate__target
  from  CountryAll C;

output view __Consolidate__353__Temp__1;

create view __Consolidate__353__Temp__2 as
  select  __t1.country as country,
          __t1.continent as continent,
          __t1.reference as reference,
          __t1.__consolidate__target as __consolidate__target
  from  __Consolidate__353__Temp__1 __t1
  consolidate on __t1.__consolidate__target using 'LeftToRight';

output view __Consolidate__353__Temp__2;

create view __Union__352__TempOp__0 as
  select  C.country as country,
          C.continent as continent,
          C.reference as reference,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryContinent_____sep_____C____id
  from  CountryContinent C;

output view __Union__352__TempOp__0;

create view __Union__352__TempOp__1 as
  select  C.match as country,
          '' as continent,
          C.match as reference,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryCandidateValid_____sep_____C____id
  from  CountryCandidateValid C;

output view __Union__352__TempOp__1;

