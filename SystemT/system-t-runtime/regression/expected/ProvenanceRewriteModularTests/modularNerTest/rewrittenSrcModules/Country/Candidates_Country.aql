module Country;


import view CountryCandidate from module CommonFeatures as CountryCandidate
;


import view OrganizationFull from module OrganizationCandidates as OrganizationFull
;


import view RelaxedCapsPlace from module Linguistics as RelaxedCapsPlace
;


require document with columns
  text Text;

create view CountryCandidateConsolidated as
  select  __t2.match as match,
          AutoID() as __auto__id,
          List(__t1.__auto__id) as __Consolidate__354__Temp__1_____sep_______t1____id,
          'STMT_TYPE_CONSOLIDATE' as __stmt__type
  from  __Consolidate__354__Temp__1 __t1,
        __Consolidate__354__Temp__2 __t2
  where ContainedWithin(__t1.__consolidate__target, __t2.__consolidate__target)
  group by __t2.match;

output view CountryCandidateConsolidated;

create view CapsPlaceAndCountry as
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__355__TempOp__0 Op)
  union all
  (select  Op.match as match,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__355__TempOp__1 Op);

output view CapsPlaceAndCountry;

create view CountryCandidateInvalid as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryCandidate_____sep_____C____id,
          O.__auto__id as OrganizationFull_____sep_____O____id
  from  CountryCandidate C,
        OrganizationFull O
  where Overlaps(O.organization, C.match);

output view CountryCandidateInvalid;

create view CountryCandidateValidAll as
  select  Op.match as match,
          AutoID() as __auto__id,
          Op.__auto__id as __Minus__356__TempOp__1_____sep_____Op____id,
          'STMT_TYPE_MINUS' as __stmt__type
  from  __Minus__356__TempOp__1 Op,
        __Minus__356__Temp __t
  where Equals(Op.match, __t.match);

output view CountryCandidateValidAll;

create view CountryCandidateValid as
  select  __t2.match as match,
          AutoID() as __auto__id,
          List(__t1.__auto__id) as __Consolidate__357__Temp__1_____sep_______t1____id,
          'STMT_TYPE_CONSOLIDATE' as __stmt__type
  from  __Consolidate__357__Temp__1 __t1,
        __Consolidate__357__Temp__2 __t2
  where ContainedWithin(__t1.__consolidate__target, __t2.__consolidate__target)
  group by __t2.match;

output view CountryCandidateValid;

create view __Consolidate__354__Temp__1 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryCandidate_____sep_____C____id,
          C.match as __consolidate__target
  from  CountryCandidate C;

output view __Consolidate__354__Temp__1;

create view __Consolidate__354__Temp__2 as
  select  __t1.match as match,
          __t1.__consolidate__target as __consolidate__target
  from  __Consolidate__354__Temp__1 __t1
  consolidate on __t1.__consolidate__target using 'ContainedWithin';

output view __Consolidate__354__Temp__2;

create view __Consolidate__357__Temp__1 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryCandidateValidAll_____sep_____C____id,
          C.match as __consolidate__target
  from  CountryCandidateValidAll C;

output view __Consolidate__357__Temp__1;

create view __Consolidate__357__Temp__2 as
  select  __t1.match as match,
          __t1.__consolidate__target as __consolidate__target
  from  __Consolidate__357__Temp__1 __t1
  consolidate on __t1.__consolidate__target using 'ContainedWithin';

output view __Consolidate__357__Temp__2;

create view __Minus__356__Temp as
  select  __t.match as match
  from  
    ((select  Op.match as match
      from  __Minus__356__TempOp__1 Op)
    minus
    (select  Op.match as match
      from  __Minus__356__TempOp__2 Op)
    ) __t
  group by __t.match;

output view __Minus__356__Temp;

create view __Minus__356__TempOp__1 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryCandidate_____sep_____C____id
  from  CountryCandidate C;

output view __Minus__356__TempOp__1;

create view __Minus__356__TempOp__2 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryCandidateInvalid_____sep_____C____id
  from  CountryCandidateInvalid C;

output view __Minus__356__TempOp__2;

create view __Union__355__TempOp__0 as
  select  CP.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          CP.__auto__id as RelaxedCapsPlace_____sep_____CP____id
  from  RelaxedCapsPlace CP;

output view __Union__355__TempOp__0;

create view __Union__355__TempOp__1 as
  select  C.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CountryCandidate_____sep_____C____id
  from  CountryCandidate C;

output view __Union__355__TempOp__1;

