module City;


import view DocumentDetagged from module InputDocumentProcessor as DocumentText
;


import dictionary CitiesPositiveCluesInLeftContext from module Dictionaries as CitiesPositiveCluesInLeftContext
;


import dictionary CitiesPositiveCluesInRightContext from module Dictionaries as CitiesPositiveCluesInRightContext
;


require document with columns
  text Text;

create view CityLeftClue as
  select  D.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__386__Temp_____sep_____D____id
  from  __Subquery__386__Temp D;

output view CityLeftClue;

create view CityRightClue as
  select  D.match as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__387__Temp_____sep_____D____id
  from  __Subquery__387__Temp D;

output view CityRightClue;

create view __Subquery__386__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'CitiesPositiveCluesInLeftContext'
    with flags 'Exact'
    on D.text as match
  from DocumentText D;

output view __Subquery__386__Temp;

create view __Subquery__387__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'CitiesPositiveCluesInRightContext'
    with flags 'Exact'
    on D.text as match
  from DocumentText D;

output view __Subquery__387__Temp;

