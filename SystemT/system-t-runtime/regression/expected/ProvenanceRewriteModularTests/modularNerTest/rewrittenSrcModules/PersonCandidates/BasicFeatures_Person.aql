module PersonCandidates;


require document with columns
  text Text;

create view CapsPerson as
  select  C.name as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as CapsPersonCandidate_____sep_____C____id
  from  CapsPersonCandidate C
  where Not(MatchesRegex(/(\p{Lu}\p{M}*)+-.*([\p{Ll}\p{Lo}]\p{M}*).*/, C.name))
     and Not(MatchesRegex(/.*([\p{Ll}\p{Lo}]\p{M}*).*-(\p{Lu}\p{M}*)+/, C.name))
     and Not(MatchesRegex(/[ ]*[\u0093\u0094\u2018\u2019\u0022\u0027\u00AB\u00BB\u201A\u201B\u201C\u201D\u201E\u301D\u301E\u301F]\p{M}*[^sld]/, RightContextTok(C.name, 2)))
     and Not(MatchesRegex(/(\p{Lu}\p{M}*){2,}\p{Ll}\p{M}*.*/, C.name));

output view CapsPerson;

create view TwoCapsPerson as
  select  CombineSpans(CP1.name, CP2.name) as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          CP1.__auto__id as CapsPerson_____sep_____CP1____id,
          CP2.__auto__id as CapsPerson_____sep_____CP2____id
  from  CapsPerson CP1,
        CapsPerson CP2
  where FollowsTok(CP1.name, CP2.name, 0, 0);

output view TwoCapsPerson;

create view OneOrTwoCapPerson as
  (select  Op.name as name,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__281__TempOp__0 Op)
  union all
  (select  Op.name as name,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__281__TempOp__1 Op);

output view OneOrTwoCapPerson;



create view StrictCapsPersonR as
  select  R.match as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          R.__auto__id as __Subquery__282__Temp_____sep_____R____id
  from  __Subquery__282__Temp R;

output view StrictCapsPersonR;

create view StrictCapsPerson as
  select  R.name as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          R.__auto__id as StrictCapsPersonR_____sep_____R____id
  from  StrictCapsPersonR R
  where MatchesRegex(/\b\p{Lu}\p{M}*[\p{Ll}\p{Lo}]\p{M}*(\p{L}\p{M}*){1,20}\b/, R.name);

output view StrictCapsPerson;

create view StrictLastName1 as
  select  D.match as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__283__Temp_____sep_____D____id
  from  __Subquery__283__Temp D
  where MatchesRegex(/((\p{L}\p{M}*)+\s+)?\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictLastName1;

create view StrictLastName2 as
  select  D.match as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__284__Temp_____sep_____D____id
  from  __Subquery__284__Temp D
  where MatchesRegex(/((\p{L}\p{M}*)+\s+)?\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictLastName2;

create view StrictLastName3 as
  select  D.match as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__285__Temp_____sep_____D____id
  from  __Subquery__285__Temp D
  where MatchesRegex(/((\p{L}\p{M}*)+\s+)?\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictLastName3;

create view StrictLastName4 as
  select  D.match as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__286__Temp_____sep_____D____id
  from  __Subquery__286__Temp D
  where MatchesRegex(/((\p{L}\p{M}*)+\s+)?\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictLastName4;

create view StrictLastName5 as
  select  D.match as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__287__Temp_____sep_____D____id
  from  __Subquery__287__Temp D
  where MatchesRegex(/((\p{L}\p{M}*)+\s+)?\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictLastName5;

create view StrictLastName6 as
  select  D.match as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__288__Temp_____sep_____D____id
  from  __Subquery__288__Temp D
  where MatchesRegex(/((\p{L}\p{M}*)+\s+)?\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictLastName6;

create view StrictLastName7 as
  select  D.match as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__289__Temp_____sep_____D____id
  from  __Subquery__289__Temp D
  where MatchesRegex(/((\p{L}\p{M}*)+\s+)?\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictLastName7;

create view StrictLastName8 as
  select  D.match as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__290__Temp_____sep_____D____id
  from  __Subquery__290__Temp D
  where MatchesRegex(/((\p{L}\p{M}*)+\s+)?\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictLastName8;

create view StrictLastName9 as
  select  D.match as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__291__Temp_____sep_____D____id
  from  __Subquery__291__Temp D
  where MatchesRegex(/((\p{L}\p{M}*)+\s+)?\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictLastName9;

create view StrictLastNameAll as
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__292__TempOp__0 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__292__TempOp__1 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__292__TempOp__2 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__292__TempOp__3 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__292__TempOp__4 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__292__TempOp__5 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__292__TempOp__6 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__292__TempOp__7 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__292__TempOp__8 Op);

output view StrictLastNameAll;

create view StrictLastName as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastNameAll_____sep_____S____id
  from  StrictLastNameAll S
  where Not(MatchesRegex(/[ ]*[\u0093\u0094\u2018\u2019\u0022\u0027\u00AB\u00BB\u201A\u201B\u201C\u201D\u201E\u301D\u301E\u301F]\p{M}*[^sld]/, RightContextTok(S.lastname, 2)));

output view StrictLastName;

create view RelaxedLastName1 as
  select  CombineSpans(SL.lastname, CP.name) as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          SL.__auto__id as StrictLastName_____sep_____SL____id,
          CP.__auto__id as StrictCapsPerson_____sep_____CP____id
  from  StrictLastName SL,
        StrictCapsPerson CP
  where FollowsTok(SL.lastname, CP.name, 1, 1)
     and MatchesRegex(/\-/, SpanBetween(SL.lastname, CP.name));

output view RelaxedLastName1;

create view RelaxedLastName2 as
  select  CombineSpans(CP.name, SL.lastname) as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          SL.__auto__id as StrictLastName_____sep_____SL____id,
          CP.__auto__id as StrictCapsPerson_____sep_____CP____id
  from  StrictLastName SL,
        StrictCapsPerson CP
  where FollowsTok(CP.name, SL.lastname, 1, 1)
     and MatchesRegex(/\-/, SpanBetween(CP.name, SL.lastname));

output view RelaxedLastName2;

create view LastNameAll as
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__293__TempOp__0 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__293__TempOp__1 Op)
  union all
  (select  Op.lastname as lastname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__293__TempOp__2 Op);

output view LastNameAll;

create view WrongLastNameAll as
  select  L.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          L.__auto__id as LastNameAll_____sep_____L____id
  from  LastNameAll L
  where MatchesRegex(/\p{Ll}\p{M}*.*[ ]*/, LeftContextTok(L.lastname, 1))
     and MatchesRegex(/[ ]+\p{Lu}\p{M}*.*/, RightContextTok(L.lastname, 1));

output view WrongLastNameAll;

create view ValidLastNameAll as
  select  N.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          N.__auto__id as LastNameAll_____sep_____N____id
  from  LastNameAll N
  where Not(MatchesRegex(/(\p{Lu}\p{M}*)+-.*([\p{Ll}\p{Lo}]\p{M}*).*/, N.lastname))
     and Not(MatchesRegex(/.*([\p{Ll}\p{Lo}]\p{M}*).*-(\p{Lu}\p{M}*)+/, N.lastname));

output view ValidLastNameAll;

create view LastName as
  select  __t2.lastname as lastname,
          AutoID() as __auto__id,
          List(__t1.__auto__id) as __Consolidate__294__Temp__1_____sep_______t1____id,
          'STMT_TYPE_CONSOLIDATE' as __stmt__type
  from  __Consolidate__294__Temp__1 __t1,
        __Consolidate__294__Temp__2 __t2
  where ContainedWithin(__t1.__consolidate__target, __t2.__consolidate__target)
  group by __t2.lastname;

output view LastName;

create view StrictFirstName1 as
  select  D.match as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__295__Temp_____sep_____D____id
  from  __Subquery__295__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictFirstName1;

create view StrictFirstName2 as
  select  D.match as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__296__Temp_____sep_____D____id
  from  __Subquery__296__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictFirstName2;

create view StrictFirstName3 as
  select  D.match as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__297__Temp_____sep_____D____id
  from  __Subquery__297__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictFirstName3;

create view StrictFirstName4 as
  select  D.match as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__298__Temp_____sep_____D____id
  from  __Subquery__298__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictFirstName4;

create view StrictFirstName5 as
  select  D.match as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__299__Temp_____sep_____D____id
  from  __Subquery__299__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictFirstName5;

create view StrictFirstName6 as
  select  D.match as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__300__Temp_____sep_____D____id
  from  __Subquery__300__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictFirstName6;

create view StrictFirstName7 as
  select  D.match as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__301__Temp_____sep_____D____id
  from  __Subquery__301__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictFirstName7;

create view StrictFirstName8 as
  select  D.match as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__302__Temp_____sep_____D____id
  from  __Subquery__302__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictFirstName8;

create view StrictFirstName9 as
  select  D.match as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__303__Temp_____sep_____D____id
  from  __Subquery__303__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view StrictFirstName9;

create view StrictFirstNameAll as
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__304__TempOp__0 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__304__TempOp__1 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__304__TempOp__2 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__304__TempOp__3 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__304__TempOp__4 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__304__TempOp__5 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__304__TempOp__6 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__304__TempOp__7 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__304__TempOp__8 Op);

output view StrictFirstNameAll;

create view StrictFirstNameOrig as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstNameAll_____sep_____S____id
  from  StrictFirstNameAll S
  where Not(MatchesRegex(/[ ]*[\u0093\u0094\u2018\u2019\u0022\u0027\u00AB\u00BB\u201A\u201B\u201C\u201D\u201E\u301D\u301E\u301F]\p{M}*[^sld]/, RightContextTok(S.firstname, 2)));

output view StrictFirstNameOrig;

create view StrictFirstNameExtended as
  select  CombineSpans(LeftContext(S.firstname, 2), S.firstname) as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstNameAll_____sep_____S____id
  from  StrictFirstNameAll S
  where MatchesRegex(/O'/, LeftContext(S.firstname, 2));

output view StrictFirstNameExtended;

create view StrictFirstNameCandidate as
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__305__TempOp__0 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__305__TempOp__1 Op);

output view StrictFirstNameCandidate;

create view StrictFirstName as
  select  __t2.firstname as firstname,
          AutoID() as __auto__id,
          List(__t1.__auto__id) as __Consolidate__306__Temp__1_____sep_______t1____id,
          'STMT_TYPE_CONSOLIDATE' as __stmt__type
  from  __Consolidate__306__Temp__1 __t1,
        __Consolidate__306__Temp__2 __t2
  where ContainedWithin(__t1.__consolidate__target, __t2.__consolidate__target)
  group by __t2.firstname;

output view StrictFirstName;

create view RelaxedFirstName1 as
  select  CombineSpans(S.firstname, CP.name) as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName_____sep_____S____id,
          CP.__auto__id as StrictCapsPerson_____sep_____CP____id
  from  StrictFirstName S,
        StrictCapsPerson CP
  where FollowsTok(S.firstname, CP.name, 1, 1)
     and MatchesRegex(/\-/, SpanBetween(S.firstname, CP.name));

output view RelaxedFirstName1;

create view RelaxedFirstName2 as
  select  CombineSpans(CP.name, S.firstname) as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName_____sep_____S____id,
          CP.__auto__id as StrictCapsPerson_____sep_____CP____id
  from  StrictFirstName S,
        StrictCapsPerson CP
  where FollowsTok(CP.name, S.firstname, 1, 1)
     and MatchesRegex(/\-/, SpanBetween(CP.name, S.firstname));

output view RelaxedFirstName2;

create view FirstNameAll as
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__307__TempOp__0 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__307__TempOp__1 Op)
  union all
  (select  Op.firstname as firstname,
            AutoID() as __auto__id,
            'STMT_TYPE_UNION' as __stmt__type,
            Op.__auto__id as __union_op__id
    from  __Union__307__TempOp__2 Op);

output view FirstNameAll;

create view ValidFirstNameAll as
  select  N.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          N.__auto__id as FirstNameAll_____sep_____N____id
  from  FirstNameAll N
  where Not(MatchesRegex(/(\p{Lu}\p{M}*)+-.*([\p{Ll}\p{Lo}]\p{M}*).*/, N.firstname))
     and Not(MatchesRegex(/.*([\p{Ll}\p{Lo}]\p{M}*).*-(\p{Lu}\p{M}*)+/, N.firstname));

output view ValidFirstNameAll;

create view FirstName as
  select  __t2.firstname as firstname,
          AutoID() as __auto__id,
          List(__t1.__auto__id) as __Consolidate__308__Temp__1_____sep_______t1____id,
          'STMT_TYPE_CONSOLIDATE' as __stmt__type
  from  __Consolidate__308__Temp__1 __t1,
        __Consolidate__308__Temp__2 __t2
  where ContainedWithin(__t1.__consolidate__target, __t2.__consolidate__target)
  group by __t2.firstname;

output view FirstName;

create view NameDict as
  select  D.match as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__309__Temp_____sep_____D____id
  from  __Subquery__309__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view NameDict;

create view NameDict1 as
  select  D.match as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__310__Temp_____sep_____D____id
  from  __Subquery__310__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view NameDict1;

create view NameDict2 as
  select  D.match as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__311__Temp_____sep_____D____id
  from  __Subquery__311__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view NameDict2;

create view NameDict3 as
  select  D.match as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__312__Temp_____sep_____D____id
  from  __Subquery__312__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view NameDict3;

create view NameDict4 as
  select  D.match as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__313__Temp_____sep_____D____id
  from  __Subquery__313__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view NameDict4;

create view NameDict5 as
  select  D.match as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          D.__auto__id as __Subquery__314__Temp_____sep_____D____id
  from  __Subquery__314__Temp D
  where MatchesRegex(/\p{Lu}\p{M}*.{1,20}/, D.match);

output view NameDict5;

create view __Consolidate__294__Temp__1 as
  select  C.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as ValidLastNameAll_____sep_____C____id,
          C.lastname as __consolidate__target
  from  ValidLastNameAll C;

output view __Consolidate__294__Temp__1;

create view __Consolidate__294__Temp__2 as
  select  __t1.lastname as lastname,
          __t1.__consolidate__target as __consolidate__target
  from  __Consolidate__294__Temp__1 __t1
  consolidate on __t1.__consolidate__target using 'ContainedWithin';

output view __Consolidate__294__Temp__2;

create view __Consolidate__306__Temp__1 as
  select  F.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          F.__auto__id as StrictFirstNameCandidate_____sep_____F____id,
          F.firstname as __consolidate__target
  from  StrictFirstNameCandidate F;

output view __Consolidate__306__Temp__1;

create view __Consolidate__306__Temp__2 as
  select  __t1.firstname as firstname,
          __t1.__consolidate__target as __consolidate__target
  from  __Consolidate__306__Temp__1 __t1
  consolidate on __t1.__consolidate__target using 'ContainedWithin';

output view __Consolidate__306__Temp__2;

create view __Consolidate__308__Temp__1 as
  select  C.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          C.__auto__id as ValidFirstNameAll_____sep_____C____id,
          C.firstname as __consolidate__target
  from  ValidFirstNameAll C;

output view __Consolidate__308__Temp__1;

create view __Consolidate__308__Temp__2 as
  select  __t1.firstname as firstname,
          __t1.__consolidate__target as __consolidate__target
  from  __Consolidate__308__Temp__1 __t1
  consolidate on __t1.__consolidate__target using 'ContainedWithin';

output view __Consolidate__308__Temp__2;

create view __Subquery__282__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_REGEX' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    regex /\p{Lu}\p{M}*(\p{L}\p{M}*){1,20}/
    with flags 'DOTALL'
    on between 1 and 1 tokens in D.text
    return group 0 as match
  from DocumentText D;

output view __Subquery__282__Temp;

create view __Subquery__283__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'LastNamesUsedGlobally'
    on D.text as match
  from DocumentText D;

output view __Subquery__283__Temp;

create view __Subquery__284__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'LastNamesUsedInGermanyLong'
    on D.text as match
  from DocumentText D;

output view __Subquery__284__Temp;

create view __Subquery__285__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'LastNamesUsedInGermanyShort'
    on D.text as match
  from DocumentText D;

output view __Subquery__285__Temp;

create view __Subquery__286__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'LastNamesUsedGloballyUnique'
    on D.text as match
  from DocumentText D;

output view __Subquery__286__Temp;

create view __Subquery__287__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'LastNamesUsedInItaly'
    on D.text as match
  from DocumentText D;

output view __Subquery__287__Temp;

create view __Subquery__288__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'LastNamesUsedInFrance'
    on D.text as match
  from DocumentText D;

output view __Subquery__288__Temp;

create view __Subquery__289__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'LastNamesUsedInSpain'
    on D.text as match
  from DocumentText D;

output view __Subquery__289__Temp;

create view __Subquery__290__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'LastNamesUsedInIndia'
    on D.text as match
  from DocumentText D;

output view __Subquery__290__Temp;

create view __Subquery__291__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'LastNamesUsedInIsrael'
    on D.text as match
  from DocumentText D;

output view __Subquery__291__Temp;

create view __Subquery__295__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstNamesUsedGlobally'
    on D.text as match
  from DocumentText D;

output view __Subquery__295__Temp;

create view __Subquery__296__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstNamesUsedInGermanyLong'
    on D.text as match
  from DocumentText D;

output view __Subquery__296__Temp;

create view __Subquery__297__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'NickNamesUsedGlobally'
    on D.text as match
  from DocumentText D;

output view __Subquery__297__Temp;

create view __Subquery__298__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstNamesUsedInGermanyShort'
    on D.text as match
  from DocumentText D;

output view __Subquery__298__Temp;

create view __Subquery__299__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstNamesUsedInItaly'
    on D.text as match
  from DocumentText D;

output view __Subquery__299__Temp;

create view __Subquery__300__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstNamesUsedInFrance'
    on D.text as match
  from DocumentText D;

output view __Subquery__300__Temp;

create view __Subquery__301__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstNamesUsedInSpain'
    on D.text as match
  from DocumentText D;

output view __Subquery__301__Temp;

create view __Subquery__302__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstNamesUsedInIndia'
    on D.text as match
  from DocumentText D;

output view __Subquery__302__Temp;

create view __Subquery__303__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstNamesUsedInIsrael'
    on D.text as match
  from DocumentText D;

output view __Subquery__303__Temp;

create view __Subquery__309__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstOrLastNamesUsedGlobally'
    on D.text as match
  from DocumentText D;

output view __Subquery__309__Temp;

create view __Subquery__310__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstOrLastNamesUsedInItaly'
    on D.text as match
  from DocumentText D;

output view __Subquery__310__Temp;

create view __Subquery__311__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstOrLastNamesUsedInFrance'
    on D.text as match
  from DocumentText D;

output view __Subquery__311__Temp;

create view __Subquery__312__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstOrLastNamesUsedInSpain'
    on D.text as match
  from DocumentText D;

output view __Subquery__312__Temp;

create view __Subquery__313__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'FirstOrLastNamesUsedInIsrael'
    on D.text as match
  from DocumentText D;

output view __Subquery__313__Temp;

create view __Subquery__314__Temp as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as DocumentText_____sep_____D____id,
    dictionary 'PopularBabyNamesUsedInWesternWorld'
    on D.text as match
  from DocumentText D;

output view __Subquery__314__Temp;

create view __Union__281__TempOp__0 as
  select  CP.name as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          CP.__auto__id as CapsPerson_____sep_____CP____id
  from  CapsPerson CP;

output view __Union__281__TempOp__0;

create view __Union__281__TempOp__1 as
  select  CP.name as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          CP.__auto__id as TwoCapsPerson_____sep_____CP____id
  from  TwoCapsPerson CP;

output view __Union__281__TempOp__1;

create view __Union__292__TempOp__0 as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastName1_____sep_____S____id
  from  StrictLastName1 S;

output view __Union__292__TempOp__0;

create view __Union__292__TempOp__1 as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastName2_____sep_____S____id
  from  StrictLastName2 S;

output view __Union__292__TempOp__1;

create view __Union__292__TempOp__2 as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastName3_____sep_____S____id
  from  StrictLastName3 S;

output view __Union__292__TempOp__2;

create view __Union__292__TempOp__3 as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastName4_____sep_____S____id
  from  StrictLastName4 S;

output view __Union__292__TempOp__3;

create view __Union__292__TempOp__4 as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastName5_____sep_____S____id
  from  StrictLastName5 S;

output view __Union__292__TempOp__4;

create view __Union__292__TempOp__5 as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastName6_____sep_____S____id
  from  StrictLastName6 S;

output view __Union__292__TempOp__5;

create view __Union__292__TempOp__6 as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastName7_____sep_____S____id
  from  StrictLastName7 S;

output view __Union__292__TempOp__6;

create view __Union__292__TempOp__7 as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastName8_____sep_____S____id
  from  StrictLastName8 S;

output view __Union__292__TempOp__7;

create view __Union__292__TempOp__8 as
  select  S.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictLastName9_____sep_____S____id
  from  StrictLastName9 S;

output view __Union__292__TempOp__8;

create view __Union__293__TempOp__0 as
  select  N.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          N.__auto__id as StrictLastName_____sep_____N____id
  from  StrictLastName N;

output view __Union__293__TempOp__0;

create view __Union__293__TempOp__1 as
  select  N.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          N.__auto__id as RelaxedLastName1_____sep_____N____id
  from  RelaxedLastName1 N;

output view __Union__293__TempOp__1;

create view __Union__293__TempOp__2 as
  select  N.lastname as lastname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          N.__auto__id as RelaxedLastName2_____sep_____N____id
  from  RelaxedLastName2 N;

output view __Union__293__TempOp__2;

create view __Union__304__TempOp__0 as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName1_____sep_____S____id
  from  StrictFirstName1 S;

output view __Union__304__TempOp__0;

create view __Union__304__TempOp__1 as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName2_____sep_____S____id
  from  StrictFirstName2 S;

output view __Union__304__TempOp__1;

create view __Union__304__TempOp__2 as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName3_____sep_____S____id
  from  StrictFirstName3 S;

output view __Union__304__TempOp__2;

create view __Union__304__TempOp__3 as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName4_____sep_____S____id
  from  StrictFirstName4 S;

output view __Union__304__TempOp__3;

create view __Union__304__TempOp__4 as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName5_____sep_____S____id
  from  StrictFirstName5 S;

output view __Union__304__TempOp__4;

create view __Union__304__TempOp__5 as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName6_____sep_____S____id
  from  StrictFirstName6 S;

output view __Union__304__TempOp__5;

create view __Union__304__TempOp__6 as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName7_____sep_____S____id
  from  StrictFirstName7 S;

output view __Union__304__TempOp__6;

create view __Union__304__TempOp__7 as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName8_____sep_____S____id
  from  StrictFirstName8 S;

output view __Union__304__TempOp__7;

create view __Union__304__TempOp__8 as
  select  S.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          S.__auto__id as StrictFirstName9_____sep_____S____id
  from  StrictFirstName9 S;

output view __Union__304__TempOp__8;

create view __Union__305__TempOp__0 as
  select  F.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          F.__auto__id as StrictFirstNameOrig_____sep_____F____id
  from  StrictFirstNameOrig F;

output view __Union__305__TempOp__0;

create view __Union__305__TempOp__1 as
  select  F.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          F.__auto__id as StrictFirstNameExtended_____sep_____F____id
  from  StrictFirstNameExtended F;

output view __Union__305__TempOp__1;

create view __Union__307__TempOp__0 as
  select  N.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          N.__auto__id as StrictFirstName_____sep_____N____id
  from  StrictFirstName N;

output view __Union__307__TempOp__0;

create view __Union__307__TempOp__1 as
  select  N.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          N.__auto__id as RelaxedFirstName1_____sep_____N____id
  from  RelaxedFirstName1 N;

output view __Union__307__TempOp__1;

create view __Union__307__TempOp__2 as
  select  N.firstname as firstname,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          N.__auto__id as RelaxedFirstName2_____sep_____N____id
  from  RelaxedFirstName2 N;

output view __Union__307__TempOp__2;

