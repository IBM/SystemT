module main;


import module metricsIndicator_externalTypes;


import view Indicator from module metricsIndicator_features as Indicator
;


import function udfToUpperCase from module metricsIndicator_udfs as udfToUpperCase
;




create view IndicatorUDF as
  select  R.metric as metric,
          R.amount as amount,
          R.match as match,
          udfToUpperCase(R.metric) as metric_normalized,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          R.__auto__id as Indicator_____sep_____R____id
  from  Indicator R;

output view IndicatorUDF;





create view output_table as
  select  "metricsIndicator_externalTypes.Input".lang as match,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          -1 as "metricsIndicator_externalTypes.Input_____sep_____metricsIndicator_externalTypes.Input____id"
  from  "metricsIndicator_externalTypes.Input" "metricsIndicator_externalTypes.Input";

output view output_table;



