module module2;


import view CapsWord from module module1;


import table NameTable from module module1;


create view First as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_REGEX' as __stmt__type,
    -1 as Document_____sep_____D____id,
    regex /[A-Z][a-z]+(\-[A-Z][a-z]+)?/
    with flags 'DOTALL'
    on D.text
    return group 0 as match
  from Document D;

output view First;

create view Person as
  select  CombineSpans(F.match, C.match) as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          F.__auto__id as First_____sep_____F____id,
          -1 as "module1.CapsWord_____sep_____C____id"
  from  First F,
        "module1.CapsWord" C
  where FollowsTok(F.match, C.match, 0, 0);

output view Person;

create view PersonWithGender as
  select  CombineSpans(F.match, C.match) as name,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          F.__auto__id as First_____sep_____F____id,
          -1 as "module1.CapsWord_____sep_____C____id",
          -1 as "module1.NameTable_____sep_____N____id"
  from  First F,
        "module1.CapsWord" C,
        "module1.NameTable" N
  where FollowsTok(F.match, C.match, 0, 0)
     and Equals(GetString(N.name), GetString(F.match));

output view PersonWithGender;





