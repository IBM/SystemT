module basicTest;


require document with columns
  text Text;

create function MyTableFunc(
  intArg Integer)
return table (stringVal Text, realVal Float)
external_name 'tableFnTestsUDFs.jar:com.ibm.test.udfs.BasicTableFunc!eval'
language java
deterministic
called on null input

;


create view TabFuncOutput as
  select  MyTableFunc.stringVal as stringVal,
          MyTableFunc.realVal as realVal,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          MyTableFunc.__auto__id as __TableFunction__1__Temp_____sep_____MyTableFunc____id
  from  __TableFunction__1__Temp MyTableFunc;

output view TabFuncOutput;



create view TabFuncOutput2 as
  select  F.stringVal as strval,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          F.__auto__id as __TableFunction__2__Temp_____sep_____F____id
  from  __TableFunction__2__Temp F;

output view TabFuncOutput2;



create view TabFuncOutput3 as
  select  F.stringVal as inVal,
          Case(Equals('Two', GetText(F.stringVal)), 'Yo', 'Moo') as outVal,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          F.__auto__id as __TableFunction__3__Temp_____sep_____F____id
  from  __TableFunction__3__Temp F;

output view TabFuncOutput3;



create view TabFuncOutput4 as
  select  MyTableFunc.stringVal as stringVal,
          MyTableFunc.realVal as realVal,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          MyTableFunc.__auto__id as __TableFunction__4__Temp_____sep_____MyTableFunc____id
  from  __TableFunction__4__Temp MyTableFunc;

output view TabFuncOutput4;



create view __TableFunction__1__Temp as
  select  T.* ,
          AutoID() as __auto__id,
          'STMT_TYPE_TABLE_FUNC' as __stmt__type,
          'MyTableFunc(3)' as __display__name,
          -1 as MyTableFunc_____sep_____MyTableFunc____id
  from  MyTableFunc(
  3
) T;

output view __TableFunction__1__Temp;

create view __TableFunction__2__Temp as
  select  T.* ,
          AutoID() as __auto__id,
          'STMT_TYPE_TABLE_FUNC' as __stmt__type,
          'MyTableFunc(4)' as __display__name,
          -1 as MyTableFunc_____sep_____F____id
  from  MyTableFunc(
  4
) T;

output view __TableFunction__2__Temp;

create view __TableFunction__3__Temp as
  select  T.* ,
          AutoID() as __auto__id,
          'STMT_TYPE_TABLE_FUNC' as __stmt__type,
          'MyTableFunc(2)' as __display__name,
          -1 as MyTableFunc_____sep_____F____id
  from  MyTableFunc(
  2
) T;

output view __TableFunction__3__Temp;

create view __TableFunction__4__Temp as
  select  T.* ,
          AutoID() as __auto__id,
          'STMT_TYPE_TABLE_FUNC' as __stmt__type,
          'MyTableFunc(Case(Equals(\'Hello\', \'World\'), 3, 4))' as __display__name,
          -1 as MyTableFunc_____sep_____MyTableFunc____id
  from  MyTableFunc(
  Case(Equals('Hello', 'World'), 3, 4)
) T;

output view __TableFunction__4__Temp;

