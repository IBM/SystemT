$Document = DocScan(
  (
    "text" => "Text",
    "label" => "Text"
  )
);
CreateDict(
    "name" => "firstnames.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false",
    "lemma_match" => "false"
);

$FirstName =
Select(
  MatchesRegex(
    RegexConst(
      /\A[A-Z][a-z]*\Z/,
      "JavaRegex"
    ),
    GetCol(
      "name"
    )
  ),
  Project(
    (
      "@@genericModule@@FirstName@@__auto__id" => "__auto__id",
      "@@genericModule@@FirstName@@__stmt__type" => "__stmt__type",
      "@@genericModule@@FirstName@@Document_____sep_____D____id" => "Document_____sep_____D____id",
      "name" => "name"
    ),
    ApplyFunc(
      IntConst(
        -1
      ) => "@@genericModule@@FirstName@@Document_____sep_____D____id",
      ApplyFunc(
        StringConst(
          "STMT_TYPE_EXTRACT_DICT"
        ) => "@@genericModule@@FirstName@@__stmt__type",
        ApplyFunc(
          AutoID()
 => "@@genericModule@@FirstName@@__auto__id",
          Dictionary("firstnames.dict" => "Default" , "D.text", "name",
            Project(
              (
                "text" => "D.text"
              ),
              $Document
            )
          )
        )
      )
    )
  )
);

$PhoneNumber =
Project(
  (
    "@@genericModule@@PhoneNumber@@__auto__id" => "__auto__id",
    "@@genericModule@@PhoneNumber@@__stmt__type" => "__stmt__type",
    "@@genericModule@@PhoneNumber@@Document_____sep_____D____id" => "Document_____sep_____D____id",
    "num" => "num"
  ),
  Union(
    ApplyFunc(
      IntConst(
        -1
      ) => "@@genericModule@@PhoneNumber@@Document_____sep_____D____id",
      ApplyFunc(
        StringConst(
          "STMT_TYPE_EXTRACT_REGEX"
        ) => "@@genericModule@@PhoneNumber@@__stmt__type",
        ApplyFunc(
          AutoID()
 => "@@genericModule@@PhoneNumber@@__auto__id",
          FastRegex(/\+?\([1-9]\d{2}\)\d{3}-\d{4}/, (0 => "num"), "DOTALL", "D.text",
            Project(
              (
                "text" => "D.text"
              ),
              $Document
            )
          )
        )
      )
    ),
    ApplyFunc(
      IntConst(
        -1
      ) => "@@genericModule@@PhoneNumber@@Document_____sep_____D____id",
      ApplyFunc(
        StringConst(
          "STMT_TYPE_EXTRACT_REGEX"
        ) => "@@genericModule@@PhoneNumber@@__stmt__type",
        ApplyFunc(
          AutoID()
 => "@@genericModule@@PhoneNumber@@__auto__id",
          FastRegex(/\+?[Xx]\.?\d{4,5}/, (0 => "num"), "DOTALL", "D.text",
            Project(
              (
                "text" => "D.text"
              ),
              $Document
            )
          )
        )
      )
    )
  )
);

$PersonPhoneAll =
Project(
  (
    "name.name" => "person",
    "phone.num" => "phone",
    "@@genericModule@@PersonPhoneAll@@personphone" => "personphone",
    "@@genericModule@@PersonPhoneAll@@__auto__id" => "__auto__id",
    "@@genericModule@@PersonPhoneAll@@__stmt__type" => "__stmt__type",
    "name.__auto__id" => "FirstName_____sep_____name____id",
    "phone.__auto__id" => "PhoneNumber_____sep_____phone____id"
  ),
  ApplyFunc(
    StringConst(
      "STMT_TYPE_SELECT"
    ) => "@@genericModule@@PersonPhoneAll@@__stmt__type",
    ApplyFunc(
      AutoID()
 => "@@genericModule@@PersonPhoneAll@@__auto__id",
      ApplyFunc(
        CombineSpans(
          GetCol(
            "name.name"
          ),
          GetCol(
            "phone.num"
          )
        ) => "@@genericModule@@PersonPhoneAll@@personphone",
        SortMergeJoin(
          Follows(
            GetCol(
              "name.name"
            ),
            GetCol(
              "phone.num"
            ),
            IntConst(
              0
            ),
            IntConst(
              40
            )
          ),
          Project(
            (
              "__auto__id" => "name.__auto__id",
              "name" => "name.name"
            ),
            $FirstName
          ),
          Project(
            (
              "__auto__id" => "phone.__auto__id",
              "num" => "phone.num"
            ),
            $PhoneNumber
          )
        )
      )
    )
  )
);

$__Minus__1__TempOp__1 =
Project(
  (
    "A.person" => "person",
    "A.phone" => "phone",
    "A.personphone" => "personphone",
    "@@genericModule@@__Minus__1__TempOp__1@@__auto__id" => "__auto__id",
    "@@genericModule@@__Minus__1__TempOp__1@@__stmt__type" => "__stmt__type",
    "A.__auto__id" => "PersonPhoneAll_____sep_____A____id"
  ),
  ApplyFunc(
    StringConst(
      "STMT_TYPE_SELECT"
    ) => "@@genericModule@@__Minus__1__TempOp__1@@__stmt__type",
    ApplyFunc(
      AutoID()
 => "@@genericModule@@__Minus__1__TempOp__1@@__auto__id",
      Project(
        (
          "__auto__id" => "A.__auto__id",
          "person" => "A.person",
          "personphone" => "A.personphone",
          "phone" => "A.phone"
        ),
        $PersonPhoneAll
      )
    )
  )
);

$__Minus__1__TempOp__2 =
Project(
  (
    "A.person" => "person",
    "A.phone" => "phone",
    "A.personphone" => "personphone",
    "@@genericModule@@__Minus__1__TempOp__2@@__auto__id" => "__auto__id",
    "@@genericModule@@__Minus__1__TempOp__2@@__stmt__type" => "__stmt__type",
    "A.__auto__id" => "PersonPhoneAll_____sep_____A____id",
    "P.__auto__id" => "PhoneNumber_____sep_____P____id"
  ),
  ApplyFunc(
    StringConst(
      "STMT_TYPE_SELECT"
    ) => "@@genericModule@@__Minus__1__TempOp__2@@__stmt__type",
    ApplyFunc(
      AutoID()
 => "@@genericModule@@__Minus__1__TempOp__2@@__auto__id",
      SortMergeJoin(
        ContainedWithin(
          GetCol(
            "P.num"
          ),
          SpanBetween(
            GetCol(
              "A.person"
            ),
            GetCol(
              "A.phone"
            )
          )
        ),
        Project(
          (
            "__auto__id" => "P.__auto__id",
            "num" => "P.num"
          ),
          $PhoneNumber
        ),
        Project(
          (
            "__auto__id" => "A.__auto__id",
            "person" => "A.person",
            "personphone" => "A.personphone",
            "phone" => "A.phone"
          ),
          $PersonPhoneAll
        )
      )
    )
  )
);

$_{"__Minus__1__Temp❡subquery1"} =
Difference(
  Project(
    (
      "Op.person" => "person",
      "Op.phone" => "phone",
      "Op.personphone" => "personphone"
    ),
    Project(
      (
        "person" => "Op.person",
        "personphone" => "Op.personphone",
        "phone" => "Op.phone"
      ),
      $__Minus__1__TempOp__1
    )
  ),
  Project(
    (
      "Op.person" => "person",
      "Op.phone" => "phone",
      "Op.personphone" => "personphone"
    ),
    Project(
      (
        "person" => "Op.person",
        "personphone" => "Op.personphone",
        "phone" => "Op.phone"
      ),
      $__Minus__1__TempOp__2
    )
  ));

$__Minus__1__Temp =
Project(
  (
    "__t.person" => "person",
    "__t.phone" => "phone",
    "__t.personphone" => "personphone"
  ),
  GroupBy(
  (
    GetCol(
      "__t.person"
    ),
    GetCol(
      "__t.phone"
    ),
    GetCol(
      "__t.personphone"
    )
  ),
  (

  ),
    Project(
      (
        "person" => "__t.person",
        "personphone" => "__t.personphone",
        "phone" => "__t.phone"
      ),
      $_{"__Minus__1__Temp❡subquery1"}
    )
  )
);

$PersonPhoneFiltered =
Project(
  (
    "Op.person" => "person",
    "Op.phone" => "phone",
    "Op.personphone" => "personphone",
    "@@genericModule@@PersonPhoneFiltered@@__auto__id" => "__auto__id",
    "Op.__auto__id" => "__Minus__1__TempOp__1_____sep_____Op____id",
    "@@genericModule@@PersonPhoneFiltered@@__stmt__type" => "__stmt__type"
  ),
  ApplyFunc(
    StringConst(
      "STMT_TYPE_MINUS"
    ) => "@@genericModule@@PersonPhoneFiltered@@__stmt__type",
    ApplyFunc(
      AutoID()
 => "@@genericModule@@PersonPhoneFiltered@@__auto__id",
      Select(
        And(
          Equals(
            GetCol(
              "Op.personphone"
            ),
            GetCol(
              "__t.personphone"
            )
          ),
          Equals(
            GetCol(
              "Op.phone"
            ),
            GetCol(
              "__t.phone"
            )
          )
        ),
        HashJoin(
          Equals(
            GetCol(
              "Op.person"
            ),
            GetCol(
              "__t.person"
            )
          ),
          Project(
            (
              "__auto__id" => "Op.__auto__id",
              "person" => "Op.person",
              "personphone" => "Op.personphone",
              "phone" => "Op.phone"
            ),
            $__Minus__1__TempOp__1
          ),
          Project(
            (
              "person" => "__t.person",
              "personphone" => "__t.personphone",
              "phone" => "__t.phone"
            ),
            $__Minus__1__Temp
          )
        )
      )
    )
  )
);

$__Consolidate__2__Temp__1 =
Project(
  (
    "PPF.person" => "person",
    "PPF.phone" => "phone",
    "PPF.personphone" => "personphone",
    "@@genericModule@@__Consolidate__2__Temp__1@@__auto__id" => "__auto__id",
    "@@genericModule@@__Consolidate__2__Temp__1@@__stmt__type" => "__stmt__type",
    "PPF.__auto__id" => "PersonPhoneFiltered_____sep_____PPF____id",
    "PPF.personphone" => "__consolidate__target"
  ),
  ApplyFunc(
    StringConst(
      "STMT_TYPE_SELECT"
    ) => "@@genericModule@@__Consolidate__2__Temp__1@@__stmt__type",
    ApplyFunc(
      AutoID()
 => "@@genericModule@@__Consolidate__2__Temp__1@@__auto__id",
      Project(
        (
          "__auto__id" => "PPF.__auto__id",
          "person" => "PPF.person",
          "personphone" => "PPF.personphone",
          "phone" => "PPF.phone"
        ),
        $PersonPhoneFiltered
      )
    )
  )
);

$__Consolidate__2__Temp__2 =
Project(
  (
    "__t1.person" => "person",
    "__t1.phone" => "phone",
    "__t1.personphone" => "personphone",
    "__t1.__consolidate__target" => "__consolidate__target"
  ),
  Consolidate(
    "ContainedWithin",
    GetCol(
      "__t1.__consolidate__target"
    ),
    Project(
      (
        "__consolidate__target" => "__t1.__consolidate__target",
        "person" => "__t1.person",
        "personphone" => "__t1.personphone",
        "phone" => "__t1.phone"
      ),
      $__Consolidate__2__Temp__1
    )
  )
);

$PersonPhone =
Project(
  (
    "__t2.person" => "person",
    "__t2.phone" => "phone",
    "__t2.personphone" => "personphone",
    "@@genericModule@@PersonPhone@@__auto__id" => "__auto__id",
    "@@genericModule@@PersonPhone@@__Consolidate__2__Temp__1_____sep_______t1____id" => "__Consolidate__2__Temp__1_____sep_______t1____id",
    "@@genericModule@@PersonPhone@@__stmt__type" => "__stmt__type"
  ),
  GroupBy(
  (
    GetCol(
      "__t2.person"
    ),
    GetCol(
      "__t2.phone"
    ),
    GetCol(
      "__t2.personphone"
    )
  ),
  (
    List(
      GetCol(
        "__t1.__auto__id"
      )
    ) => "@@genericModule@@PersonPhone@@__Consolidate__2__Temp__1_____sep_______t1____id"
  ),
    ApplyFunc(
      StringConst(
        "STMT_TYPE_CONSOLIDATE"
      ) => "@@genericModule@@PersonPhone@@__stmt__type",
      ApplyFunc(
        AutoID()
 => "@@genericModule@@PersonPhone@@__auto__id",
        SortMergeJoin(
          ContainedWithin(
            GetCol(
              "__t1.__consolidate__target"
            ),
            GetCol(
              "__t2.__consolidate__target"
            )
          ),
          Project(
            (
              "__auto__id" => "__t1.__auto__id",
              "__consolidate__target" => "__t1.__consolidate__target"
            ),
            $__Consolidate__2__Temp__1
          ),
          Project(
            (
              "__consolidate__target" => "__t2.__consolidate__target",
              "person" => "__t2.person",
              "personphone" => "__t2.personphone",
              "phone" => "__t2.phone"
            ),
            $__Consolidate__2__Temp__2
          )
        )
      )
    )
  )
);

Output: $FirstName, $PersonPhone, $PersonPhoneAll, $PersonPhoneFiltered, $PhoneNumber, $__Consolidate__2__Temp__1, $__Consolidate__2__Temp__2, $__Minus__1__Temp, $__Minus__1__TempOp__1, $__Minus__1__TempOp__2;
