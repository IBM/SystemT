module genericModule;


create view FirstName as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_DICT' as __stmt__type,
    -1 as Document_____sep_____D____id,
    dictionary 'firstnames.dict'
    on D.text as name
  from Document D
  having MatchesRegex(/\A[A-Z][a-z]*\Z/, name);

output view FirstName;

create view PhoneNumber as
  extract AutoID() as __auto__id,
    'STMT_TYPE_EXTRACT_REGEX' as __stmt__type,
    -1 as Document_____sep_____D____id,
    regexes /\+?\([1-9]\d{2}\)\d{3}-\d{4}/
    and /\+?[Xx]\.?\d{4,5}/
    with flags 'DOTALL'
    on D.text
    return group 0 as num
  from Document D;

output view PhoneNumber;

create view PersonPhoneAll as
  select  name.name as person,
          phone.num as phone,
          CombineSpans(name.name, phone.num) as personphone,
          AutoID() as __auto__id,
          'STMT_TYPE_SELECT' as __stmt__type,
          name.__auto__id as FirstName_____sep_____name____id,
          phone.__auto__id as PhoneNumber_____sep_____phone____id
  from  FirstName name,
        PhoneNumber phone
  where Follows(name.name, phone.num, 0, 40);

output view PersonPhoneAll;







