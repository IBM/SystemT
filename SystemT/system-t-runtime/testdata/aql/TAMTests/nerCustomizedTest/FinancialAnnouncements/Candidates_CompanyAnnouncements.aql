/*******************************************************************************
* Copyright IBM
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

module FinancialAnnouncements;

create view FMReport as
  select FM.year as year, FM.quarter as quarter, FM.period as period, FM.metric as metric, CA.amountrange1 as amountrange1, CA.amountrange2 as amountrange2, CA.amountrange as amountrange, CombineSpans(FM.match,CA.amountrange) as value
  from FinancialMetricOptionalPeriod FM, CurrencyAmountOptionalRangePair CA
  where FollowsTok(FM.match,CA.amountrange,0,3);

create view ConsensusClue as
  extract dictionary 'ConsensusBasedPositiveCluesForFinancialAnnouncements'
  on D.text as match
  from DocumentText D;

create view ConsensusEstimate1 as
  select CA.amountrange as range, CombineSpans(C.match, CA.amountrange) as match
  from ConsensusClue C, CurrencyAmountOptionalRange CA
  where FollowsTok(C.match, CA.amountrange,0,2);

create view ConsensusEstimate2 as
  select CA.amountrange as range, CombineSpans( CA.amountrange, C.match) as match
  from ConsensusClue C, CurrencyAmountOptionalRange CA
  where FollowsTok( CA.amountrange,C.match,0,2);

create view ConsensusEstimate as
  (select R.range as range, R.match as match from ConsensusEstimate1 R) 
  union all
  (select R.range as range, R.match as match from ConsensusEstimate2 R);

create view FMReportAndEstimate as
  select FM.year as year, FM.quarter as quarter, FM.period as period, FM.metric as metric, FM.amountrange1 as amountrange1, FM.amountrange2 as amountrange2,CE.range as estimaterange, CombineSpans(FM.value, CE.match) as match
  from FMReport FM, ConsensusEstimate CE
  where FollowsTok(FM.value, CE.match,0,10);

create view FMReportOptionalEstimateCandidates as
  (select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.amountrange1 as amountrange1, R.amountrange2 as amountrange2, R.estimaterange as estimaterange, R.match as match from FMReportAndEstimate R)
  union all
  (select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.amountrange1 as amountrange1, R.amountrange2 as amountrange2, RightContext(R.amountrange,0) as estimaterange, R.value as match from FMReport R);

create view FMReportOptionalEstimate as
  select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.amountrange1 as amountrange1, R.amountrange2 as amountrange2, R.estimaterange as estimaterange, R.match as match
  from FMReportOptionalEstimateCandidates R
  consolidate on R.match;

create view CompanyInfoAnnouncementCandidates as
select C.exchange as exchange, C.ticker as ticker, C.companyname as companyname, C.rule as rule, C.match as match
from CompanyInfo C
where Not(ContainsDict('NegativeCluesInLeftContextForFinancialAnnouncements',LeftContextTok(C.companyname,2))) and
	  Not(ContainsDict('NegativeCluesInRightContextForFinancialAnnouncements',RightContextTok(C.companyname,2))) and
	  Not(ContainsRegex(/[\r\n]/,RightContext(C.match,5))) and
	  Not(ContainsRegex(/[-:]/,RightContextTok(C.match,2)));

create view FMReportOptionalEstimateWithCompanyDirectCandidates as
  select FM.year as year, FM.quarter as quarter, FM.period as period, FM.metric as metric, FM.amountrange1 as amountrange1, FM.amountrange2 as amountrange2, FM.estimaterange as estimaterange,C.companyname as companyname, C.exchange as exchange, C.ticker as ticker, CombineSpans(C.companyname, FM.match) as match
  from FMReportOptionalEstimate FM, CompanyInfoAnnouncementCandidates C
  where FollowsTok(C.ticker, FM.match, 0, 5);
  
create view FMReportOptionalEstimateWithCompanyDirectToDelete as
  select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.amountrange1 as amountrange1, R.amountrange2 as amountrange2, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match
  from FMReportOptionalEstimateWithCompanyDirectCandidates R, CompanyInfoAnnouncementCandidates C
  where Contains(R.match, C.companyname) and FollowsTok(R.companyname, C.companyname,0,100);

create view FMReportOptionalEstimateWithCompanyDirect as
(select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.amountrange1 as amountrange1, R.amountrange2 as amountrange2, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match
from FMReportOptionalEstimateWithCompanyDirectCandidates R )
minus 
(select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.amountrange1 as amountrange1, R.amountrange2 as amountrange2, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match
from FMReportOptionalEstimateWithCompanyDirectToDelete R);
  
create view FMReportOptionalEstimateWithCompanyExpandedCandidate as
  select FM.year as year, FM.quarter as quarter, FM.period as period, FM.metric as metric, FM.amountrange1 as amountrange1, FM.amountrange2 as amountrange2, FM.estimaterange as estimaterange,FMC.companyname as companyname, FMC.exchange as exchange, FMC.ticker as ticker,  FMC.match as previousmatch, CombineSpans(FMC.match, FM.match) as match
  from FMReportOptionalEstimate FM, FMReportOptionalEstimateWithCompanyDirect FMC 
  where FollowsTok(FMC.match, FM.match, 0, 5);

create view FMReportOptionalEstimateWithCompanyExpandedToDelete as
  select FMC.year as year, FMC.quarter as quarter, FMC.period as period, FMC.metric as metric, FMC.amountrange1 as amountrange1, FMC.amountrange2 as amountrange2, FMC.estimaterange as estimaterange,FMC.companyname as companyname, FMC.exchange as exchange, FMC.ticker as ticker, C.companyname as overlappingcompany, FMC.match as match
  from FMReportOptionalEstimateWithCompanyExpandedCandidate FMC,  CompanyInfoAnnouncementCandidates C 
  where Contains(FMC.match, C.companyname) and FollowsTok(FMC.previousmatch, C.companyname, 0, 100);

create view FMReportOptionalEstimateWithCompanyExpanded as
 ( select FMC.year as year, FMC.quarter as quarter, FMC.period as period, FMC.metric as metric, FMC.amountrange1 as amountrange1, FMC.amountrange2 as amountrange2, FMC.estimaterange as estimaterange,FMC.companyname as companyname, FMC.exchange as exchange, FMC.ticker as ticker, FMC.match as match from FMReportOptionalEstimateWithCompanyExpandedCandidate FMC )
  minus
  (select FMC.year as year, FMC.quarter as quarter, FMC.period as period, FMC.metric as metric, FMC.amountrange1 as amountrange1, FMC.amountrange2 as amountrange2,FMC.estimaterange as estimaterange,FMC.companyname as companyname, FMC.exchange as exchange, FMC.ticker as ticker, FMC.match as match from FMReportOptionalEstimateWithCompanyExpandedToDelete FMC );

create view FMReportOptionalEstimateWithCompany as
 ( select FMC.year as year, FMC.quarter as quarter, FMC.period as period, FMC.metric as metric, FMC.amountrange1 as amountrange1, FMC.amountrange2 as amountrange2, FMC.estimaterange as estimaterange,FMC.companyname as companyname, FMC.exchange as exchange, FMC.ticker as ticker, FMC.match as match from FMReportOptionalEstimateWithCompanyDirect FMC )
  union all
  (select FMC.year as year, FMC.quarter as quarter, FMC.period as period, FMC.metric as metric, FMC.amountrange1 as amountrange1, FMC.amountrange2 as amountrange2, FMC.estimaterange as estimaterange,FMC.companyname as companyname, FMC.exchange as exchange, FMC.ticker as ticker, FMC.match as match from FMReportOptionalEstimateWithCompanyExpanded FMC );

create view FMReportOptionalEstimateWithCompanyFutureAll as
  select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.amountrange1 as amountrange1, R.amountrange2 as amountrange2, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match
  from FMReportOptionalEstimateWithCompany R
  where Or(ContainsDict('FutureBasedPositiveCluesForFinancialAnnouncements',SpanBetween(R.companyname, R.metric)),
         ContainsDict('GuideBasedPositiveCluesForFinancialAnnouncements',RightContext(R.metric,10))) ;

create view FMReportOptionalEstimateWithCompanyFuture1 as
  select R.year as year, R.quarter as quarter,R.period as period, R.metric as metric, R.amountrange1 as originalamountrange, R.amountrange2 as newamountrange, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match
  from FMReportOptionalEstimateWithCompanyFutureAll R
  where ContainsRegex(/.+/,R.amountrange2);
 
create view FMReportOptionalEstimateWithCompanyFuture2 as
  select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, '' as originalamountrange, R.amountrange1 as newamountrange, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match
  from FMReportOptionalEstimateWithCompanyFutureAll R
  where Not(ContainsRegex(/.+/,R.amountrange2));
 
create view FMReportOptionalEstimateWithCompanyFuture as
(select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.originalamountrange as originalamountrange, R.newamountrange as newamountrange, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match from FMReportOptionalEstimateWithCompanyFuture1 R)
union all
(select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.originalamountrange as originalamountrange, R.newamountrange as newamountrange, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match from FMReportOptionalEstimateWithCompanyFuture2 R);
  
create view FMReportOptionalEstimateWithCompanyPast as
(select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.amountrange1 as amountrange1, R.amountrange2 as amountrange2, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match  from FMReportOptionalEstimateWithCompany R)
minus 
(select R.year as year, R.quarter as quarter, R.period as period, R.metric as metric, R.amountrange1 as amountrange1, R.amountrange2 as amountrange2, R.estimaterange as estimaterange,R.companyname as companyname, R.exchange as exchange, R.ticker as ticker, R.match as match  from FMReportOptionalEstimateWithCompanyFutureAll R);