/*******************************************************************************
* Copyright IBM
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

module City;

import view County_ from module County as County_;
import view AddressFinal from module Address as AddressFinal;

create view CityCounty as
select CC.match as city, C.county as county, C.stateorprovince as stateorprovince, C.country as country, C.continent as continent, CombineSpans(CC.match, C.reference) as reference
from CityConsolidatedValid CC,
	 County_ C
where FollowsTok(CC.match, C.county, 0, 1)
  and MatchesRegex(/\s*[,]?\s*/, SpanBetween(CC.match, C.county))
  and Not(ContainsRegex(/[\n\r]/, SpanBetween(CC.match, C.county)));
 
create view CityCandidates as
	(select C.city as city, '' as county, C.state as stateorprovince, C.country as country, C.continent as continent, C.reference as reference
	 from CityStateCountryValid C
	 where Equals(GetText(C.subtype), 'city'))
	 union all
	 (select A.city as city, '' as county, A.stateorprovince as stateorprovince, '' as country, '' as continent, A.city as reference
	 from AddressFinal A)
	 union all
	 (select C.city as city, C.county as county, C.stateorprovince as stateorprovince, C.country as country, C.continent as continent, C.reference as reference
	 from CityCounty C);
	 
create view City_ as
select C.city as city, C.stateorprovince as stateorprovince, C.country as country, C.continent as continent, C.reference as reference
from CityCandidates C
consolidate on C.reference;
