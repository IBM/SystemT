/*******************************************************************************
* Copyright IBM
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

module Town;

import view CapsPlace from module Linguistics as CapsPlace;

create view TownCandidates1 as
select C.match as match
from TownLeftClue CC,
     CapsPlace C	 
where FollowsTok(CC.match, C.match, 0, 0)
  and Not(ContainsRegex(/[\r\n\t]/, SpanBetween(CC.match, C.match)))
  and Not(MatchesRegex(/\s*\p{L}\p{M}*.*/, RightContext(C.match, 5)));
  
create view TownCandidates2 as
select CombineSpans(C.match, RC.match) as match
from CapsPlace C,
     TownRightClue RC
where FollowsTok(C.match, RC.match, 0, 0)
  and Not(ContainsRegex(/[\r\n\t]/, SpanBetween(C.match, RC.match)));

create view TownCandidates as
	(select C.* from TownCandidates1 C)
	union all
	(select C.* from TownCandidates2 C);
	
create view TownConsolidated as
select C.match as town
from TownCandidates C
consolidate on C.match;
	