/*******************************************************************************
* Copyright IBM
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

module Date;

import view FourDigits from module Time as FourDigits;
import view TwoDigitsInterval from module Time as TwoDigitsInterval;
import view WKDay from module Time as WKDay;


create view DateInterval1 as
	select
 		CombineSpans(tdi.match, m.match) as match
	from
		TwoDigitsInterval tdi,
		Month m
 	where  
 		FollowsTok(tdi.match, m.match, 0, 0);
 		
 		
-- Will handle date intervals such as  April 7-8 and  October 15-18 2001

create view DateInterval2 as
	select
 		CombineSpans(m.match, tdi.match) as match
	from
		Month m,
		TwoDigitsInterval tdi
 	where  
 		FollowsTok(m.match, tdi.match, 0, 0);
 		
 		
create view DateIntervalWithoutYear as
	(select d.match as match from DateInterval1 d)
	union all
	(select d.match as match from DateInterval2 d);
	
create view DateIntervalWithYear as
	select
		CombineSpans(d.match, y.match) as match
	from 
		DateIntervalWithoutYear d,
		FourDigits y
	where
		FollowsTok(d.match, y.match, 0, 1)
	and MatchesRegex(/\s*[,]?\s*/, SpanBetween(d.match, y.match));
		
create view DateIntervalWithOptionalYear as
	(select d.match as match from DateIntervalWithoutYear d)
	union all
	(select d.match as match from DateIntervalWithYear d);

create view Date1to3 as
select R.match as match
from DateIntervalWithOptionalYear R
consolidate on R.match;

	
-- Pattern : 4th March

create view Date11 as
	select 	
		CombineSpans(dn.match, m.match) as match
	from
		Month m,
		DateNum dn
	where		
		FollowsTok(dn.match, m.match, 0, 1)
		-- Sudarshan regex : 10/12/2011 - backreference in lines 115 and 136 
	and MatchesRegex(/( )*[,]?( )*(of)?( )*/,SpanBetween(dn.match, m.match));


-- Pattern : May, 3rd

create view Date12 as
	select 	
		CombineSpans(m.match, dn.match) as match
	from
		Month m,
		DateNum dn
	where		
		FollowsTok(m.match, dn.match, 0, 1)
	and MatchesRegex(/( )*[,]?( )*/,SpanBetween(m.match, dn.match));


-- Pattern : May 4th,  2001

create view Date6 as
	select 	
		CombineSpans(d.match, fd.match) as match
	from
		Date12 d,
		FourDigits fd
	where
		FollowsTok(d.match, fd.match, 0, 1)
	and MatchesRegex(/( )*[,]?( )*/,SpanBetween(d.match, fd.match));

-- Pattern : 4th May, 2001

create view Date7 as
	select 	
		CombineSpans(d.match, fd.match) as match
	from
		Date11 d,		
		FourDigits fd
	where		
		FollowsTok(d.match, fd.match, 0, 1)
	and MatchesRegex(/\s*[,]?\s*/,SpanBetween(d.match, fd.match));
	
-- Pattern : Friday, May 4, 2001 
-- Pattern : 4th May,  2001

create view Date4to5 as
	select 	
		CombineSpans(wkd.match, d.match) as match
	from 
		WKDay wkd,
		Date7 d
	where
		FollowsTok(wkd.match, d.match, 0, 2)
	and MatchesRegex(/( )*[,]?( )*(the)?( )*/,SpanBetween(wkd.match, d.match));

-- Pattern : May,  2001

create view Date8 as
	select 	
		CombineSpans(m.match, fd.match) as match
	from
		Month m,		
		FourDigits fd
	where		
		FollowsTok(m.match, fd.match, 0, 1)
	and MatchesRegex(/( )*[,]?( )*/,SpanBetween(m.match, fd.match));

-- Pattern : Wednesday, 4th March

create view Date9 as
	select 	
		CombineSpans(wkd.match, d.match) as match
	from
		WKDay wkd,		
		Date11 d
	where		
		FollowsTok(wkd.match, d.match, 0, 2)
	and MatchesRegex(/[\ ]*[,]?[\ ]*(the)?[\ ]*/,SpanBetween(wkd.match, d.match));

-- Pattern : Wednesday, May, 3rd

create view Date10 as
	select 	
		CombineSpans(wkd.match, d.match) as match
	from
		WKDay wkd,		
		Date12 d
	where		
		FollowsTok(wkd.match, d.match, 0, 2)
	and MatchesRegex(/[\ ]*[,]?[\ ]*(the)?[\ ]*/,SpanBetween(wkd.match, d.match));

create view Date13 as
	select
		CombineSpans(y1.match, y2.match) as match
	from
		FourDigits y1,
		FourDigits y2
	where
		FollowsTok(y1.match, y2.match, 1, 1)
	and MatchesRegex(/\s*-\s*/, SpanBetween(y1.match, y2.match));
	
-- All number date format, including iSO 8601 format for calendar dates 
-- standard full format in the form of YYYY-MM-DD or YY-MM-DD only

create view Date14 as
select
	R.match as match
from
   (extract regex /(\p{Nd}{1,2}|\p{Nd}{4})[\-\/]\p{Nd}{1,2}[\-\/]\p{Nd}{1,4}/ 
 		on between 1 and 12 tokens in D.text 
 			as match 
 	  from DocumentText D) R;
    
-- ISO 8601 format for week dates in the form of YYYY-W##-# (e.g. 2009-W01-1)

create view Date15 as
extract
	regex /\p{Nd}{4}[\-][W]\p{Nd}{2}[\-][1-9]/ on D.text as match
from DocumentText D;

    
---1.Complete date plus hours and minutes:	
--		YYYY-MM-DDThh:mmTZD (eg 1997-07-16T19:20+01:00)
---2.Complete date plus hours, minutes and seconds:
--      YYYY-MM-DDThh:mm:ssTZD (eg 1997-07-16T19:20:30+01:00)
---3. Complete date plus hours, minutes, seconds and a decimal fraction of a second
--      YYYY-MM-DDThh:mm:ss.sTZD (eg 1997-07-16T19:20:30.45+01:00)

create view Date16 as
extract
	regex /\p{Nd}{4}-[0-1]\p{Nd}-[0-3]\p{Nd}(T|[ ]{1,2})[0-2]\p{Nd}:[0-5]\p{Nd}(:[0-5]\p{Nd})?(\.\p{Nd}{1,3})?Z?([+\-][0-5]\p{Nd}:[0-5]\p{Nd})?/ 
	on between 11 and 15 tokens in D.text as match
from DocumentText D;

---------------------------------------------------------------------------
-- Union all Dates
---------------------------------------------------------------------------
create view DateAll as
	(select d.match as match from Date1to3 d)
	union all 
	(select d.match as match from Date4to5 d)
	union all 
	(select d.match as match from Date6 d)
	union all 
	(select d.match as match from Date7 d)
	union all 
	(select d.match as match from Date8 d)
	union all 
	(select d.match as match from Date9 d)
	union all 
	(select d.match as match from Date10 d)
	union all 
	(select d.match as match from Date11 d)
	union all 
	(select d.match as match from Date12 d)
	union all 
	(select d.match as match from Date13 d)
	union all
	(select d.match as match from Date14 d)
	union all
	(select d.match as match from Date15 d)
	union all
	(select d.match as match from Date16 d);

