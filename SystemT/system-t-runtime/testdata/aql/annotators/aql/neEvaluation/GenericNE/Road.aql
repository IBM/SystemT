-- Yunyao: created on 03/29/2010 to extract road

create view RoadSuffix as
	extract
    dictionaries
        'location/roads/roadSuffix.dict'
        on D.text   
        as match     
        from Doc D;
 
create view CapsRoadCandidate as
    select
        R.match as match
    from
       RegexTok(/(\p{Upper}[\p{Lower}\&\.-\/\d]{1,20})/, 25, Doc.text) R;
       
create view CapsRoad as
	(select C.* from CapsRoadCandidate C)
	minus
	(select F.* from FacilityFilter F);
          
create view RoadAll as
select C.match as road 
from CapsRoad C,
	 RoadSuffix F
where FollowsTok(C.match, F.match, 0, 0)
  and Not(ContainsRegex(/[\n\r\t]/, SpanBetween(C.match, F.match)))
  -- don't match the start of a sentence
  and MatchesRegex(/\p{Ll}\p{M}*.*/, LeftContextTok(C.match, 1));

create view RoadValid as
	(select F.road as road from RoadAll F)
	minus
	(select F.facility as road from FacilityInvalid F);
	
create view Road as
select F.* 
from  RoadValid F
consolidate on F.road;

--output view Road;