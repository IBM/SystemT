-- Yunyao: created on 08/14/2009 to identify
-- 		   1. major international regions such as Korean Peninsula 
-- 		   2. major general regions such as New England (excluding City, State, Country)
--         3. landmarks such as Wall Street and Time Square

--include 'detag.aql';
--include 'GenericNE/serverSideSpecific/AdditionalDictsForAddress.aql';
--include 'GenericNE/DictsForAddress.aql';
--include 'GenericNE/CityStateCountry.aql';


create view InternationalRegionExtended as
select CombineSpans(D.match, R.match) as match
from Direction D,
	 InternationalRegionCandidate R
where FollowsTok(D.match, R.match, 0, 0);

create view InternationalRegionAll as
	(select R.match as match from InternationalRegionCandidate R)
	union all
	(select R.match as match from InternationalRegionExtended R);
	
create view InternationalRegion as
select R.match as match
from InternationalRegionAll R
consolidate on R.match
using 'LeftToRight';
	
--output view InternationalRegionCandidate;

---------------------------------------
--  general regions of major countries
---------------------------------------
create view DomesticRegion1 as
extract
    dictionaries
        --'location/regions/regions-US.dict'
        'location/regions/loc_usa_regions_en.dict' 
    --and 'location/regions/regions-UK.dict'
    and 'location/regions/loc_uk_regions_en.dict'
    --and 'location/regions/regions-china.dict'
    and 'location/regions/loc_china_regions_en.dict'
    --and 'location/regions/regions-russia.dict'
    and 'location/regions/loc_russia_regions_en.dict'
    --and 'location/regions/regions-canada.dict'
    and 'location/regions/loc_canada_regions_en.dict'
    --and 'location/regions/regions-india.dict'
    and 'location/regions/loc_india_regions_en.dict' 
--NOTE: more dictionaries can be added here
--    with flags 'Exact'
        on D.text   
        as match     
        from Doc D
        having MatchesRegex(/\p{Lu}\p{M}*.+/, match);


-- direction + country is a region
-- consolidate the country matches first
create view CountryCandidateConsolidated as
select C.match as match
from CountryCandidate C
consolidate on C.match;

create view DomesticRegion2 as
select CombineSpans(D.match, C.match) as match
from   Direction D, 
	   CountryCandidateConsolidated C
where  FollowsTok(D.match, C.match, 0, 0) 
   and Not(ContainsRegex(/[\n\r]/, SpanBetween(D.match, C.match)))
   -- Avoid matches such as "North Korea, South"
   and Not(ContainsRegex(/[,]/, C.match));
   
-- direction + state/province is a region
create view DomesticRegion3 as
select CombineSpans(D.match, S.match) as match
from   Direction D,
       StatesFromMajorCountries S
where  FollowsTok(D.match, S.match, 0, 0)
and Not(ContainsRegex(/[\n\r]/, SpanBetween(D.match, S.match)));

-- direction + city is a region 
create view DomesticRegion4 as
select CombineSpans(D.match, C.match) as match
from   Direction D,
	   CityAll C
where  FollowsTok(D.match, C.match, 0, 0)
and Not(ContainsRegex(/[\n\r]/, SpanBetween(D.match, C.match)));

create view DomesticRegionAll as
	(select D.match as match from DomesticRegion1 D)
	union all
	(select D.match as match from DomesticRegion2 D)
	union all
	(select D.match as match from DomesticRegion3 D)
	union all
	(select D.match as match from DomesticRegion4 D);
	
create view DomesticRegion as
select D.match as match
from   DomesticRegionAll D
consolidate on D.match;


-- identify region based on context clue
create view RegionClue as
extract
    dictionaries
	--'location/regions/regionSuffix.dict'
	'location/regions/loc_regions_suffix_case_en.dict'
    with flags 'Exact'
     	on D.text
	as match
	from Doc D;

-- Sudarshan regex : added 10/12/2011 : line 115 - extend regex to also look for combination marks
create view RegionWithClue as
select C.match as match
from CapsPlace C,
     RegionClue R
where FollowsTok(C.match, R.match, 0, 0)
  --and Not(MatchesRegex(/\p{Lu}.*/, RightContextTok(C.match, 1)));
  and Not(MatchesRegex(/\p{Lu}\p{M}*.*/, RightContextTok(C.match, 1)));

----------------------------------------------------------
-- Extract Landmarks
----------------------------------------------------------
create view Landmark as
extract
    dictionaries
        --'location/landmarks/financialDistrict.dict'
        'location/landmarks/loc_ldmrk_fin_case_en.dict' 
    --and 'location/landmarks/square.dict'
    and 'location/landmarks/loc_ldmrk_square_case_en.dict'
    --and 'location/landmarks/politicalLandmarks.dict'
    and 'location/landmarks/loc_ldmrk_politics_case_en.dict'
    --and 'location/landmarks/worldHeritageSite.dict'
    and 'location/landmarks/loc_ldmrk_heritage_case_en.dict'
    --and 'location/landmarks/sportsVenue.dict'
    and 'location/landmarks/loc_ldmrk_sports_case_en.dict'
    --and 'location/landmarks/techCenter.dict'
    and 'location/landmarks/loc_ldmrk_tech_case_mixed.dict'
    with flags 'Exact'
        on D.text   
        as match     
        from Doc D;
----------------------------------------------------------
-- Union all regions
----------------------------------------------------------
	
create view RegionCandidateAll as
	(select R.match as match from InternationalRegion R)
	union all
	(select R.match as match from DomesticRegion R)
	union all
	(select L.match as match from Landmark L)
	union all
	(select R.match as match from RegionWithClue R);
	
create view RegionCandidate as
select R.match as match
from   RegionCandidateAll R
consolidate on R.match;
	
--output view RegionCandidate;
	