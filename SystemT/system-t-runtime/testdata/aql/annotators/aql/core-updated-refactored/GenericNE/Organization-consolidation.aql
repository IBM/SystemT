create view OrgWithinUrlEmailPlace as
select O.org as org
from OrgSentence O, UrlEmailPlace UEP
where Contains (UEP.match, O.org);


create view OrgOverlapTime as
select O.org as org
from OrgSentence O, Times t
where Overlaps(t.match, O.org);

-- Laura: added 04/30/2010 to avoind partial matches such as
-- United [States Holocaust Memorial Museum] 
-- U.[S. Department of Education]
create view OrgOverlapNotContainedCountry as
select O.org as org
from OrgSentence O, CountryCandidate C
where Overlaps(O.org, C.match)
  and Not(Contains(O.org, C.match));
  
-- Laura: added to avoid matches such as 
-- Germany's Daimler Benz Aerospace
-- Britain's Office of Fair Trading
-- South Korea's Samsung Aerospace Industries
create view CountryOrg as
select O.org as org
from OrgSentence O, CountryCandidate C
where Contains(O.org, C.match)
  and Equals(GetBegin(O.org), GetBegin(C.match))
  and ContainsRegex(/['[\u0093\u0094\u2018\u2019\u0022\u0027\u00AB\u00BB\u201A\u201B\u201C\u201D\u201E\u301D\u301E\u301F]]\s*[Ss]/, RightContextTok(C.match, 2));--'
 
-- Laura: remove final dot from match of the form "<Org> ."
create view OrgWithSpaceDot as
select O.org as invalidorg, Chomp(SpanBetween(LeftContext(O.org,0), O.finaldot)) as validorg
from
(
	extract O.org as org,
		regex /\s+\.\z/ on O.org as finaldot
	from OrgSentence O
) O;

include 'InvalidOrg-union.aql';
	
create view ValidOrg as 
(
	(select O.org as org from OrgSentence O)
	union all
	(select O.validorg as org from OrgWithSpaceDot O)
)
minus
(select OP.org as org from InvalidOrg OP);
 
create view ValidOrgConsolidated as
select C.org as org
--from Consolidate(OrgSentence.org) C;
--from Consolidate(ValidOrg.org) C;
from ValidOrg C
consolidate on C.org;

create view FinalOrgExpanded1 as
select CombineSpans(CO.match, C.org) as org
from ValidOrgConsolidated C,
	 AnyCapsOrg CO
--where ContainsDict('OrgPartnershipDict', C.org)
where ContainsDict('orgs/org_com_type_case_en.dict', C.org)
 and FollowsTok(CO.match, C.org, 0, 2)
 --and MatchesRegex(/\s*,?\s*&?\s*/, SpanBetween(CO.match, C.org));
 --Yunyao: avoid line break or tab and allow the missing of '&' if the extension is the beginning of a line 
 -- TODO: allow the missing of & if the extension is the begining of a sentence
 -- Sudarshan regex : 10/12/2011 - backreference on line 70
 and MatchesRegex(/([ ]*,?[ ]*&[ ]*)|(^[ ]*,?[ ]*&?[ ]*)/, SpanBetween(CO.match, C.org));
 
 
--Yunyao: added 03/09/2009 to allow expansion with strong suffix/type 
create view FinalOrgExpanded2 as
select CombineSpans(C.org, CL.match) as org
from ValidOrgConsolidated C,
	 OrgClueStCaps CL
where FollowsTok(C.org, CL.match,  0, 2)
--Yunyao: avoid line break or tab and allow the missing of '&' if the extension is the beginning of a line 
-- TODO: allow the missing of & if the extension is the begining of a sentence
-- Sudarshan regex : 10/12/2011 - backreference on line 82
 and MatchesRegex(/([ ]*,?[ ]*&[ ]*)|(^[ ]*,?[ ]*&?[ ]*)/, SpanBetween(C.org, CL.match));

--Yunyao: added 03/11/2009 to allow expansion for organization to the left with &
create view FinalOrgExpanded3 as
select CombineSpans(CO.match, C.org) as org
from ValidOrgConsolidated C,
	 AnyCapsOrg CO
where FollowsTok(CO.match, C.org, 1, 1)
-- Sudarshan regex : 10/12/2011 - backreference on line 91
 and MatchesRegex(/([ ]*&[ ]*)|(^[ ]*&?[ ]*)/, SpanBetween(CO.match, C.org));
 
--Laura: added 06/30/2010 to allow expansion for governmental organization to the left with Nationality
create view ValidOrgGovConsolidated as
select O.*
from ValidOrgConsolidated O
--where ContainsDicts('orgs/industryType/industryTypeGovernment_suffix.dict', 'orgs/industryType/industryTypeGovernment_prefix.dict', O.org);
where ContainsDicts('orgs/industryType/org_govt_group_suffix_case_en.dict', 'orgs/industryType/org_govt_group_prefix_case_en.dict', O.org);

create view NationalityAndOrgGov as
extract 
	pattern <N.match> <O.org> as org
from Nationalities N, ValidOrgGovConsolidated O;

--Laura: added 06/30/2010 to allow expansion for governmental organization to the left with Country
create view CountryAndOrgGov as
extract 
	pattern <C.match> <O.org> as org
from CountryCandidate C, ValidOrgGovConsolidated O;

--output view NationalityAndOrgGov;
--output view CountryAndOrgGov;
 



	
	

	








-- Yunyao: change made on 03/24/2008 
--         avoid matches with . on both side
-- begain block change
-- Yunyao: removed on 05/12/2008
--create view FinalOrgConsolidatedWithDots as
--select O.org as org
--from FinalOrgConsolidated O
--where MatchesRegex(/\./, LeftContextTok(O.org,1)) and
--	  MatchesRegex(/\./, RightContextTok(O.org,1));
	
--select O.org as org into
--FinalOrgConsolidatedWithDotsOutput
--from FinalOrgConsolidatedWithDots O;





