create view Merger_ as
select E.stockexchange1 as stockexchange1, E.stocksymbol1 as stocksymbol1, E.company1 as company1, 
	   E.stockexchange2 as stockexchange2, E.stocksymbol2 as stocksymbol2, E.company2 as company2,
	   E.stockexchange3 as stockexchange3, E.stocksymbol3 as stocksymbol3, E.company3 as company3,
	   E.companycreated as companycreated,
	   E.date as date, E.datestring as datestring,
	   E.status as status, E.reference as reference
from
(
	(
		select E.exchange1 as stockexchange1, E.ticker1 as stocksymbol1, E.company1 as company1, 
		  	   E.exchange2 as stockexchange2, E.ticker2 as stocksymbol2, E.company2 as company2,
		  	   '' as stockexchange3, '' as stocksymbol3, '' as company3,
		  	   '' as companycreated,
		  	   '' as date, '' as datestring,
		  	   E.status as status, E.match as reference
		from MergerWithStatusShort E
	)
	union all
	(
		select E.exchange1 as stockexchange1, E.ticker1 as stocksymbol1, E.company1 as company1, 
		  	   E.exchange2 as stockexchange2, E.ticker2 as stocksymbol2, E.company2 as company2,
		  	   E.exchange3 as stockexchange3, E.ticker3 as stocksymbol3, E.company3 as company3,
		  	   '' as companycreated,
		  	   '' as date, '' as datestring,
		  	   E.status as status, E.match as reference
		from MergerWithStatusLong E
		where Not(ContainsRegex(/\n[^\n]{5,200}\n/, E.match)) and
		      Not(ContainsRegex(/\>/, E.match))
	)
) E
consolidate on E.reference;



create view Acquisition_ as
select E.stockexchange1 as stockexchange1, E.stocksymbol1 as stocksymbol1, E.company1 as company1, 
	   E.stockexchange2 as stockexchange2, E.stocksymbol2 as stocksymbol2, E.company2 as company2,
	   E.stockexchange3 as stockexchange3, E.stocksymbol3 as stocksymbol3, E.company3 as company3,
	   E.date as date, E.datestring as datestring,
	   E.status as status, E.reference as reference
from
(
	(
		select E.exchange1 as stockexchange1, E.ticker1 as stocksymbol1, E.company1 as company1, 
		  	   E.exchange2 as stockexchange2, E.ticker2 as stocksymbol2, E.company2 as company2,
		  	   E.exchange3 as stockexchange3, E.ticker3 as stocksymbol3, E.company3 as company3,
		  	   '' as date, '' as datestring,
		  	   E.status as status, E.match as reference
		from AcquisitionWithStatusShort E
	)
	union all
	(
		select E.exchange1 as stockexchange1, E.ticker1 as stocksymbol1, E.company1 as company1, 
		  	   E.exchange2 as stockexchange2, E.ticker2 as stocksymbol2, E.company2 as company2,
		  	   E.exchange3 as stockexchange3, E.ticker3 as stocksymbol3, E.company3 as company3,
		  	   '' as date, '' as datestring,
		  	   E.status as status, E.match as reference
		from AcquisitionWithStatusLong E
		where Not(ContainsRegex(/\n[^\n]{5,200}\n/, E.match)) and
		      Not(ContainsRegex(/\>/, E.match))
	) 
) E
consolidate on E.reference;



create view JointVenture_ as
select E.stockexchange1 as stockexchange1, E.stocksymbol1 as stocksymbol1, E.company1 as company1, 
	   E.stockexchange2 as stockexchange2, E.stocksymbol2 as stocksymbol2, E.company2 as company2,
	   E.stockexchange3 as stockexchange3, E.stocksymbol3 as stocksymbol3, E.company3 as company3,
	   E.companycreated as companycreated,
	   E.date as date, E.datestring as datestring,
	   E.status as status, E.reference as reference
from
(
	(
		select E.exchange1 as stockexchange1, E.ticker1 as stocksymbol1, E.company1 as company1, 
		  	   E.exchange2 as stockexchange2, E.ticker2 as stocksymbol2, E.company2 as company2,
		  	   E.exchange3 as stockexchange3, E.ticker3 as stocksymbol3, E.company3 as company3,
		  	   '' as companycreated,
		  	   '' as date, '' as datestring,
		  	   E.status as status, E.match as reference
		from JointVentureWithStatusShort E
	)
	union all
	(
		select E.exchange1 as stockexchange1, E.ticker1 as stocksymbol1, E.company1 as company1, 
		  	   E.exchange2 as stockexchange2, E.ticker2 as stocksymbol2, E.company2 as company2,
		  	   E.exchange3 as stockexchange3, E.ticker3 as stocksymbol3, E.company3 as company3,
		  	   '' as companycreated,
		  	   '' as date, '' as datestring,
		  	   E.status as status, E.match as reference
		from JointVentureWithStatusLong E
		where Not(ContainsRegex(/\n[^\n]{5,200}\n/, E.match)) and
		      Not(ContainsRegex(/\>/, E.match))
	) 
) E
consolidate on E.reference;



create view Alliance_ as
select E.stockexchange1 as stockexchange1, E.stocksymbol1 as stocksymbol1, E.company1 as company1, 
	   E.stockexchange2 as stockexchange2, E.stocksymbol2 as stocksymbol2, E.company2 as company2,
	   E.stockexchange3 as stockexchange3, E.stocksymbol3 as stocksymbol3, E.company3 as company3,
	   E.date as date, E.datestring as datestring,
	   E.status as status, E.reference as reference
from
(
	(
		select E.exchange1 as stockexchange1, E.ticker1 as stocksymbol1, E.company1 as company1, 
		  	   E.exchange2 as stockexchange2, E.ticker2 as stocksymbol2, E.company2 as company2,
		  	   E.exchange3 as stockexchange3, E.ticker3 as stocksymbol3, E.company3 as company3,
		  	   '' as date, '' as datestring,
		  	   E.status as status, E.match as reference
		from AllianceWithStatusShort E
	)
	union all
	(
		select E.exchange1 as stockexchange1, E.ticker1 as stocksymbol1, E.company1 as company1, 
		  	   E.exchange2 as stockexchange2, E.ticker2 as stocksymbol2, E.company2 as company2,
		  	   E.exchange3 as stockexchange3, E.ticker3 as stocksymbol3, E.company3 as company3,
		  	   '' as date, '' as datestring,
		  	   E.status as status, E.match as reference
		from AllianceWithStatusLong E
		where Not(ContainsRegex(/\n[^\n]{5,200}\n/, E.match)) and
		      Not(ContainsRegex(/\>/, E.match))
	) 
) E
consolidate on E.reference;



--output view Merger;
--output view Acquisition;
--output view JointVenture;
