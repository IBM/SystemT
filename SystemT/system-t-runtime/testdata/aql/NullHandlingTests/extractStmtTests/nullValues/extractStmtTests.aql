module nullValues;

-- This ensures that extraction specifications and other operators are functioning correctly with nulls
-- Also tests select from a list containing nulls

require document with columns text Text;


-- AllNames contains some nulls

create view AllNames as
  (
    select
      F.match as firstName, null as middleName, null as lastName, F.length as length, D.text as text  -- null span for last name
    from
      FirstNameWithLength F, Document D
  )
  union all
  (
    select
      null as firstName, null as middleName, L.match as lastName, null as length, null as text -- null span for first name and length
    from
     LastName L
  );
  
-- Testing extract regex on some null values
create view RegexTest as
extract 
  regex /ill/ 
  on A.firstName as match
from AllNames A;

output view RegexTest;

-- Testing extract split on some null values
create view SplitTest as
extract 
  split using A.firstName
  on A.text as match
from AllNames A;

output view SplitTest;


-- Testing extract blocks with separation by tokens on some null values
create view BlockTokTest as
extract 
  blocks with count 2 
  and separation between 0 and 5 tokens 
  on A.firstName
  as match
from AllNames A;

output view BlockTokTest;


-- Testing extract blocks with separation by characters on some null values
create view BlockCharTest as
extract 
  blocks with count 2 
  and separation between 0 and 5 characters
  on A.firstName
  as match
from AllNames A;

output view BlockCharTest;


-- Testing extract POS on some null values
--create view PosTest as
--extract 
--  parts_of_speech 'NNP' 
--  with language 'en' on A.firstName as match
--from AllNames A;

--output view PosTest;




-- Testing extract pattern on some null values
create view PatternTest as
extract 
  pattern <F.match> <L.match> 
  as match
from FirstNameWithLength F, LastName L;

output view PatternTest;




-- Select From clause

create view Nulls as
(
  select null as match
  from Document D
)
union all
(
  select D.text as match
  from Document D
);

-- ensure we don't crash by reading null tuples
create view NullSelect as
  select N.match as match
  from Nulls N;

output view NullSelect;


-- ensure we don't crash by reading null tuples into Detag operator 
detag AllNames.firstName into DetagOpTest;


-- ensure we don't crash by reading null tuples in Dictionaries operator
create view DictionariesOpTest as
  extract 
    dictionaries
        'FirstName.dict'
        and 'LastName.dict'
    with flags 'IgnoreCase' on A.firstName as match
from AllNames A;

output view DictionariesOpTest;  

-- ensure we don't crash by reading null tuples in RegexesTok operator
create view RegexesTokOpTest as 
  extract 
    regexes /Bi.*/ and /.*ll/
    on between 1 and 5 tokens in A.firstName as match
from AllNames A;

output view RegexesTokOpTest;
