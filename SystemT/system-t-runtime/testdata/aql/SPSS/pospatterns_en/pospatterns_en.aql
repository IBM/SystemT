-- ---------------------------------------------------------
-- auto generated by PartOfSpeechPatternManager::generateAql
-- ---------------------------------------------------------

module pospatterns_en;

import module pos_base_en;
import module pos_u_en;
import module pos_en;
import view Doc_en from module doc_en as Doc_en;

set default dictionary language as 'en';

--
-- we want to be hyphen insensitive but only if it's a real hyphen (stick to words) 
-- 
create view WordSeparatingHyphen_en as
  extract
    regex /\p{Alnum}(-)\p{Alnum}/
    on D.text
    return 
      group 1 as match
  from 
    Doc_en D;

create view PosPattern_nohyphen_mremm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pe3.partOfSpeech> <pm4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_e_en pe3, pos_en.pos_m_en pm4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mremm_en;

create view PosPattern_hyphen_mremm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pe3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_e_en pe3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mremm_en;

create view PosPattern_mremm_en as
(select * from PosPattern_nohyphen_mremm_en)
union all
(select * from PosPattern_hyphen_mremm_en);

-- output view PosPattern_mremm_en;

create view PosPattern_nohyphen_mrvrmm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pv3.partOfSpeech> <pr4.partOfSpeech> <pm5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_v_en pv3, pos_en.pos_r_en pr4, pos_en.pos_m_en pm5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mrvrmm_en;

create view PosPattern_hyphen_mrvrmm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pv3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pr4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_v_en pv3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_r_en pr4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mrvrmm_en;

create view PosPattern_mrvrmm_en as
(select * from PosPattern_nohyphen_mrvrmm_en)
union all
(select * from PosPattern_hyphen_mrvrmm_en);

-- output view PosPattern_mrvrmm_en;

create view PosPattern_nohyphen_mrmm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pm3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_m_en pm3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_mrmm_en;

create view PosPattern_hyphen_mrmm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_mrmm_en;

create view PosPattern_mrmm_en as
(select * from PosPattern_nohyphen_mrmm_en)
union all
(select * from PosPattern_hyphen_mrmm_en);

-- output view PosPattern_mrmm_en;

create view PosPattern_nohyphen_fmm_en as
extract 
pf1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pf1.partOfSpeech> <pm2.partOfSpeech> <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1, pos_en.pos_m_en pm2, pos_en.pos_m_en pm3;

-- output view PosPattern_nohyphen_fmm_en;

create view PosPattern_hyphen_fmm_en as
extract 
pf1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pf1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3;

-- output view PosPattern_hyphen_fmm_en;

create view PosPattern_fmm_en as
(select * from PosPattern_nohyphen_fmm_en)
union all
(select * from PosPattern_hyphen_fmm_en);

-- output view PosPattern_fmm_en;

create view PosPattern_nohyphen_fffm_en as
extract 
pf1.partOfSpeech as token1,
pf2.partOfSpeech as token2,
pf3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pf1.partOfSpeech> <pf2.partOfSpeech> <pf3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1, pos_en.pos_f_en pf2, pos_en.pos_f_en pf3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_fffm_en;

create view PosPattern_hyphen_fffm_en as
extract 
pf1.partOfSpeech as token1,
pf2.partOfSpeech as token2,
pf3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pf1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pf2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pf3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_f_en pf2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_f_en pf3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_fffm_en;

create view PosPattern_fffm_en as
(select * from PosPattern_nohyphen_fffm_en)
union all
(select * from PosPattern_hyphen_fffm_en);

-- output view PosPattern_fffm_en;

create view PosPattern_nohyphen_mremrm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pr5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pe3.partOfSpeech> <pm4.partOfSpeech> <pr5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_e_en pe3, pos_en.pos_m_en pm4, pos_en.pos_r_en pr5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mremrm_en;

create view PosPattern_hyphen_mremrm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pr5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pe3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pr5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_e_en pe3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_r_en pr5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mremrm_en;

create view PosPattern_mremrm_en as
(select * from PosPattern_nohyphen_mremrm_en)
union all
(select * from PosPattern_hyphen_mremrm_en);

-- output view PosPattern_mremrm_en;

create view PosPattern_nohyphen_mraam_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pa3.partOfSpeech> <pa4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_a_en pa3, pos_en.pos_a_en pa4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mraam_en;

create view PosPattern_hyphen_mraam_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pa3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pa4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_a_en pa3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_a_en pa4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mraam_en;

create view PosPattern_mraam_en as
(select * from PosPattern_nohyphen_mraam_en)
union all
(select * from PosPattern_hyphen_mraam_en);

-- output view PosPattern_mraam_en;

create view PosPattern_nohyphen_fim_en as
extract 
pf1.partOfSpeech as token1,
pi2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pf1.partOfSpeech> <pi2.partOfSpeech> <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1, pos_en.pos_i_en pi2, pos_en.pos_m_en pm3;

-- output view PosPattern_nohyphen_fim_en;

create view PosPattern_hyphen_fim_en as
extract 
pf1.partOfSpeech as token1,
pi2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pf1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pi2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_i_en pi2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3;

-- output view PosPattern_hyphen_fim_en;

create view PosPattern_fim_en as
(select * from PosPattern_nohyphen_fim_en)
union all
(select * from PosPattern_hyphen_fim_en);

-- output view PosPattern_fim_en;

create view PosPattern_nohyphen_mream_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pe3.partOfSpeech> <pa4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_e_en pe3, pos_en.pos_a_en pa4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mream_en;

create view PosPattern_hyphen_mream_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pe3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pa4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_e_en pe3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_a_en pa4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mream_en;

create view PosPattern_mream_en as
(select * from PosPattern_nohyphen_mream_en)
union all
(select * from PosPattern_hyphen_mream_en);

-- output view PosPattern_mream_en;

create view PosPattern_nohyphen_mrvram_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pv3.partOfSpeech> <pr4.partOfSpeech> <pa5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_v_en pv3, pos_en.pos_r_en pr4, pos_en.pos_a_en pa5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mrvram_en;

create view PosPattern_hyphen_mrvram_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pv3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pr4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pa5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_v_en pv3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_r_en pr4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_a_en pa5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mrvram_en;

create view PosPattern_mrvram_en as
(select * from PosPattern_nohyphen_mrvram_en)
union all
(select * from PosPattern_hyphen_mrvram_en);

-- output view PosPattern_mrvram_en;

create view PosPattern_nohyphen_mrem_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pe3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_e_en pe3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_mrem_en;

create view PosPattern_hyphen_mrem_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pe3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_e_en pe3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_mrem_en;

create view PosPattern_mrem_en as
(select * from PosPattern_nohyphen_mrem_en)
union all
(select * from PosPattern_hyphen_mrem_en);

-- output view PosPattern_mrem_en;

create view PosPattern_nohyphen_mprmm_en as
extract 
pm1.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pp2.partOfSpeech> <pr3.partOfSpeech> <pm4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_p_en pp2, pos_en.pos_r_en pr3, pos_en.pos_m_en pm4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mprmm_en;

create view PosPattern_hyphen_mprmm_en as
extract 
pm1.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pp2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_p_en pp2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mprmm_en;

create view PosPattern_mprmm_en as
(select * from PosPattern_nohyphen_mprmm_en)
union all
(select * from PosPattern_hyphen_mprmm_en);

-- output view PosPattern_mprmm_en;

create view PosPattern_nohyphen_mram_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pa3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_a_en pa3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_mram_en;

create view PosPattern_hyphen_mram_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pa3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_a_en pa3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_mram_en;

create view PosPattern_mram_en as
(select * from PosPattern_nohyphen_mram_en)
union all
(select * from PosPattern_hyphen_mram_en);

-- output view PosPattern_mram_en;

create view PosPattern_nohyphen_aoamrm_en as
extract 
pa1.partOfSpeech as token1,
po2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pr5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pa1.partOfSpeech> <po2.partOfSpeech> <pa3.partOfSpeech> <pm4.partOfSpeech> <pr5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_o_en po2, pos_en.pos_a_en pa3, pos_en.pos_m_en pm4, pos_en.pos_r_en pr5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_aoamrm_en;

create view PosPattern_hyphen_aoamrm_en as
extract 
pa1.partOfSpeech as token1,
po2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pr5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <po2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pa3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pr5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_o_en po2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_a_en pa3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_r_en pr5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_aoamrm_en;

create view PosPattern_aoamrm_en as
(select * from PosPattern_nohyphen_aoamrm_en)
union all
(select * from PosPattern_hyphen_aoamrm_en);

-- output view PosPattern_aoamrm_en;

create view PosPattern_nohyphen_mpram_en as
extract 
pm1.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pp2.partOfSpeech> <pr3.partOfSpeech> <pa4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_p_en pp2, pos_en.pos_r_en pr3, pos_en.pos_a_en pa4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mpram_en;

create view PosPattern_hyphen_mpram_en as
extract 
pm1.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pp2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pa4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_p_en pp2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_a_en pa4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mpram_en;

create view PosPattern_mpram_en as
(select * from PosPattern_nohyphen_mpram_en)
union all
(select * from PosPattern_hyphen_mpram_en);

-- output view PosPattern_mpram_en;

create view PosPattern_nohyphen_apam_en as
extract 
pa1.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> <pp2.partOfSpeech> <pa3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_p_en pp2, pos_en.pos_a_en pa3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_apam_en;

create view PosPattern_hyphen_apam_en as
extract 
pa1.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pp2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pa3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_p_en pp2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_a_en pa3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_apam_en;

create view PosPattern_apam_en as
(select * from PosPattern_nohyphen_apam_en)
union all
(select * from PosPattern_hyphen_apam_en);

-- output view PosPattern_apam_en;

create view PosPattern_nohyphen_mrvm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pv3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_v_en pv3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_mrvm_en;

create view PosPattern_hyphen_mrvm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pv3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_v_en pv3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_mrvm_en;

create view PosPattern_mrvm_en as
(select * from PosPattern_nohyphen_mrvm_en)
union all
(select * from PosPattern_hyphen_mrvm_en);

-- output view PosPattern_mrvm_en;

create view PosPattern_nohyphen_apm_en as
extract 
pa1.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pa1.partOfSpeech> <pp2.partOfSpeech> <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_p_en pp2, pos_en.pos_m_en pm3;

-- output view PosPattern_nohyphen_apm_en;

create view PosPattern_hyphen_apm_en as
extract 
pa1.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pp2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_p_en pp2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3;

-- output view PosPattern_hyphen_apm_en;

create view PosPattern_apm_en as
(select * from PosPattern_nohyphen_apm_en)
union all
(select * from PosPattern_hyphen_apm_en);

-- output view PosPattern_apm_en;

create view PosPattern_nohyphen_mm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pm1.partOfSpeech> <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_m_en pm2;

-- output view PosPattern_nohyphen_mm_en;

create view PosPattern_hyphen_mm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2;

-- output view PosPattern_hyphen_mm_en;

create view PosPattern_mm_en as
(select * from PosPattern_nohyphen_mm_en)
union all
(select * from PosPattern_hyphen_mm_en);

-- output view PosPattern_mm_en;

create view PosPattern_nohyphen_mrmrm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pm3.partOfSpeech> <pr4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_m_en pm3, pos_en.pos_r_en pr4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mrmrm_en;

create view PosPattern_hyphen_mrmrm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pr4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_r_en pr4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mrmrm_en;

create view PosPattern_mrmrm_en as
(select * from PosPattern_nohyphen_mrmrm_en)
union all
(select * from PosPattern_hyphen_mrmrm_en);

-- output view PosPattern_mrmrm_en;

create view PosPattern_nohyphen_mrmrmm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pm3.partOfSpeech> <pr4.partOfSpeech> <pm5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_m_en pm3, pos_en.pos_r_en pr4, pos_en.pos_m_en pm5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mrmrmm_en;

create view PosPattern_hyphen_mrmrmm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pr4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_r_en pr4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mrmrmm_en;

create view PosPattern_mrmrmm_en as
(select * from PosPattern_nohyphen_mrmrmm_en)
union all
(select * from PosPattern_hyphen_mrmrmm_en);

-- output view PosPattern_mrmrmm_en;

create view PosPattern_nohyphen_aopm_en as
extract 
pa1.partOfSpeech as token1,
po2.partOfSpeech as token2,
pp3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> <po2.partOfSpeech> <pp3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_o_en po2, pos_en.pos_p_en pp3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_aopm_en;

create view PosPattern_hyphen_aopm_en as
extract 
pa1.partOfSpeech as token1,
po2.partOfSpeech as token2,
pp3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <po2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pp3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_o_en po2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_p_en pp3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_aopm_en;

create view PosPattern_aopm_en as
(select * from PosPattern_nohyphen_aopm_en)
union all
(select * from PosPattern_hyphen_aopm_en);

-- output view PosPattern_aopm_en;

create view PosPattern_nohyphen_am_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2;

-- output view PosPattern_nohyphen_am_en;

create view PosPattern_hyphen_am_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2;

-- output view PosPattern_hyphen_am_en;

create view PosPattern_am_en as
(select * from PosPattern_nohyphen_am_en)
union all
(select * from PosPattern_hyphen_am_en);

-- output view PosPattern_am_en;

create view PosPattern_nohyphen_ffm_en as
extract 
pf1.partOfSpeech as token1,
pf2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pf1.partOfSpeech> <pf2.partOfSpeech> <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1, pos_en.pos_f_en pf2, pos_en.pos_m_en pm3;

-- output view PosPattern_nohyphen_ffm_en;

create view PosPattern_hyphen_ffm_en as
extract 
pf1.partOfSpeech as token1,
pf2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pf1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pf2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_f_en pf2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3;

-- output view PosPattern_hyphen_ffm_en;

create view PosPattern_ffm_en as
(select * from PosPattern_nohyphen_ffm_en)
union all
(select * from PosPattern_hyphen_ffm_en);

-- output view PosPattern_ffm_en;

create view PosPattern_nohyphen_mmremm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pe4.partOfSpeech> <pm5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_e_en pe4, pos_en.pos_m_en pm5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mmremm_en;

create view PosPattern_hyphen_mmremm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mmremm_en;

create view PosPattern_mmremm_en as
(select * from PosPattern_nohyphen_mmremm_en)
union all
(select * from PosPattern_hyphen_mmremm_en);

-- output view PosPattern_mmremm_en;

create view PosPattern_nohyphen_mrvemm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pv3.partOfSpeech> <pe4.partOfSpeech> <pm5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_v_en pv3, pos_en.pos_e_en pe4, pos_en.pos_m_en pm5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mrvemm_en;

create view PosPattern_hyphen_mrvemm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pv3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_v_en pv3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mrvemm_en;

create view PosPattern_mrvemm_en as
(select * from PosPattern_nohyphen_mrvemm_en)
union all
(select * from PosPattern_hyphen_mrvemm_en);

-- output view PosPattern_mrvemm_en;

create view PosPattern_nohyphen_mrVem_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pV3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pV3.partOfSpeech> <pe4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_V_en pV3, pos_en.pos_e_en pe4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mrVem_en;

create view PosPattern_hyphen_mrVem_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pV3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pV3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_V_en pV3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mrVem_en;

create view PosPattern_mrVem_en as
(select * from PosPattern_nohyphen_mrVem_en)
union all
(select * from PosPattern_hyphen_mrVem_en);

-- output view PosPattern_mrVem_en;

create view PosPattern_nohyphen_mrVm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pV3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pV3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_V_en pV3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_mrVm_en;

create view PosPattern_hyphen_mrVm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pV3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pV3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_V_en pV3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_mrVm_en;

create view PosPattern_mrVm_en as
(select * from PosPattern_nohyphen_mrVm_en)
union all
(select * from PosPattern_hyphen_mrVm_en);

-- output view PosPattern_mrVm_en;

create view PosPattern_nohyphen_amremm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pe4.partOfSpeech> <pm5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_e_en pe4, pos_en.pos_m_en pm5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_amremm_en;

create view PosPattern_hyphen_amremm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_amremm_en;

create view PosPattern_amremm_en as
(select * from PosPattern_nohyphen_amremm_en)
union all
(select * from PosPattern_hyphen_amremm_en);

-- output view PosPattern_amremm_en;

create view PosPattern_nohyphen_mmream_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pe4.partOfSpeech> <pa5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_e_en pe4, pos_en.pos_a_en pa5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mmream_en;

create view PosPattern_hyphen_mmream_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pa5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_a_en pa5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mmream_en;

create view PosPattern_mmream_en as
(select * from PosPattern_nohyphen_mmream_en)
union all
(select * from PosPattern_hyphen_mmream_en);

-- output view PosPattern_mmream_en;

create view PosPattern_nohyphen_ff_en as
extract 
pf1.partOfSpeech as token1,
pf2.partOfSpeech as token2,
pattern (<pf1.partOfSpeech> <pf2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1, pos_en.pos_f_en pf2;

-- output view PosPattern_nohyphen_ff_en;

create view PosPattern_hyphen_ff_en as
extract 
pf1.partOfSpeech as token1,
pf2.partOfSpeech as token2,
pattern (<pf1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pf2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_f_en pf2;

-- output view PosPattern_hyphen_ff_en;

create view PosPattern_ff_en as
(select * from PosPattern_nohyphen_ff_en)
union all
(select * from PosPattern_hyphen_ff_en);

-- output view PosPattern_ff_en;

create view PosPattern_nohyphen_mrveam_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pv3.partOfSpeech> <pe4.partOfSpeech> <pa5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_v_en pv3, pos_en.pos_e_en pe4, pos_en.pos_a_en pa5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mrveam_en;

create view PosPattern_hyphen_mrveam_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pv3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pa5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_v_en pv3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_a_en pa5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mrveam_en;

create view PosPattern_mrveam_en as
(select * from PosPattern_nohyphen_mrveam_en)
union all
(select * from PosPattern_hyphen_mrveam_en);

-- output view PosPattern_mrveam_en;

create view PosPattern_nohyphen_0p_en as
extract 
p01.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pattern (<p01.partOfSpeech> <pp2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_0_en p01, pos_en.pos_p_en pp2;

-- output view PosPattern_nohyphen_0p_en;

create view PosPattern_hyphen_0p_en as
extract 
p01.partOfSpeech as token1,
pp2.partOfSpeech as token2,
pattern (<p01.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pp2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_0_en p01,  WordSeparatingHyphen_en hyphen2, pos_en.pos_p_en pp2;

-- output view PosPattern_hyphen_0p_en;

create view PosPattern_0p_en as
(select * from PosPattern_nohyphen_0p_en)
union all
(select * from PosPattern_hyphen_0p_en);

-- output view PosPattern_0p_en;

create view PosPattern_nohyphen_aamm_en as
extract 
pa1.partOfSpeech as token1,
pa2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> <pa2.partOfSpeech> <pm3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_a_en pa2, pos_en.pos_m_en pm3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_aamm_en;

create view PosPattern_hyphen_aamm_en as
extract 
pa1.partOfSpeech as token1,
pa2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pa2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_a_en pa2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_aamm_en;

create view PosPattern_aamm_en as
(select * from PosPattern_nohyphen_aamm_en)
union all
(select * from PosPattern_hyphen_aamm_en);

-- output view PosPattern_aamm_en;

create view PosPattern_nohyphen_mmmm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> <pm2.partOfSpeech> <pm3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_m_en pm2, pos_en.pos_m_en pm3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_mmmm_en;

create view PosPattern_hyphen_mmmm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_mmmm_en;

create view PosPattern_mmmm_en as
(select * from PosPattern_nohyphen_mmmm_en)
union all
(select * from PosPattern_hyphen_mmmm_en);

-- output view PosPattern_mmmm_en;

create view PosPattern_nohyphen_amm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech> <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2, pos_en.pos_m_en pm3;

-- output view PosPattern_nohyphen_amm_en;

create view PosPattern_hyphen_amm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3;

-- output view PosPattern_hyphen_amm_en;

create view PosPattern_amm_en as
(select * from PosPattern_nohyphen_amm_en)
union all
(select * from PosPattern_hyphen_amm_en);

-- output view PosPattern_amm_en;

create view PosPattern_nohyphen_fm_en as
extract 
pf1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pf1.partOfSpeech> <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1, pos_en.pos_m_en pm2;

-- output view PosPattern_nohyphen_fm_en;

create view PosPattern_hyphen_fm_en as
extract 
pf1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pf1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2;

-- output view PosPattern_hyphen_fm_en;

create view PosPattern_fm_en as
(select * from PosPattern_nohyphen_fm_en)
union all
(select * from PosPattern_hyphen_fm_en);

-- output view PosPattern_fm_en;

create view PosPattern_nohyphen_aamrm_en as
extract 
pa1.partOfSpeech as token1,
pa2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> <pa2.partOfSpeech> <pm3.partOfSpeech> <pr4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_a_en pa2, pos_en.pos_m_en pm3, pos_en.pos_r_en pr4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_aamrm_en;

create view PosPattern_hyphen_aamrm_en as
extract 
pa1.partOfSpeech as token1,
pa2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pr4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pa2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pr4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_a_en pa2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_r_en pr4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_aamrm_en;

create view PosPattern_aamrm_en as
(select * from PosPattern_nohyphen_aamrm_en)
union all
(select * from PosPattern_hyphen_aamrm_en);

-- output view PosPattern_aamrm_en;

create view PosPattern_nohyphen_amream_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pe4.partOfSpeech> <pa5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_e_en pe4, pos_en.pos_a_en pa5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_amream_en;

create view PosPattern_hyphen_amream_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pa5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_a_en pa5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_amream_en;

create view PosPattern_amream_en as
(select * from PosPattern_nohyphen_amream_en)
union all
(select * from PosPattern_hyphen_amream_en);

-- output view PosPattern_amream_en;

create view PosPattern_nohyphen_ammm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech> <pm3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2, pos_en.pos_m_en pm3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_ammm_en;

create view PosPattern_hyphen_ammm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_ammm_en;

create view PosPattern_ammm_en as
(select * from PosPattern_nohyphen_ammm_en)
union all
(select * from PosPattern_hyphen_ammm_en);

-- output view PosPattern_ammm_en;

create view PosPattern_nohyphen_aaam_en as
extract 
pa1.partOfSpeech as token1,
pa2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> <pa2.partOfSpeech> <pa3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_a_en pa2, pos_en.pos_a_en pa3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_aaam_en;

create view PosPattern_hyphen_aaam_en as
extract 
pa1.partOfSpeech as token1,
pa2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pa2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pa3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_a_en pa2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_a_en pa3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_aaam_en;

create view PosPattern_aaam_en as
(select * from PosPattern_nohyphen_aaam_en)
union all
(select * from PosPattern_hyphen_aaam_en);

-- output view PosPattern_aaam_en;

create view PosPattern_nohyphen_aam_en as
extract 
pa1.partOfSpeech as token1,
pa2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pa1.partOfSpeech> <pa2.partOfSpeech> <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_a_en pa2, pos_en.pos_m_en pm3;

-- output view PosPattern_nohyphen_aam_en;

create view PosPattern_hyphen_aam_en as
extract 
pa1.partOfSpeech as token1,
pa2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pa2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_a_en pa2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3;

-- output view PosPattern_hyphen_aam_en;

create view PosPattern_aam_en as
(select * from PosPattern_nohyphen_aam_en)
union all
(select * from PosPattern_hyphen_aam_en);

-- output view PosPattern_aam_en;

create view PosPattern_nohyphen_mmm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pm1.partOfSpeech> <pm2.partOfSpeech> <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_m_en pm2, pos_en.pos_m_en pm3;

-- output view PosPattern_nohyphen_mmm_en;

create view PosPattern_hyphen_mmm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3;

-- output view PosPattern_hyphen_mmm_en;

create view PosPattern_mmm_en as
(select * from PosPattern_nohyphen_mmm_en)
union all
(select * from PosPattern_hyphen_mmm_en);

-- output view PosPattern_mmm_en;

create view PosPattern_nohyphen_mrV_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pV3.partOfSpeech as token3,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pV3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_V_en pV3;

-- output view PosPattern_nohyphen_mrV_en;

create view PosPattern_hyphen_mrV_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pV3.partOfSpeech as token3,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pV3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_V_en pV3;

-- output view PosPattern_hyphen_mrV_en;

create view PosPattern_mrV_en as
(select * from PosPattern_nohyphen_mrV_en)
union all
(select * from PosPattern_hyphen_mrV_en);

-- output view PosPattern_mrV_en;

create view PosPattern_nohyphen_mrvmm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pv3.partOfSpeech> <pm4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_v_en pv3, pos_en.pos_m_en pm4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mrvmm_en;

create view PosPattern_hyphen_mrvmm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pv3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_v_en pv3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mrvmm_en;

create view PosPattern_mrvmm_en as
(select * from PosPattern_nohyphen_mrvmm_en)
union all
(select * from PosPattern_hyphen_mrvmm_en);

-- output view PosPattern_mrvmm_en;

create view PosPattern_nohyphen_aoamm_en as
extract 
pa1.partOfSpeech as token1,
po2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> <po2.partOfSpeech> <pa3.partOfSpeech> <pm4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_o_en po2, pos_en.pos_a_en pa3, pos_en.pos_m_en pm4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_aoamm_en;

create view PosPattern_hyphen_aoamm_en as
extract 
pa1.partOfSpeech as token1,
po2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <po2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pa3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_o_en po2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_a_en pa3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_aoamm_en;

create view PosPattern_aoamm_en as
(select * from PosPattern_nohyphen_aoamm_en)
union all
(select * from PosPattern_hyphen_aoamm_en);

-- output view PosPattern_aoamm_en;

create view PosPattern_nohyphen_Vm_en as
extract 
pV1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pV1.partOfSpeech> <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_V_en pV1, pos_en.pos_m_en pm2;

-- output view PosPattern_nohyphen_Vm_en;

create view PosPattern_hyphen_Vm_en as
extract 
pV1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pV1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_V_en pV1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2;

-- output view PosPattern_hyphen_Vm_en;

create view PosPattern_Vm_en as
(select * from PosPattern_nohyphen_Vm_en)
union all
(select * from PosPattern_hyphen_Vm_en);

-- output view PosPattern_Vm_en;

create view PosPattern_nohyphen_mrvem_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pv3.partOfSpeech> <pe4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_v_en pv3, pos_en.pos_e_en pe4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mrvem_en;

create view PosPattern_hyphen_mrvem_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pv3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_v_en pv3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mrvem_en;

create view PosPattern_mrvem_en as
(select * from PosPattern_nohyphen_mrvem_en)
union all
(select * from PosPattern_hyphen_mrvem_en);

-- output view PosPattern_mrvem_en;

create view PosPattern_nohyphen_aoam_en as
extract 
pa1.partOfSpeech as token1,
po2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> <po2.partOfSpeech> <pa3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_o_en po2, pos_en.pos_a_en pa3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_aoam_en;

create view PosPattern_hyphen_aoam_en as
extract 
pa1.partOfSpeech as token1,
po2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <po2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pa3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_o_en po2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_a_en pa3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_aoam_en;

create view PosPattern_aoam_en as
(select * from PosPattern_nohyphen_aoam_en)
union all
(select * from PosPattern_hyphen_aoam_en);

-- output view PosPattern_aoam_en;

create view PosPattern_nohyphen_mmrm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_mmrm_en;

create view PosPattern_hyphen_mmrm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_mmrm_en;

create view PosPattern_mmrm_en as
(select * from PosPattern_nohyphen_mmrm_en)
union all
(select * from PosPattern_hyphen_mmrm_en);

-- output view PosPattern_mmrm_en;

create view PosPattern_nohyphen_mrvam_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pv3.partOfSpeech> <pa4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_v_en pv3, pos_en.pos_a_en pa4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mrvam_en;

create view PosPattern_hyphen_mrvam_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pv3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pv3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pa4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_v_en pv3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_a_en pa4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mrvam_en;

create view PosPattern_mrvam_en as
(select * from PosPattern_nohyphen_mrvam_en)
union all
(select * from PosPattern_hyphen_mrvam_en);

-- output view PosPattern_mrvam_en;

create view PosPattern_nohyphen_mreamm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pe3.partOfSpeech> <pa4.partOfSpeech> <pm5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_e_en pe3, pos_en.pos_a_en pa4, pos_en.pos_m_en pm5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mreamm_en;

create view PosPattern_hyphen_mreamm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pe3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pe3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pa4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_e_en pe3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_a_en pa4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mreamm_en;

create view PosPattern_mreamm_en as
(select * from PosPattern_nohyphen_mreamm_en)
union all
(select * from PosPattern_hyphen_mreamm_en);

-- output view PosPattern_mreamm_en;

create view PosPattern_nohyphen_mrpm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pp3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pp3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_p_en pp3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_mrpm_en;

create view PosPattern_hyphen_mrpm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pp3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pp3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_p_en pp3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_mrpm_en;

create view PosPattern_mrpm_en as
(select * from PosPattern_nohyphen_mrpm_en)
union all
(select * from PosPattern_hyphen_mrpm_en);

-- output view PosPattern_mrpm_en;

create view PosPattern_nohyphen_2V_en as
extract 
p21.partOfSpeech as token1,
pV2.partOfSpeech as token2,
pattern (<p21.partOfSpeech> <pV2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_2_en p21, pos_en.pos_V_en pV2;

-- output view PosPattern_nohyphen_2V_en;

create view PosPattern_hyphen_2V_en as
extract 
p21.partOfSpeech as token1,
pV2.partOfSpeech as token2,
pattern (<p21.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pV2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_2_en p21,  WordSeparatingHyphen_en hyphen2, pos_en.pos_V_en pV2;

-- output view PosPattern_hyphen_2V_en;

create view PosPattern_2V_en as
(select * from PosPattern_nohyphen_2V_en)
union all
(select * from PosPattern_hyphen_2V_en);

-- output view PosPattern_2V_en;

create view PosPattern_nohyphen_amrmm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pm4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_m_en pm4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_amrmm_en;

create view PosPattern_hyphen_amrmm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_amrmm_en;

create view PosPattern_amrmm_en as
(select * from PosPattern_nohyphen_amrmm_en)
union all
(select * from PosPattern_hyphen_amrmm_en);

-- output view PosPattern_amrmm_en;

create view PosPattern_nohyphen_amrm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_m_en pm4;

-- output view PosPattern_nohyphen_amrm_en;

create view PosPattern_hyphen_amrm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4;

-- output view PosPattern_hyphen_amrm_en;

create view PosPattern_amrm_en as
(select * from PosPattern_nohyphen_amrm_en)
union all
(select * from PosPattern_hyphen_amrm_en);

-- output view PosPattern_amrm_en;

create view PosPattern_nohyphen_mrm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_m_en pm3;

-- output view PosPattern_nohyphen_mrm_en;

create view PosPattern_hyphen_mrm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3;

-- output view PosPattern_hyphen_mrm_en;

create view PosPattern_mrm_en as
(select * from PosPattern_nohyphen_mrm_en)
union all
(select * from PosPattern_hyphen_mrm_en);

-- output view PosPattern_mrm_en;

create view PosPattern_nohyphen_amrem_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pe4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_e_en pe4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_amrem_en;

create view PosPattern_hyphen_amrem_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_amrem_en;

create view PosPattern_amrem_en as
(select * from PosPattern_nohyphen_amrem_en)
union all
(select * from PosPattern_hyphen_amrem_en);

-- output view PosPattern_amrem_en;

create view PosPattern_nohyphen_amram_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pa4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_a_en pa4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_amram_en;

create view PosPattern_hyphen_amram_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pa4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_a_en pa4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_amram_en;

create view PosPattern_amram_en as
(select * from PosPattern_nohyphen_amram_en)
union all
(select * from PosPattern_hyphen_amram_en);

-- output view PosPattern_amram_en;

create view PosPattern_nohyphen_mmrmm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pm4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_m_en pm4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mmrmm_en;

create view PosPattern_hyphen_mmrmm_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mmrmm_en;

create view PosPattern_mmrmm_en as
(select * from PosPattern_nohyphen_mmrmm_en)
union all
(select * from PosPattern_hyphen_mmrmm_en);

-- output view PosPattern_mmrmm_en;

create view PosPattern_nohyphen_21V_en as
extract 
p21.partOfSpeech as token1,
p12.partOfSpeech as token2,
pV3.partOfSpeech as token3,
pattern (<p21.partOfSpeech> <p12.partOfSpeech> <pV3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_2_en p21, pos_en.pos_1_en p12, pos_en.pos_V_en pV3;

-- output view PosPattern_nohyphen_21V_en;

create view PosPattern_hyphen_21V_en as
extract 
p21.partOfSpeech as token1,
p12.partOfSpeech as token2,
pV3.partOfSpeech as token3,
pattern (<p21.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <p12.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pV3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_2_en p21,  WordSeparatingHyphen_en hyphen2, pos_en.pos_1_en p12,  WordSeparatingHyphen_en hyphen3, pos_en.pos_V_en pV3;

-- output view PosPattern_hyphen_21V_en;

create view PosPattern_21V_en as
(select * from PosPattern_nohyphen_21V_en)
union all
(select * from PosPattern_hyphen_21V_en);

-- output view PosPattern_21V_en;

create view PosPattern_nohyphen_tm_en as
extract 
pt1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pt1.partOfSpeech> <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_t_en pt1, pos_en.pos_m_en pm2;

-- output view PosPattern_nohyphen_tm_en;

create view PosPattern_hyphen_tm_en as
extract 
pt1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pattern (<pt1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_t_en pt1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2;

-- output view PosPattern_hyphen_tm_en;

create view PosPattern_tm_en as
(select * from PosPattern_nohyphen_tm_en)
union all
(select * from PosPattern_hyphen_tm_en);

-- output view PosPattern_tm_en;

create view PosPattern_nohyphen_fym_en as
extract 
pf1.partOfSpeech as token1,
py2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pf1.partOfSpeech> <py2.partOfSpeech> <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1, pos_en.pos_y_en py2, pos_en.pos_m_en pm3;

-- output view PosPattern_nohyphen_fym_en;

create view PosPattern_hyphen_fym_en as
extract 
pf1.partOfSpeech as token1,
py2.partOfSpeech as token2,
pm3.partOfSpeech as token3,
pattern (<pf1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <py2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pm3.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_f_en pf1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_y_en py2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_m_en pm3;

-- output view PosPattern_hyphen_fym_en;

create view PosPattern_fym_en as
(select * from PosPattern_nohyphen_fym_en)
union all
(select * from PosPattern_hyphen_fym_en);

-- output view PosPattern_fym_en;

create view PosPattern_nohyphen_mmrem_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pe4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_e_en pe4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mmrem_en;

create view PosPattern_hyphen_mmrem_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pe4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pe4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_e_en pe4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mmrem_en;

create view PosPattern_mmrem_en as
(select * from PosPattern_nohyphen_mmrem_en)
union all
(select * from PosPattern_hyphen_mmrem_en);

-- output view PosPattern_mmrem_en;

create view PosPattern_nohyphen_mramm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pa3.partOfSpeech> <pm4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_a_en pa3, pos_en.pos_m_en pm4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mramm_en;

create view PosPattern_hyphen_mramm_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
pm4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pa3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pm4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_a_en pa3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_m_en pm4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mramm_en;

create view PosPattern_mramm_en as
(select * from PosPattern_nohyphen_mramm_en)
union all
(select * from PosPattern_hyphen_mramm_en);

-- output view PosPattern_mramm_en;

create view PosPattern_nohyphen_amrvm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pv4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pv4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_v_en pv4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_amrvm_en;

create view PosPattern_hyphen_amrvm_en as
extract 
pa1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pv4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pa1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pv4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_a_en pa1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_v_en pv4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_amrvm_en;

create view PosPattern_amrvm_en as
(select * from PosPattern_nohyphen_amrvm_en)
union all
(select * from PosPattern_hyphen_amrvm_en);

-- output view PosPattern_amrvm_en;

create view PosPattern_nohyphen_mmram_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> <pm2.partOfSpeech> <pr3.partOfSpeech> <pa4.partOfSpeech> <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_m_en pm2, pos_en.pos_r_en pr3, pos_en.pos_a_en pa4, pos_en.pos_m_en pm5;

-- output view PosPattern_nohyphen_mmram_en;

create view PosPattern_hyphen_mmram_en as
extract 
pm1.partOfSpeech as token1,
pm2.partOfSpeech as token2,
pr3.partOfSpeech as token3,
pa4.partOfSpeech as token4,
pm5.partOfSpeech as token5,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pm2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pr3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <pa4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pm5.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_m_en pm2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_r_en pr3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_a_en pa4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_m_en pm5;

-- output view PosPattern_hyphen_mmram_en;

create view PosPattern_mmram_en as
(select * from PosPattern_nohyphen_mmram_en)
union all
(select * from PosPattern_hyphen_mmram_en);

-- output view PosPattern_mmram_en;

create view PosPattern_nohyphen_mraoam_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
po4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> <pr2.partOfSpeech> <pa3.partOfSpeech> <po4.partOfSpeech> <pa5.partOfSpeech> <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1, pos_en.pos_r_en pr2, pos_en.pos_a_en pa3, pos_en.pos_o_en po4, pos_en.pos_a_en pa5, pos_en.pos_m_en pm6;

-- output view PosPattern_nohyphen_mraoam_en;

create view PosPattern_hyphen_mraoam_en as
extract 
pm1.partOfSpeech as token1,
pr2.partOfSpeech as token2,
pa3.partOfSpeech as token3,
po4.partOfSpeech as token4,
pa5.partOfSpeech as token5,
pm6.partOfSpeech as token6,
pattern (<pm1.partOfSpeech> (<hyphen2.match>|'\''|'\'s')? <pr2.partOfSpeech> (<hyphen3.match>|'\''|'\'s')? <pa3.partOfSpeech> (<hyphen4.match>|'\''|'\'s')? <po4.partOfSpeech> (<hyphen5.match>|'\''|'\'s')? <pa5.partOfSpeech> (<hyphen6.match>|'\''|'\'s')? <pm6.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1,  WordSeparatingHyphen_en hyphen2, pos_en.pos_r_en pr2,  WordSeparatingHyphen_en hyphen3, pos_en.pos_a_en pa3,  WordSeparatingHyphen_en hyphen4, pos_en.pos_o_en po4,  WordSeparatingHyphen_en hyphen5, pos_en.pos_a_en pa5,  WordSeparatingHyphen_en hyphen6, pos_en.pos_m_en pm6;

-- output view PosPattern_hyphen_mraoam_en;

create view PosPattern_mraoam_en as
(select * from PosPattern_nohyphen_mraoam_en)
union all
(select * from PosPattern_hyphen_mraoam_en);

-- output view PosPattern_mraoam_en;

create view PosPattern_nohyphen_m_en as
extract 
pm1.partOfSpeech as token1,
pattern (<pm1.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1;

-- output view PosPattern_nohyphen_m_en;

create view PosPattern_hyphen_m_en as
extract 
pm1.partOfSpeech as token1,
pattern (<pm1.partOfSpeech>) ('\''|'\'s')?
return group 1 as concept 
from pos_en.pos_m_en pm1;

-- output view PosPattern_hyphen_m_en;

create view PosPattern_m_en as
(select * from PosPattern_nohyphen_m_en)
union all
(select * from PosPattern_hyphen_m_en);

-- output view PosPattern_m_en;

-- Pos Pattern

-- Step 1: Union all pattern matches
-- Note 1: Pad any missing extra attributes with an empty value,
--         or a null value, to ensure the schemas are union compatible
-- Note 2: Carry an extra attribute ruleId to ensure the output of each pattern 
--         can be reconstructed after consolidation

create view PosPattern_All_en as
(select 'Unknown' as typeName, 'PosPattern_mremm_en' as ruleId, P.concept from PosPattern_mremm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrvrmm_en' as ruleId, P.concept from PosPattern_mrvrmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrmm_en' as ruleId, P.concept from PosPattern_mrmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_fmm_en' as ruleId, P.concept from PosPattern_fmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_fffm_en' as ruleId, P.concept from PosPattern_fffm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mremrm_en' as ruleId, P.concept from PosPattern_mremrm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mraam_en' as ruleId, P.concept from PosPattern_mraam_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_fim_en' as ruleId, P.concept from PosPattern_fim_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mream_en' as ruleId, P.concept from PosPattern_mream_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrvram_en' as ruleId, P.concept from PosPattern_mrvram_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrem_en' as ruleId, P.concept from PosPattern_mrem_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mprmm_en' as ruleId, P.concept from PosPattern_mprmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mram_en' as ruleId, P.concept from PosPattern_mram_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_aoamrm_en' as ruleId, P.concept from PosPattern_aoamrm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mpram_en' as ruleId, P.concept from PosPattern_mpram_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_apam_en' as ruleId, P.concept from PosPattern_apam_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrvm_en' as ruleId, P.concept from PosPattern_mrvm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_apm_en' as ruleId, P.concept from PosPattern_apm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mm_en' as ruleId, P.concept from PosPattern_mm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrmrm_en' as ruleId, P.concept from PosPattern_mrmrm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrmrmm_en' as ruleId, P.concept from PosPattern_mrmrmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_aopm_en' as ruleId, P.concept from PosPattern_aopm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_am_en' as ruleId, P.concept from PosPattern_am_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_ffm_en' as ruleId, P.concept from PosPattern_ffm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mmremm_en' as ruleId, P.concept from PosPattern_mmremm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrvemm_en' as ruleId, P.concept from PosPattern_mrvemm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrVem_en' as ruleId, P.concept from PosPattern_mrVem_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrVm_en' as ruleId, P.concept from PosPattern_mrVm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_amremm_en' as ruleId, P.concept from PosPattern_amremm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mmream_en' as ruleId, P.concept from PosPattern_mmream_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_ff_en' as ruleId, P.concept from PosPattern_ff_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrveam_en' as ruleId, P.concept from PosPattern_mrveam_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_0p_en' as ruleId, P.concept from PosPattern_0p_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_aamm_en' as ruleId, P.concept from PosPattern_aamm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mmmm_en' as ruleId, P.concept from PosPattern_mmmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_amm_en' as ruleId, P.concept from PosPattern_amm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_fm_en' as ruleId, P.concept from PosPattern_fm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_aamrm_en' as ruleId, P.concept from PosPattern_aamrm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_amream_en' as ruleId, P.concept from PosPattern_amream_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_ammm_en' as ruleId, P.concept from PosPattern_ammm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_aaam_en' as ruleId, P.concept from PosPattern_aaam_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_aam_en' as ruleId, P.concept from PosPattern_aam_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mmm_en' as ruleId, P.concept from PosPattern_mmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrV_en' as ruleId, P.concept from PosPattern_mrV_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrvmm_en' as ruleId, P.concept from PosPattern_mrvmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_aoamm_en' as ruleId, P.concept from PosPattern_aoamm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_Vm_en' as ruleId, P.concept from PosPattern_Vm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrvem_en' as ruleId, P.concept from PosPattern_mrvem_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_aoam_en' as ruleId, P.concept from PosPattern_aoam_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mmrm_en' as ruleId, P.concept from PosPattern_mmrm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrvam_en' as ruleId, P.concept from PosPattern_mrvam_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mreamm_en' as ruleId, P.concept from PosPattern_mreamm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrpm_en' as ruleId, P.concept from PosPattern_mrpm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_2V_en' as ruleId, P.concept from PosPattern_2V_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_amrmm_en' as ruleId, P.concept from PosPattern_amrmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_amrm_en' as ruleId, P.concept from PosPattern_amrm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mrm_en' as ruleId, P.concept from PosPattern_mrm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_amrem_en' as ruleId, P.concept from PosPattern_amrem_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_amram_en' as ruleId, P.concept from PosPattern_amram_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mmrmm_en' as ruleId, P.concept from PosPattern_mmrmm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_21V_en' as ruleId, P.concept from PosPattern_21V_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_tm_en' as ruleId, P.concept from PosPattern_tm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_fym_en' as ruleId, P.concept from PosPattern_fym_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mmrem_en' as ruleId, P.concept from PosPattern_mmrem_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mramm_en' as ruleId, P.concept from PosPattern_mramm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_amrvm_en' as ruleId, P.concept from PosPattern_amrvm_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mmram_en' as ruleId, P.concept from PosPattern_mmram_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_mraoam_en' as ruleId, P.concept from PosPattern_mraoam_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_m_en' as ruleId, P.concept from PosPattern_m_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_ZZZZZ_en' as ruleId, P.concept from PosPattern_ZZZZZ_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_ZZZZ_en' as ruleId, P.concept from PosPattern_ZZZZ_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_ZZZ_en' as ruleId, P.concept from PosPattern_ZZZ_en P)
union all
(select 'Unknown' as typeName, 'PosPattern_ZZ_en' as ruleId, P.concept from PosPattern_ZZ_en P)
;

export view PosPattern_All_en;

