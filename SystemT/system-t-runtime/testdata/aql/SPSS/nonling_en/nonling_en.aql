-- -----------------------------------------------------
-- auto generated by NonLingEntitiesManager::generateNonLingModule
-- -----------------------------------------------------

module nonling_en;

import module udf;
import view Doc_en from module doc_en as Doc_en;

set default dictionary language as 'en';

create view url_en as
extract
regex /(((https?|ftp|file|news):\/\/)|((www|ftp)\.))[a-z0-9\/~_:@=+?,#%&.|\-]+[a-z0-9\/~\-]+/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view url_en_Consolidated as
select * from url_en
;

export view url_en_Consolidated;

-- output view url_en_Consolidated;

create view email_en as
extract
regex /[a-z0-9][a-z0-9._-]+@([a-z0-9_-]+\.)+[a-z0-9]+/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view email_en_Consolidated as
select * from email_en
;

export view email_en_Consolidated;

-- output view email_en_Consolidated;

create view UserName_en as
extract
regex /@[a-z0-9][a-z0-9._-]+/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view UserName_en_Consolidated as
select * from UserName_en
;

export view UserName_en_Consolidated;

-- output view UserName_en_Consolidated;

create view Hashtag_en as
extract
regex /#[a-z0-9][a-z0-9._-]+/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Hashtag_en_Consolidated as
select * from Hashtag_en
;

export view Hashtag_en_Consolidated;

-- output view Hashtag_en_Consolidated;

create view Organization_en as
extract
regex /[a-z][a-z]+\.(com|net)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Organization_en_Consolidated as
select * from Organization_en
;

export view Organization_en_Consolidated;

-- output view Organization_en_Consolidated;

create view PhoneNumber_en_regexp1_1 as
extract
regex /\(?[0-9]{3}\)?[ -][0-9]{3}[ -][0-9]{4}/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view PhoneNumber_en_regexp2_2 as
extract
regex /[+]?[0-9]{2}[ -][0-9]{3}[ -][0-9]{3}[ -][0-9]{4}/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view PhoneNumber_en_regexp3_3 as
extract
regex /[+]?[0-9]{2}[ -]\(0\)[0-9]{4}[ -][0-9]{6}/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view PhoneNumber_en_regexp4_4 as
extract
regex /[+][0-9][ .-][0-9]{3}[ .-]?[0-9]{3}[ .-]?[0-9]{4}/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view PhoneNumber_en as
(select '1' as priorityLevel, R.partOfSpeech as partOfSpeech from PhoneNumber_en_regexp1_1 R)
union all
(select '2' as priorityLevel, R.partOfSpeech as partOfSpeech from PhoneNumber_en_regexp2_2 R)
union all
(select '3' as priorityLevel, R.partOfSpeech as partOfSpeech from PhoneNumber_en_regexp3_3 R)
union all
(select '4' as priorityLevel, R.partOfSpeech as partOfSpeech from PhoneNumber_en_regexp4_4 R)
;
create view PhoneNumber_en_Consolidated as
select * from PhoneNumber_en
consolidate on PhoneNumber_en.partOfSpeech using 'LeftToRight' with priority from PhoneNumber_en.priorityLevel;

export view PhoneNumber_en_Consolidated;

-- output view PhoneNumber_en_Consolidated;

create view SocialSecurityNumber_en as
extract
regex /[0-9]{3}[ -][0-9]{2}[ -][0-9]{4}/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view SocialSecurityNumber_en_Consolidated as
select * from SocialSecurityNumber_en
;

export view SocialSecurityNumber_en_Consolidated;

-- output view SocialSecurityNumber_en_Consolidated;

create view Date_en_regexp1_1 as
extract
regex /((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?)[ ]*(30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?),? ([12][0-9]{3}|[0-9]{2})/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp2_2 as
extract
regex /((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?),? [0-9]{4}/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp3_3 as
extract
regex /(30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)[ ]*((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?),? ?([12][0-9]{3}|[0-9]{2})/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp4_4 as
extract
regex /([12][0-9]{3}|[0-9]{2})[ ]*((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?)[ ]*(30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp5_5 as
extract
regex /([12][0-9]{3}|[0-9]{2})[ ]*((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp6_6 as
extract
regex /(0?1|0?2|0?3|0?4|0?5|0?6|0?7|0?8|0?9|10|11|12)[\/](30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)[\/]([12][0-9]{3}|[0-9]{2})/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp7_7 as
extract
regex /(0?1|0?2|0?3|0?4|0?5|0?6|0?7|0?8|0?9|10|11|12)[.](30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)[.]([12][0-9]{3}|[0-9]{2})/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp8_8 as
extract
regex /((0?1|0?2|0?3|0?4|0?5|0?6|0?7|0?8|0?9|10|11|12)|((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?))[-](30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)[-]([12][0-9]{3}|[0-9]{2})/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp9_9 as
extract
regex /(30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)[\/]((0?1|0?2|0?3|0?4|0?5|0?6|0?7|0?8|0?9|10|11|12)|((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?))[\/]([12][0-9]{3}|[0-9]{2})/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp10_10 as
extract
regex /(30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)[.]((0?1|0?2|0?3|0?4|0?5|0?6|0?7|0?8|0?9|10|11|12)|((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?))[.]([12][0-9]{3}|[0-9]{2})/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp11_11 as
extract
regex /(30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)[-]((0?1|0?2|0?3|0?4|0?5|0?6|0?7|0?8|0?9|10|11|12)|((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?))[-]([12][0-9]{3}|[0-9]{2})/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp12_12 as
extract
regex /([12][0-9]{3}|[0-9]{2})[\/]((0?1|0?2|0?3|0?4|0?5|0?6|0?7|0?8|0?9|10|11|12)|((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?))[\/](30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp13_13 as
extract
regex /([12][0-9]{3}|[0-9]{2})[.]((0?1|0?2|0?3|0?4|0?5|0?6|0?7|0?8|0?9|10|11|12)|((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?))[.](30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp14_14 as
extract
regex /([12][0-9]{3})[-]((0?1|0?2|0?3|0?4|0?5|0?6|0?7|0?8|0?9|10|11|12)|((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?))[-](30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp15_15 as
extract
regex /((30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)|(first|second|third|fourth|fifth|sixth|seventh|eighth|ninth|tenth|eleventh|twelfth|thirteenth|fourteenth|fifteenth|sixteenth|seventeenth|eighteenth|ninteenth|twentieth|thirtieth|fortieth|fourtieth|fiftieth|sixtieth|seventieth|eightieth|ninetieth)) of ((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?)(,? ([12][0-9]{3}|[0-9]{2})){0,1}/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp16_16 as
extract
regex /((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?)[ ]*(30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp17_17 as
extract
regex /(30|31|([012]?[0-9]|[0-9])(st|nd|rd|th)?)[ ]*((january|february|march|april|june|july|august|september|october|november|december)|(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(\.)?)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp18_18 as
extract
regex /(mid[ -])?(january|february|march|april|june|july|august|september|october|november|december)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp19_19 as
extract
regex /mid([-]?|[ ]*)[0-9]{2,4}s/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp20_20 as
extract
regex /mid([-]?|[ ]*)[a-z]+ies/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp21_21 as
extract
regex /(january|february|march|april|june|july|august|september|october|november|december)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp22_22 as
extract
regex /(once|twice|((naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty)|[0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?) times) a (day|week|month|semester|year)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en_regexp23_23 as
extract
regex /in the (morning|afternoon|evening)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Date_en as
(select '1' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp1_1 R)
union all
(select '2' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp2_2 R)
union all
(select '3' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp3_3 R)
union all
(select '4' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp4_4 R)
union all
(select '5' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp5_5 R)
union all
(select '6' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp6_6 R)
union all
(select '7' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp7_7 R)
union all
(select '8' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp8_8 R)
union all
(select '9' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp9_9 R)
union all
(select '10' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp10_10 R)
union all
(select '11' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp11_11 R)
union all
(select '12' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp12_12 R)
union all
(select '13' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp13_13 R)
union all
(select '14' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp14_14 R)
union all
(select '15' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp15_15 R)
union all
(select '16' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp16_16 R)
union all
(select '17' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp17_17 R)
union all
(select '18' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp18_18 R)
union all
(select '19' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp19_19 R)
union all
(select '20' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp20_20 R)
union all
(select '21' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp21_21 R)
union all
(select '22' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp22_22 R)
union all
(select '23' as priorityLevel, R.partOfSpeech as partOfSpeech from Date_en_regexp23_23 R)
;
create view Date_en_Consolidated as
select * from Date_en
consolidate on Date_en.partOfSpeech using 'LeftToRight' with priority from Date_en.priorityLevel;

export view Date_en_Consolidated;

-- output view Date_en_Consolidated;

create view Time_en_regexp1_1 as
extract
regex /(noon|midday|midnight)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Time_en_regexp2_2 as
extract
regex /(0*0|0*1|0*2|0*3|0*4|0*5|0*6|0*7|0*8|0*9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24):[012345][0-9](:[0-9]{2})?([ ]*(a\.m\.|p\.m\.|am|pm))?/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Time_en_regexp3_3 as
extract
regex /(0*0|0*1|0*2|0*3|0*4|0*5|0*6|0*7|0*8|0*9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24)([ ]*(a\.m\.|p\.m\.|am|pm))/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Time_en_regexp4_4 as
extract
regex /([0-9]{1,2}|(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty))[ ]*(o'clock)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Time_en as
(select '1' as priorityLevel, R.partOfSpeech as partOfSpeech from Time_en_regexp1_1 R)
union all
(select '2' as priorityLevel, R.partOfSpeech as partOfSpeech from Time_en_regexp2_2 R)
union all
(select '3' as priorityLevel, R.partOfSpeech as partOfSpeech from Time_en_regexp3_3 R)
union all
(select '4' as priorityLevel, R.partOfSpeech as partOfSpeech from Time_en_regexp4_4 R)
;
create view Time_en_Consolidated as
select * from Time_en
consolidate on Time_en.partOfSpeech using 'LeftToRight' with priority from Time_en.priorityLevel;

export view Time_en_Consolidated;

-- output view Time_en_Consolidated;

create view Age_en as
extract
regex /([0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?|(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty))[ -]years?[ -](old|of age)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Age_en_Consolidated as
select * from Age_en
;

export view Age_en_Consolidated;

-- output view Age_en_Consolidated;

create view Period_en_regexp1_1 as
extract
regex /([0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?|(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty))[-]([0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?|(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty))[ ]*(minute|hour|hr|day|week|month|year)s?/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Period_en_regexp2_2 as
extract
regex /([0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?|(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty))([-]?|[ ]*)(minute|hour|hr|day|week|month|year)s?/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Period_en as
(select '1' as priorityLevel, R.partOfSpeech as partOfSpeech from Period_en_regexp1_1 R)
union all
(select '2' as priorityLevel, R.partOfSpeech as partOfSpeech from Period_en_regexp2_2 R)
;
create view Period_en_Consolidated as
select * from Period_en
consolidate on Period_en.partOfSpeech using 'LeftToRight' with priority from Period_en.priorityLevel;

export view Period_en_Consolidated;

-- output view Period_en_Consolidated;

create view Currency_en_regexp1_1 as
extract
regex /(mro|usd|sgd|aud|bsd|bbd|bzd|bmd|bnd|cad|kyd|xcd|fjd|gyd|hkd|jmd|lrd|nad|twd|nzd|sbd|srd|ttd|zwd|\$us|us$|dzd|bhd|iqd|jod|kwd|lyd|rsd|tnd|bif|kmf|djf|cdf|xpf|gnf|rwf|chf|ars|clp|cop|cuc|dop|mxn|php|uyu|kes|sos|tzs|ugx|cyp|egp|gip|lbp|gbp|shp|sdg|syp|czk|skk|dkk|nok|isk|sek|inr|mur|npr|pkr|scr|lkr|mtl|try|mdl|ron|qar|sar|azn|tmm|byr|rub|thb|tho|mad|aed|irr|omr|yer|eur|eu|jpy|dem|dm|ff|afn|aoa|amd|awg|bdt|btn|bob|bam|bwp|brl|bgn|khr|cve|xaf|clf|cny|crc|hrk|ern|eek|etb|gmd|gel|ghs|gtq|htg|hnl|huf|idr|ils|kzt|krw|kgs|lak|lvl|lsl|ltl|mop|mkd|mga|mwk|myr|mvr|mxv|mnt|mmk|ang|mzn|nio|ngn|pab|pgk|pyg|pen|pln|rs|wst|std|sll|zar|sdr|szl|tjs|vah|uzs|vuv|veb|vnd|xof|zmk|xal|ntd|nt|xcp|xau|xpd|xpt|xag|uah|sfr|u.s.[ ]*\$|us[ ]*\$|au[ ]*\$|bds[ ]*\$|bz[ ]*\$|nt[ ]*\$|b[ ]*\$|s[ ]*\$|hk[ ]*\$|hg[ ]*\$|nz[ ]*\$|z[ ]*\$|c[ ]*\$|[£€¥¢$])([-]?|[ ]*)[0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?(([-]?|[ ]*)((hundred|thousand|million|billion|milliard|billiard|trillion|trilliard)s?|(bil|bln|b|mil|mln|m)))?/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Currency_en_regexp2_2 as
extract
regex /.?([0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?|(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty))([-]?|[ ]*)((hundred|thousand|million|billion|milliard|billiard|trillion|trilliard)s?|(bil|bln|b|mil|mln|m))?([-]?|[ ]*)(francs? congolais|pounds? sterling|(united states |u\.s\. |us |singapore |singaporean |sg | australian? |bahamian |bahamas |barbados |belizean |belize |bermudan? |brunei |canadian |canada |cayman islands |cayman |east caribbean |fiji |fijan |guyanese |guyana |hong kong |hg |hk |jamaican? |liberian? |namibian? |new (taiwanese|taiwan|zealand) |solomon islands |solomon |suriname |trinidad and tobago |t&t |kiwi |zimbabwean |zimbabwe )?dollars?|(algerian? |bahraini? |iraqi? |jordanian |jordan |kuwaiti? |libyan? |serbian? |tunisian? )?dinars?|(burundian |burundi |comorian |comores |djiboutian |djibouti |french pacific |guinean? |rwandan? |swiss |congo )?francs?|(argentinan |argentine |chilean |chile |colombian? |cuban? (convertible )?|dominican? |mexican |mexico |philippine |uruguayan |uruguay )?pesos?|(kenyan? |somalian |somali |tanzanian? |ugandan? )?shillings?|(cypriot |cyprus |egyptian |egypt |gibraltar |lebanese |lebanon |saint helena |sudanese |sudan |syrian? |british )pounds?|(czech |slovakian? |slovak )?korunas?|(danish |denmark |norwegian? )?krones?|(icelandic |iceland |swedish |sweden )?kronas?|(tajikistani? )?somonis?|(indian? |mauritian |mauritius |nepalese |nepal |pakistani? |seychelles |sri lankan? )?rupees?|(maltese |malta |(new )?turkish |turkey )?liras?|(moldovan |moldovia |romanian? )?leus?|(qatari? |saudi arabian? )?riyals?|(azerbaijani? |turkmenistani? )?manats?|(belarusian? |russian? )?rubles?|(thailand |thai offshore |thai )?bahts?|(moroccan |morocco |united arab emirates |u.a.e. |u.a.e |uae )?dirhams?|(iranian |iran |omani? |yemeni? )?rials?|euros?|(japanese |japan |jp )?yens?|deutsche marks?|french francs?|(afghanistan |afghan )?afghanis?|(albanian? )?leks?|(angolan? )?kwanzas?|(armenian? )?drams?|(aruban? )?florins?|(bangladeshi? )?takas?|(bhutanese |bhutan )?ngultrums?|(bolivian? )?bolivianos?|bosnia-herzegovina (convertible )?marks?|(botswanan? )?pulas?|(brazilian |brazil )?reale?s?|(bulgarian? )?levs?|(cambodian? )?riels?|(cape verde )?escudos?|west african cfas?|central african cfas?|(chilean|chile) unidade?s? de fomento|(chinese |china )?yuans?|(costa rican? )?colons?|(croatian? )?kunas?|(eritrean? )?nakfas?|(estonian? )?kroons?|(ethiopian? )?birrs?|(gambian? )?dalasis?|(georgian? )?laris?|(ghanaian |ghana )?cedis?|(guatemalan? )?quetzals?|(haitian |haiti )?gourdes?|(honduran |honduras )?lempiras?|(hungarian |hungary )?forints?|(indonesian? )?rupiahs?|(israeli? )?(new )?shekels?|(kazakhstani? )?tenges?|(korean? )?wons?|(kyrgyzstani? |uzbekistani? )?soms?|(lao )?kips?|(latvian? )?lats?|(lesotho |lesothan )?lotis?|(lithuanian? )?litas?|(macau )?patacas?|(macedonian? )?denars?|(malagasy )?(ariaries|ariary)|(malawian? |zambian? )?kwachas?|(malaysian? )?ringgits?|(maldives )?rufiyaas?|(mauritanian? )?ouguiyas?|(mexican|mexico) unidade?s? de inversion|(mongolian? )?tugriks?|(myanmar )?kyats?|(netherlands antillean )?guilders?|(new mozambican? )?meticals?|nicaraguan? cordoba oros?|(nigerian? )?nairas?|(panamanian |panama )?balboas?|(papua new guinea )?kinas?|(paraguay )?guaranis?|(peruvian |peru )?nuevos? sole?s?|(polish |poland )?zlotys?|(samoan? )?talas?|(sao tome )?dobras?|(sierra leonean |sierre leone )?leones?|(south african? )?rands?|special drawing rights?|(swazi )?lilangenis?|(tongan? )?pa'angas?|(ukrainian? )?hryvnias?|(vanuatu )?vatus?|(venezuelan? )?bolivars?|cents?|(viet nam |vietnam |vietnamese )?dongs?|ounces? of (aluminum|copper|gold|palladium|platinum|silver))/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Currency_en_regexp3_3 as
extract
regex /.?([0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?|(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty))[ ]*((hundred|thousand|million|billion|milliard|billiard|trillion|trilliard)s?|(bil|bln|b|mil|mln|m))? ((hundred|thousand|million|billion|milliard|billiard|trillion|trilliard)s?|(bil|bln|b|mil|mln|m))? (francs? congolais|pounds? sterling|(united states |u\.s\. |us |singapore |singaporean |sg | australian? |bahamian |bahamas |barbados |belizean |belize |bermudan? |brunei |canadian |canada |cayman islands |cayman |east caribbean |fiji |fijan |guyanese |guyana |hong kong |hg |hk |jamaican? |liberian? |namibian? |new (taiwanese|taiwan|zealand) |solomon islands |solomon |suriname |trinidad and tobago |t&t |kiwi |zimbabwean |zimbabwe )?dollars?|(algerian? |bahraini? |iraqi? |jordanian |jordan |kuwaiti? |libyan? |serbian? |tunisian? )?dinars?|(burundian |burundi |comorian |comores |djiboutian |djibouti |french pacific |guinean? |rwandan? |swiss |congo )?francs?|(argentinan |argentine |chilean |chile |colombian? |cuban? (convertible )?|dominican? |mexican |mexico |philippine |uruguayan |uruguay )?pesos?|(kenyan? |somalian |somali |tanzanian? |ugandan? )?shillings?|(cypriot |cyprus |egyptian |egypt |gibraltar |lebanese |lebanon |saint helena |sudanese |sudan |syrian? |british )pounds?|(czech |slovakian? |slovak )?korunas?|(danish |denmark |norwegian? )?krones?|(icelandic |iceland |swedish |sweden )?kronas?|(tajikistani? )?somonis?|(indian? |mauritian |mauritius |nepalese |nepal |pakistani? |seychelles |sri lankan? )?rupees?|(maltese |malta |(new )?turkish |turkey )?liras?|(moldovan |moldovia |romanian? )?leus?|(qatari? |saudi arabian? )?riyals?|(azerbaijani? |turkmenistani? )?manats?|(belarusian? |russian? )?rubles?|(thailand |thai offshore |thai )?bahts?|(moroccan |morocco |united arab emirates |u.a.e. |u.a.e |uae )?dirhams?|(iranian |iran |omani? |yemeni? )?rials?|euros?|(japanese |japan |jp )?yens?|deutsche marks?|french francs?|(afghanistan |afghan )?afghanis?|(albanian? )?leks?|(angolan? )?kwanzas?|(armenian? )?drams?|(aruban? )?florins?|(bangladeshi? )?takas?|(bhutanese |bhutan )?ngultrums?|(bolivian? )?bolivianos?|bosnia-herzegovina (convertible )?marks?|(botswanan? )?pulas?|(brazilian |brazil )?reale?s?|(bulgarian? )?levs?|(cambodian? )?riels?|(cape verde )?escudos?|west african cfas?|central african cfas?|(chilean|chile) unidade?s? de fomento|(chinese |china )?yuans?|(costa rican? )?colons?|(croatian? )?kunas?|(eritrean? )?nakfas?|(estonian? )?kroons?|(ethiopian? )?birrs?|(gambian? )?dalasis?|(georgian? )?laris?|(ghanaian |ghana )?cedis?|(guatemalan? )?quetzals?|(haitian |haiti )?gourdes?|(honduran |honduras )?lempiras?|(hungarian |hungary )?forints?|(indonesian? )?rupiahs?|(israeli? )?(new )?shekels?|(kazakhstani? )?tenges?|(korean? )?wons?|(kyrgyzstani? |uzbekistani? )?soms?|(lao )?kips?|(latvian? )?lats?|(lesotho |lesothan )?lotis?|(lithuanian? )?litas?|(macau )?patacas?|(macedonian? )?denars?|(malagasy )?(ariaries|ariary)|(malawian? |zambian? )?kwachas?|(malaysian? )?ringgits?|(maldives )?rufiyaas?|(mauritanian? )?ouguiyas?|(mexican|mexico) unidade?s? de inversion|(mongolian? )?tugriks?|(myanmar )?kyats?|(netherlands antillean )?guilders?|(new mozambican? )?meticals?|nicaraguan? cordoba oros?|(nigerian? )?nairas?|(panamanian |panama )?balboas?|(papua new guinea )?kinas?|(paraguay )?guaranis?|(peruvian |peru )?nuevos? sole?s?|(polish |poland )?zlotys?|(samoan? )?talas?|(sao tome )?dobras?|(sierra leonean |sierre leone )?leones?|(south african? )?rands?|special drawing rights?|(swazi )?lilangenis?|(tongan? )?pa'angas?|(ukrainian? )?hryvnias?|(vanuatu )?vatus?|(venezuelan? )?bolivars?|cents?|(viet nam |vietnam |vietnamese )?dongs?|ounces? of (aluminum|copper|gold|palladium|platinum|silver))/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Currency_en_regexp4_4 as
extract
regex /(mro|usd|sgd|aud|bsd|bbd|bzd|bmd|bnd|cad|kyd|xcd|fjd|gyd|hkd|jmd|lrd|nad|twd|nzd|sbd|srd|ttd|zwd|\$us|us$|dzd|bhd|iqd|jod|kwd|lyd|rsd|tnd|bif|kmf|djf|cdf|xpf|gnf|rwf|chf|ars|clp|cop|cuc|dop|mxn|php|uyu|kes|sos|tzs|ugx|cyp|egp|gip|lbp|gbp|shp|sdg|syp|czk|skk|dkk|nok|isk|sek|inr|mur|npr|pkr|scr|lkr|mtl|try|mdl|ron|qar|sar|azn|tmm|byr|rub|thb|tho|mad|aed|irr|omr|yer|eur|eu|jpy|dem|dm|ff|afn|aoa|amd|awg|bdt|btn|bob|bam|bwp|brl|bgn|khr|cve|xaf|clf|cny|crc|hrk|ern|eek|etb|gmd|gel|ghs|gtq|htg|hnl|huf|idr|ils|kzt|krw|kgs|lak|lvl|lsl|ltl|mop|mkd|mga|mwk|myr|mvr|mxv|mnt|mmk|ang|mzn|nio|ngn|pab|pgk|pyg|pen|pln|rs|wst|std|sll|zar|sdr|szl|tjs|vah|uzs|vuv|veb|vnd|xof|zmk|xal|ntd|nt|xcp|xau|xpd|xpt|xag|uah|sfr|u.s.[ ]*\$|us[ ]*\$|au[ ]*\$|bds[ ]*\$|bz[ ]*\$|nt[ ]*\$|b[ ]*\$|s[ ]*\$|hk[ ]*\$|hg[ ]*\$|nz[ ]*\$|z[ ]*\$|c[ ]*\$|[£€¥¢$])[0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?\-[0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Currency_en_regexp5_5 as
extract
regex /(mro|usd|sgd|aud|bsd|bbd|bzd|bmd|bnd|cad|kyd|xcd|fjd|gyd|hkd|jmd|lrd|nad|twd|nzd|sbd|srd|ttd|zwd|\$us|us$|dzd|bhd|iqd|jod|kwd|lyd|rsd|tnd|bif|kmf|djf|cdf|xpf|gnf|rwf|chf|ars|clp|cop|cuc|dop|mxn|php|uyu|kes|sos|tzs|ugx|cyp|egp|gip|lbp|gbp|shp|sdg|syp|czk|skk|dkk|nok|isk|sek|inr|mur|npr|pkr|scr|lkr|mtl|try|mdl|ron|qar|sar|azn|tmm|byr|rub|thb|tho|mad|aed|irr|omr|yer|eur|eu|jpy|dem|dm|ff|afn|aoa|amd|awg|bdt|btn|bob|bam|bwp|brl|bgn|khr|cve|xaf|clf|cny|crc|hrk|ern|eek|etb|gmd|gel|ghs|gtq|htg|hnl|huf|idr|ils|kzt|krw|kgs|lak|lvl|lsl|ltl|mop|mkd|mga|mwk|myr|mvr|mxv|mnt|mmk|ang|mzn|nio|ngn|pab|pgk|pyg|pen|pln|rs|wst|std|sll|zar|sdr|szl|tjs|vah|uzs|vuv|veb|vnd|xof|zmk|xal|ntd|nt|xcp|xau|xpd|xpt|xag|uah|sfr|u.s.[ ]*\$|us[ ]*\$|au[ ]*\$|bds[ ]*\$|bz[ ]*\$|nt[ ]*\$|b[ ]*\$|s[ ]*\$|hk[ ]*\$|hg[ ]*\$|nz[ ]*\$|z[ ]*\$|c[ ]*\$|[£€¥¢$])([-]?|[ ]*)[0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Currency_en as
(select '1' as priorityLevel, R.partOfSpeech as partOfSpeech from Currency_en_regexp1_1 R)
union all
(select '2' as priorityLevel, R.partOfSpeech as partOfSpeech from Currency_en_regexp2_2 R)
union all
(select '3' as priorityLevel, R.partOfSpeech as partOfSpeech from Currency_en_regexp3_3 R)
union all
(select '4' as priorityLevel, R.partOfSpeech as partOfSpeech from Currency_en_regexp4_4 R)
union all
(select '5' as priorityLevel, R.partOfSpeech as partOfSpeech from Currency_en_regexp5_5 R)
;
create view Currency_en_Consolidated as
select * from Currency_en
consolidate on Currency_en.partOfSpeech using 'LeftToRight' with priority from Currency_en.priorityLevel;

export view Currency_en_Consolidated;

-- output view Currency_en_Consolidated;

create view Percent_en_regexp1_1 as
extract
regex /\.?([0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?|(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty))([-]?|[ ]*)(%|((per cent|percent)s?))/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Percent_en_regexp2_2 as
extract
regex /((naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty)([-]?|[ ]*)(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty)[ ]*(%|((per cent|percent)s?)))/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Percent_en as
(select '1' as priorityLevel, R.partOfSpeech as partOfSpeech from Percent_en_regexp1_1 R)
union all
(select '2' as priorityLevel, R.partOfSpeech as partOfSpeech from Percent_en_regexp2_2 R)
;
create view Percent_en_Consolidated as
select * from Percent_en
consolidate on Percent_en.partOfSpeech using 'LeftToRight' with priority from Percent_en.priorityLevel;

export view Percent_en_Consolidated;

-- output view Percent_en_Consolidated;

create view Weights_Measures_en_regexp1_1 as
extract
regex /[0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?[\/-][0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?[ ]*(((centimeter|centimetre|millimeter|millimetre|kilometer|kilometre|yard|mile|gill|pint|gallon|ton|kilobyte|terabyte|gigabyte|megabyte|byte|megahertz|kilohertz|hertz|meter|metre|kilogram|milligram|ounce|milliliter|millilitre)s?|(inches|inch|foot|feet))|(mhz|mm|ml|mb|cm|kg|oz|mg|km|ft|k\-bps|tb|gb|kb|hz|k|m²|m³|m|b))/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Weights_Measures_en_regexp2_2 as
extract
regex /([0-9]{1,3}([.,]?[0-9]{3})*([.,]?[0-9]+)?|(naught|nought|zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|ninteen|nineteen|twenty|thirty|forty|fourty|fifty|sixty|seventy|eighty|ninety|ninty))[ ]*(((centimeter|centimetre|millimeter|millimetre|kilometer|kilometre|yard|mile|gill|pint|gallon|ton|kilobyte|terabyte|gigabyte|megabyte|byte|megahertz|kilohertz|hertz|meter|metre|kilogram|milligram|ounce|milliliter|millilitre)s?|(inches|inch|foot|feet))|(mhz|mm|ml|mb|cm|kg|oz|mg|km|ft|k\-bps|tb|gb|kb|hz|k|m²|m³|m|b))/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view Weights_Measures_en as
(select '1' as priorityLevel, R.partOfSpeech as partOfSpeech from Weights_Measures_en_regexp1_1 R)
union all
(select '2' as priorityLevel, R.partOfSpeech as partOfSpeech from Weights_Measures_en_regexp2_2 R)
;
create view Weights_Measures_en_Consolidated as
select * from Weights_Measures_en
consolidate on Weights_Measures_en.partOfSpeech using 'LeftToRight' with priority from Weights_Measures_en.priorityLevel;

export view Weights_Measures_en_Consolidated;

-- output view Weights_Measures_en_Consolidated;

create view IP_en as
extract
regex /(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/
with flags 'CASE_INSENSITIVE'
on between 1 and 20 tokens in D.text as partOfSpeech
from Doc_en D;

create view IP_en_Consolidated as
select * from IP_en
;

export view IP_en_Consolidated;

-- output view IP_en_Consolidated;

create view Nonling_union_unconsolidated_en as
(select 'url' as typeName, url_en.partOfSpeech as concept from url_en)
union all
(select 'email' as typeName, email_en.partOfSpeech as concept from email_en)
union all
(select 'UserName' as typeName, UserName_en.partOfSpeech as concept from UserName_en)
union all
(select 'Hashtag' as typeName, Hashtag_en.partOfSpeech as concept from Hashtag_en)
union all
(select 'Organization' as typeName, Organization_en.partOfSpeech as concept from Organization_en)
union all
(select 'PhoneNumber' as typeName, PhoneNumber_en_Consolidated.partOfSpeech as concept from PhoneNumber_en_Consolidated)
union all
(select 'SocialSecurityNumber' as typeName, SocialSecurityNumber_en.partOfSpeech as concept from SocialSecurityNumber_en)
union all
(select 'Date' as typeName, Date_en_Consolidated.partOfSpeech as concept from Date_en_Consolidated)
union all
(select 'Time' as typeName, Time_en_Consolidated.partOfSpeech as concept from Time_en_Consolidated)
union all
(select 'Age' as typeName, Age_en.partOfSpeech as concept from Age_en)
union all
(select 'Period' as typeName, Period_en_Consolidated.partOfSpeech as concept from Period_en_Consolidated)
union all
(select 'Currency' as typeName, Currency_en_Consolidated.partOfSpeech as concept from Currency_en_Consolidated)
union all
(select 'Percent' as typeName, Percent_en_Consolidated.partOfSpeech as concept from Percent_en_Consolidated)
union all
(select 'Weights-Measures' as typeName, Weights_Measures_en_Consolidated.partOfSpeech as concept from Weights_Measures_en_Consolidated)
union all
(select 'IP' as typeName, IP_en.partOfSpeech as concept from IP_en)
;

create view Nonling_union_en as
select * from Nonling_union_unconsolidated_en V
consolidate on V.concept using 'LeftToRight';

create view Nonling_unvalidated_en as
select 'Excluded' as typeName, V.concept as concept from Nonling_union_en V
where Not(udf.isValidContext(LeftContext(V.concept, 2), V.concept, RightContext(V.concept, 2)));

create view Nonling_unconsolidated_en as
(select 1 as priorityLevel, V.typeName, V.concept from Nonling_unvalidated_en V)
union all
(select 2 as priorityLevel, V.typeName, V.concept from Nonling_union_en V);

create view Nonling_en as
select * from Nonling_unconsolidated_en V
consolidate on V.concept using 'LeftToRight' with priority from V.priorityLevel;

export view Nonling_en;

