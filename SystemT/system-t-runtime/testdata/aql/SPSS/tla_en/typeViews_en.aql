-- -----------------------------------------------------
-- auto generated by UserTermsManager::generateTypeViews
-- -----------------------------------------------------

module tla_en;

import view Final_Concepts_en from module concepts_en as Final_Concepts;

create view PositiveCompetence_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('PositiveCompetence', GetText(C.typeName));

create view PositiveFeeling_Emoticon_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('PositiveFeeling_Emoticon', GetText(C.typeName));

create view Uncertain_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Uncertain', GetText(C.typeName));

create view OpinionNeg_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('OpinionNeg', GetText(C.typeName));

create view Date_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Date', GetText(C.typeName));

create view Product_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Product', GetText(C.typeName));

create view Organization_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Organization', GetText(C.typeName));

create view Negative_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Negative', GetText(C.typeName));

create view Location_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Location', GetText(C.typeName));

create view SocialSecurityNumber_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('SocialSecurityNumber', GetText(C.typeName));

create view UserName_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('UserName', GetText(C.typeName));

create view Positive_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Positive', GetText(C.typeName));

create view NewType_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('NewType', GetText(C.typeName));

create view email_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('email', GetText(C.typeName));

create view Age_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Age', GetText(C.typeName));

create view NegativeAttitude_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('NegativeAttitude', GetText(C.typeName));

create view Period_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Period', GetText(C.typeName));

create view PositiveFeeling_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('PositiveFeeling', GetText(C.typeName));

create view PositiveAttitude_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('PositiveAttitude', GetText(C.typeName));

create view Percent_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Percent', GetText(C.typeName));

create view Budget_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Budget', GetText(C.typeName));

create view Weights_Measures_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Weights-Measures', GetText(C.typeName));

create view IP_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('IP', GetText(C.typeName));

create view NegativeFeeling_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('NegativeFeeling', GetText(C.typeName));

create view Bill_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Bill', GetText(C.typeName));

create view Unknown_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Unknown', GetText(C.typeName));

create view Hashtag_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Hashtag', GetText(C.typeName));

create view Time_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Time', GetText(C.typeName));

create view NegativeRecommendation_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('NegativeRecommendation', GetText(C.typeName));

create view url_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('url', GetText(C.typeName));

create view Currency_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Currency', GetText(C.typeName));

create view PositiveFunctioning_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('PositiveFunctioning', GetText(C.typeName));

create view Contextual_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Contextual', GetText(C.typeName));

create view PositiveRecommendation_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('PositiveRecommendation', GetText(C.typeName));

create view NegativeFunctioning_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('NegativeFunctioning', GetText(C.typeName));

create view Person_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('Person', GetText(C.typeName));

create view PhoneNumber_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('PhoneNumber', GetText(C.typeName));

create view NegativeBudget_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('NegativeBudget', GetText(C.typeName));

create view NegativeCompetence_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('NegativeCompetence', GetText(C.typeName));

create view PositiveBudget_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('PositiveBudget', GetText(C.typeName));

create view NegativeFeeling_Emoticon_en as
select C.concept as concept, C.typeName as typeName
from Final_Concepts C
where Equals('NegativeFeeling_Emoticon', GetText(C.typeName));

