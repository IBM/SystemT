-- ------------------------------------------------
-- auto generated by TlaPatternManager::generateAql
-- ------------------------------------------------

module tla_en;



import view Sentences_en from module sentence_en as Sentences;

-- KNOWN ISSUE: the use of <token> in a pattern match is incompatible with the "inline_match on sentence" clause
-- need to use our own definition of Token (Tok).

create view Tok as
  extract
    regex /[^.]+/
    on 1 token in s.sentence 
    as match
  from
    Sentences s
;

--
-- name  =Seq_would_be_mOpinionPos
-- value =would be $mOpinionPos
--
create view Ptn_Seq_would_be_mOpinionPos_en as
select
   X.pattern_val as pattern_val,
   'Ptn_Seq_would_be_mOpinionPos_en' as patternName
from (
   extract

   pattern
     ('would') ('be') (<mOpinionPos1.concept>) 
   return
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_SeqTypeUnknown_would_be_mOpinionPos_en as
select
   'Unknown' as typeName,
   X.pattern_val as concept
from Ptn_Seq_would_be_mOpinionPos_en X
consolidate on X.pattern_val;

-- ($mOpinionNeg|$mTopic)
create view PtnMerge_mOpinionNeg_mTopic_en as
(select X.typeName as typeName, X.concept as concept from mOpinionNeg_en X)
union all
(select X.typeName as typeName, X.concept as concept from mTopic_en X);

-- ($Contextual|less|more)
create dictionary lessDict_en as ('less');
create view less_en as
select X.typeName as typeName, X.concept as concept
from (
 extract 'token' as typeName, dictionary 'lessDict_en' on Sentences.sentence as concept
 from Sentences )X
consolidate on X.concept;

create dictionary moreDict_en as ('more');
create view more_en as
select X.typeName as typeName, X.concept as concept
from (
 extract 'token' as typeName, dictionary 'moreDict_en' on Sentences.sentence as concept
 from Sentences )X
consolidate on X.concept;

create view PtnMerge_Contextual_less_more_en as
(select X.typeName as typeName, X.concept as concept from Contextual_en X)
union all
(select X.typeName as typeName, X.concept as concept from less_en X)
union all
(select X.typeName as typeName, X.concept as concept from more_en X);

-- ($Period|$mTopic)
create view PtnMerge_Period_mTopic_en as
(select X.typeName as typeName, X.concept as concept from Period_en X)
union all
(select X.typeName as typeName, X.concept as concept from mTopic_en X);

-- ($Contextual|$mOpinionNeg)
create view PtnMerge_Contextual_mOpinionNeg_en as
(select X.typeName as typeName, X.concept as concept from Contextual_en X)
union all
(select X.typeName as typeName, X.concept as concept from mOpinionNeg_en X);

-- ($NegativeFeeling_Emoticon|$PositiveFeeling_Emoticon)
create view PtnMerge_NegativeFeeling_Emoticon_PositiveFeeling_Emoticon_en as
(select X.typeName as typeName, X.concept as concept from NegativeFeeling_Emoticon_en X)
union all
(select X.typeName as typeName, X.concept as concept from PositiveFeeling_Emoticon_en X);

-- ($Negative|would be $mOpinionPos)
create dictionary would_be_mOpinionPosDict_en as ('would be $mOpinionPos');
create view would_be_mOpinionPos_en as
select X.typeName as typeName, X.concept as concept
from (
 extract 'token' as typeName, dictionary 'would_be_mOpinionPosDict_en' on Sentences.sentence as concept
 from Sentences )X
consolidate on X.concept;

create view PtnMerge_Negative_Ptn_SeqTypeUnknown_would_be_mOpinionPos_en_en as
(select X.typeName as typeName, X.concept as concept from Negative_en X)
union all
(select X.typeName as typeName, X.concept as concept from Ptn_SeqTypeUnknown_would_be_mOpinionPos_en X);

-- ($mAdvNeg|$mToo)
create view PtnMerge_mAdvNeg_mToo_en as
(select X.typeName as typeName, X.concept as concept from mAdvNeg_en X)
union all
(select X.typeName as typeName, X.concept as concept from mToo_en X);

-- ($mOpinion|$mTopic)
create view PtnMerge_mOpinion_mTopic_en as
(select X.typeName as typeName, X.concept as concept from mOpinion_en X)
union all
(select X.typeName as typeName, X.concept as concept from mTopic_en X);

-- ($mOpinionNeg|$mOpinionPos)
create view PtnMerge_mOpinionNeg_mOpinionPos_en as
(select X.typeName as typeName, X.concept as concept from mOpinionNeg_en X)
union all
(select X.typeName as typeName, X.concept as concept from mOpinionPos_en X);

-- ($Contextual|$OpinionNeg|$mOpinionPos)
create view PtnMerge_Contextual_OpinionNeg_mOpinionPos_en as
(select X.typeName as typeName, X.concept as concept from Contextual_en X)
union all
(select X.typeName as typeName, X.concept as concept from OpinionNeg_en X)
union all
(select X.typeName as typeName, X.concept as concept from mOpinionPos_en X);

-- ($mNegFeelingEmoticon|$mOpinion|$mPosFeelingEmoticon)
create view PtnMerge_mNegFeelingEmoticon_mOpinion_mPosFeelingEmoticon_en as
(select X.typeName as typeName, X.concept as concept from mNegFeelingEmoticon_en X)
union all
(select X.typeName as typeName, X.concept as concept from mOpinion_en X)
union all
(select X.typeName as typeName, X.concept as concept from mPosFeelingEmoticon_en X);

-- ($Negative|$Positive)
create view PtnMerge_Negative_Positive_en as
(select X.typeName as typeName, X.concept as concept from Negative_en X)
union all
(select X.typeName as typeName, X.concept as concept from Positive_en X);

-- ($Uncertain|$mOpinionNeg|$mOpinionPos)
create view PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en as
(select X.typeName as typeName, X.concept as concept from Uncertain_en X)
union all
(select X.typeName as typeName, X.concept as concept from mOpinionNeg_en X)
union all
(select X.typeName as typeName, X.concept as concept from mOpinionPos_en X);

-- ($Contextual|$mOpinionNeg|$mOpinionPos)
create view PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en as
(select X.typeName as typeName, X.concept as concept from Contextual_en X)
union all
(select X.typeName as typeName, X.concept as concept from mOpinionNeg_en X)
union all
(select X.typeName as typeName, X.concept as concept from mOpinionPos_en X);

-- ($Currency|$Percent)
create view PtnMerge_Currency_Percent_en as
(select X.typeName as typeName, X.concept as concept from Currency_en X)
union all
(select X.typeName as typeName, X.concept as concept from Percent_en X);

-- (less|more)
create view PtnMerge_less_more_en as
(select X.typeName as typeName, X.concept as concept from less_en X)
union all
(select X.typeName as typeName, X.concept as concept from more_en X);

-- ($mDet|$mPrep)
create view PtnMerge_mDet_mPrep_en as
(select X.typeName as typeName, X.concept as concept from mDet_en X)
union all
(select X.typeName as typeName, X.concept as concept from mPrep_en X);

-- ($Contextual|$Positive)
create view PtnMerge_Contextual_Positive_en as
(select X.typeName as typeName, X.concept as concept from Contextual_en X)
union all
(select X.typeName as typeName, X.concept as concept from Positive_en X);

-- ($Contextual|$Negative|$Positive)
create view PtnMerge_Contextual_Negative_Positive_en as
(select X.typeName as typeName, X.concept as concept from Contextual_en X)
union all
(select X.typeName as typeName, X.concept as concept from Negative_en X)
union all
(select X.typeName as typeName, X.concept as concept from Positive_en X);

-- ($Contextual|$Negative)
create view PtnMerge_Contextual_Negative_en as
(select X.typeName as typeName, X.concept as concept from Contextual_en X)
union all
(select X.typeName as typeName, X.concept as concept from Negative_en X);

-- ($Contextual|$mOpinionPos)
create view PtnMerge_Contextual_mOpinionPos_en as
(select X.typeName as typeName, X.concept as concept from Contextual_en X)
union all
(select X.typeName as typeName, X.concept as concept from mOpinionPos_en X);



--
-- name  ="not" + Positive + 2 topics_2
-- value =($mAdvNeg|$mSupportNeg) $mEmpty{0,3} $mOpinionPos $mPrep $mTopic $mCoord $mTopic ($mPrep $mDet{0,3} $mTopic)?
-- output(1)=$5\t#5\tnot $3\tNegative
-- output(2)=$7\t#7\tnot $3\tNegative
--
create view Ptn__not____Positive___2_topics_2_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type5 as type5,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___2_topics_2_en' as patternName
from (
   extract
   mTopic1.typeName as type5,
   mTopic2.typeName as type7,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>) (<mEmpty1.concept>{0,3}) (<mOpinionPos1.concept>) (<mPrep1.concept>) (<mTopic1.concept>) (<mCoord1.concept>) (<mTopic2.concept>) ((<mPrep2.concept> <mDet1.concept>{0,3} <mTopic3.concept>)?) 
   return
     group 5 as concept1_1 and
     group 3 as concept1_2 and
     group 7 as concept2_1 and
     group 3 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2, 
      mPrep_en mPrep2, 
      mDet_en mDet1, 
      mTopic_en mTopic3

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___2_topics_2_en_output1 as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___2_topics_2_en' as patternName
from Ptn__not____Positive___2_topics_2_en X
consolidate on X.pattern_val;

create view Ptn__not____Positive___2_topics_2_en_output2 as
select
   X.concept2_1 as concept1,
   X.type7 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____Positive___2_topics_2_en' as patternName
from Ptn__not____Positive___2_topics_2_en X
consolidate on X.pattern_val;

create view Ptn__not____Positive___2_topics_2_en_output_all as
(select X.* from Ptn__not____Positive___2_topics_2_en_output1 X)
union all
(select X.* from Ptn__not____Positive___2_topics_2_en_output2 X)
;



--
-- name  ="not" + Negative + topic + topic + opinion_3
-- value =($mAdvNeg|$mSupportNeg) $mEmpty{0,3} $mOpinionNeg $mDet? $mTopic $mCoord @{0,1} $mTopic ($mBe|$mHave|$mEmpty){1,3} ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$5\t#5\tnot $3\tPositive
-- output(2)=$8\t#8\t$10\t#10
--
create view Ptn__not____Negative___topic___topic___opinion_3_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type5 as type5,
   X.type8 as type8,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn__not____Negative___topic___topic___opinion_3_en' as patternName
from (
   extract
   mTopic1.typeName as type5,
   mTopic2.typeName as type8,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type10,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>) (<mEmpty1.concept>{0,3}) (<mOpinionNeg1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>) (<Tok1.match>{0,1}) (<mTopic2.concept>) ((<mBe1.concept>|<mHave1.concept>|<mEmpty2.concept>){1,3}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 5 as concept1_1 and
     group 3 as concept1_2 and
     group 8 as concept2_1 and
     group 11 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty1, 
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty2, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Negative___topic___topic___opinion_3_en_output1 as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Negative___topic___topic___opinion_3_en' as patternName
from Ptn__not____Negative___topic___topic___opinion_3_en X
consolidate on X.pattern_val;

create view Ptn__not____Negative___topic___topic___opinion_3_en_output2 as
select
   X.concept2_1 as concept1,
   X.type8 as type1,
   X.concept2_2 as concept2,
   X.type10 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____Negative___topic___topic___opinion_3_en' as patternName
from Ptn__not____Negative___topic___topic___opinion_3_en X
consolidate on X.pattern_val;

create view Ptn__not____Negative___topic___topic___opinion_3_en_output_all as
(select X.* from Ptn__not____Negative___topic___topic___opinion_3_en_output1 X)
union all
(select X.* from Ptn__not____Negative___topic___topic___opinion_3_en_output2 X)
;







--
-- name  ="not" + Negative + 2 topics_6
-- value =($mAdvNeg|$mSupportNeg) $mEmpty{0,1} ($mOpinionNeg|$Contextual) $mEmpty{0,1} $mDet? $mTopic $mCoord @{0,1} $mTopic
-- output(1)=$6\t#6\tnot $3\t#3
-- output(2)=$9\t#9\tnot $3\t#3
--
create view Ptn__not____Negative___2_topics_6_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type3 as type3,
   X.type6 as type6,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn__not____Negative___2_topics_6_en' as patternName
from (
   extract
   PtnMerge_Contextual_mOpinionNeg_en1.typeName as type3,
   mTopic1.typeName as type6,
   mTopic2.typeName as type9,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>) (<mEmpty1.concept>{0,1}) (<PtnMerge_Contextual_mOpinionNeg_en1.concept>) (<mEmpty2.concept>{0,1}) (<mDet1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>) (<Tok1.match>{0,1}) (<mTopic2.concept>) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 9 as concept2_1 and
     group 3 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_en PtnMerge_Contextual_mOpinionNeg_en1, 
      mEmpty_en mEmpty2, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Negative___2_topics_6_en_output1 as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Negative___2_topics_6_en' as patternName
from Ptn__not____Negative___2_topics_6_en X
consolidate on X.pattern_val;

create view Ptn__not____Negative___2_topics_6_en_output2 as
select
   X.concept2_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____Negative___2_topics_6_en' as patternName
from Ptn__not____Negative___2_topics_6_en X
consolidate on X.pattern_val;

create view Ptn__not____Negative___2_topics_6_en_output_all as
(select X.* from Ptn__not____Negative___2_topics_6_en_output1 X)
union all
(select X.* from Ptn__not____Negative___2_topics_6_en_output2 X)
;



--
-- name  ="no" + 2 topics_7
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) $mEmpty{0,3} $mTopic $mCoord{1,2} $mDet? $mTopic
-- output(1)=$3\t#3\tno\tContextual
-- output(2)=$6\t#6\tno\tContextual
--
create view Ptn__no____2_topics_7_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.type3 as type3,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__no____2_topics_7_en' as patternName
from (
   extract
   mTopic1.typeName as type3,
   mTopic2.typeName as type6,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<mEmpty1.concept>{0,3}) (<mTopic1.concept>) (<mCoord1.concept>{1,2}) (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__no____2_topics_7_en_output1 as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   'no' as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__no____2_topics_7_en' as patternName
from Ptn__no____2_topics_7_en X
consolidate on X.pattern_val;

create view Ptn__no____2_topics_7_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   'no' as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__no____2_topics_7_en' as patternName
from Ptn__no____2_topics_7_en X
consolidate on X.pattern_val;

create view Ptn__no____2_topics_7_en_output_all as
(select X.* from Ptn__no____2_topics_7_en_output1 X)
union all
(select X.* from Ptn__no____2_topics_7_en_output2 X)
;



--
-- name  ="not" + 2 Positive_8
-- value =($mSupportNeg|$mMiscNeg) $mDet? (single)? $mOpinionPos $mCoord{1,2} $mOpinionPos
-- output(1)=not $4\tNegative
-- output(2)=not $6\tNegative
--
create view Ptn__not____2_Positive_8_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Positive_8_en' as patternName
from (
   extract

   pattern
     (<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<mDet1.concept>?) (('single')?) (<mOpinionPos1.concept>) (<mCoord1.concept>{1,2}) (<mOpinionPos2.concept>) 
   return
     group 5 as concept1_1 and
     group 7 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mDet_en mDet1, 
      mOpinionPos_en mOpinionPos1, 
      mCoord_en mCoord1, 
      mOpinionPos_en mOpinionPos2

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Positive_8_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Positive_8_en' as patternName
from Ptn__not____2_Positive_8_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_8_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____2_Positive_8_en' as patternName
from Ptn__not____2_Positive_8_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_8_en_output_all as
(select X.* from Ptn__not____2_Positive_8_en_output1 X)
union all
(select X.* from Ptn__not____2_Positive_8_en_output2 X)
;



--
-- name  =desire + "not" + Negative + topic_9
-- value =$mShould like? ($mPrep|$mHave){0,3} $mAdvNeg ($mBe|$mHave){0,2} $mEmpty{0,3} $mOpinionNeg ($mPrep|$mDet){0,3} $mTopic
-- output(1)=$9\t#9\t$7\t#7
--
create view Ptn_desire____not____Negative___topic_9_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type7 as type7,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_desire____not____Negative___topic_9_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type7,
   mTopic1.typeName as type9,

   pattern
     (<mShould1.concept>) ('like'?) ((<mPrep1.concept>|<mHave1.concept>){0,3}) (<mAdvNeg1.concept>) ((<mBe1.concept>|<mHave2.concept>){0,2}) (<mEmpty1.concept>{0,3}) (<mOpinionNeg1.concept>) ((<mPrep2.concept>|<mDet1.concept>){0,3}) (<mTopic1.concept>) 
   return
     group 12 as concept1_1 and
     group 9 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mPrep_en mPrep1, 
      mHave_en mHave1, 
      mAdvNeg_en mAdvNeg1, 
      mBe_en mBe1, 
      mHave_en mHave2, 
      mEmpty_en mEmpty1, 
      mOpinionNeg_en mOpinionNeg1, 
      mPrep_en mPrep2, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_desire____not____Negative___topic_9_en_output_all as
select
   X.concept1_1 as concept1,
   X.type9 as type1,
   X.concept1_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire____not____Negative___topic_9_en' as patternName
from Ptn_desire____not____Negative___topic_9_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Negative + topic_10
-- value =$mSupportNeg @{0,1} (anything|((any|a|one) single? thing?)) @{0,2} $mOpinionNeg $mPrep @{0,1} $mDet? $mTopic
-- output(1)=$9\t#9\tno $5\tPositive
--
create view Ptn__not____Negative___topic_10_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn__not____Negative___topic_10_en' as patternName
from (
   extract
   mTopic1.typeName as type9,

   pattern
     (<mSupportNeg1.concept>) (<Tok1.match>{0,1}) ('anything'|(('any'|'a'|'one') 'single'? 'thing'?)) (<Tok2.match>{0,2}) (<mOpinionNeg1.concept>) (<mPrep1.concept>) (<Tok3.match>{0,1}) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 11 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mOpinionNeg_en mOpinionNeg1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1, 
      Tok Tok2, 
      Tok Tok3

) X
consolidate on X.pattern_val;



create view Ptn__not____Negative___topic_10_en_output_all as
select
   X.concept1_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('no', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Negative___topic_10_en' as patternName
from Ptn__not____Negative___topic_10_en X
consolidate on X.pattern_val;



--
-- name  ="not" + 2 Negative + topic_11
-- value =($mAdvNeg|$mSupportNeg|$Contextual|any|less|lessen|little) ($mSupport|$mBe|$mHave)? @{0,2} $NegativeFunctioning $mEmpty{0,3} $mOpinionNeg (at all)? $mPrep{0,3} $mDet? $mTopic
-- output(1)=$10\t#10\tnot $4\tPositiveFunctioning
--
create view Ptn__not____2_Negative___topic_11_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Negative___topic_11_en' as patternName
from (
   extract
   mTopic1.typeName as type10,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<Contextual1.concept>|'any'|'less'|'lessen'|'little') ((<mSupport1.concept>|<mBe1.concept>|<mHave1.concept>)?) (<Tok1.match>{0,2}) (<NegativeFunctioning1.concept>) (<mEmpty1.concept>{0,3}) (<mOpinionNeg1.concept>) (('at all')?) (<mPrep1.concept>{0,3}) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 12 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      Contextual_en Contextual1, 
      mSupport_en mSupport1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      NegativeFunctioning_en NegativeFunctioning1, 
      mEmpty_en mEmpty1, 
      mOpinionNeg_en mOpinionNeg1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Negative___topic_11_en_output_all as
select
   X.concept1_1 as concept1,
   X.type10 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveFunctioning' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Negative___topic_11_en' as patternName
from Ptn__not____2_Negative___topic_11_en X
consolidate on X.pattern_val;



--
-- name  ="not" + 2 Negative + topic_12
-- value =($mAdvNeg|$mSupportNeg|any|less|lessen|little) ($mSupport|$mBe|$mHave)? @{0,2} $mOpinionNeg $NegativeFunctioning (at all)? $mPrep{0,3} $mDet? $mTopic
-- output(1)=$9\t#9\tnot $5\tPositiveFunctioning
--
create view Ptn__not____2_Negative___topic_12_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Negative___topic_12_en' as patternName
from (
   extract
   mTopic1.typeName as type9,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|'any'|'less'|'lessen'|'little') ((<mSupport1.concept>|<mBe1.concept>|<mHave1.concept>)?) (<Tok1.match>{0,2}) (<mOpinionNeg1.concept>) (<NegativeFunctioning1.concept>) (('at all')?) (<mPrep1.concept>{0,3}) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 11 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupport_en mSupport1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionNeg_en mOpinionNeg1, 
      NegativeFunctioning_en NegativeFunctioning1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Negative___topic_12_en_output_all as
select
   X.concept1_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveFunctioning' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Negative___topic_12_en' as patternName
from Ptn__not____2_Negative___topic_12_en X
consolidate on X.pattern_val;



--
-- name  ="not" + 2 Negative + topic_13
-- value =($mAdvNeg|$mSupportNeg|$Contextual|any|no|less|lessen|little) ($mSupport|$mBe|$mHave)? @{0,2} $mOpinionNeg $mOpinionNeg (at all)? $mPrep{0,3} $mDet? $mTopic
-- output(1)=$9\t#9\tnot $5\tPositive
--
create view Ptn__not____2_Negative___topic_13_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Negative___topic_13_en' as patternName
from (
   extract
   mTopic1.typeName as type9,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<Contextual1.concept>|'any'|'no'|'less'|'lessen'|'little') ((<mSupport1.concept>|<mBe1.concept>|<mHave1.concept>)?) (<Tok1.match>{0,2}) (<mOpinionNeg1.concept>) (<mOpinionNeg2.concept>) (('at all')?) (<mPrep1.concept>{0,3}) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 11 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      Contextual_en Contextual1, 
      mSupport_en mSupport1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionNeg_en mOpinionNeg1, 
      mOpinionNeg_en mOpinionNeg2, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Negative___topic_13_en_output_all as
select
   X.concept1_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Negative___topic_13_en' as patternName
from Ptn__not____2_Negative___topic_13_en X
consolidate on X.pattern_val;



--
-- name  ="not" + "such" + opinion + topic_14
-- value =($mAdvNeg|$mSupportNeg|any|no|little|without) @ such $mDet? $mOpinion $mTopic
-- output(1)=$6\t#6\t$5\t#5
--
create view Ptn__not_____such____opinion___topic_14_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__not_____such____opinion___topic_14_en' as patternName
from (
   extract
   mOpinion1.typeName as type5,
   mTopic1.typeName as type6,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|'any'|'no'|'little'|'without') (<Tok1.match>) ('such') (<mDet1.concept>?) (<mOpinion1.concept>) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mDet_en mDet1, 
      mOpinion_en mOpinion1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not_____such____opinion___topic_14_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   X.concept1_2 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not_____such____opinion___topic_14_en' as patternName
from Ptn__not_____such____opinion___topic_14_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Negative + topic_15
-- value =($mAdvNeg|$mSupportNeg|any|no|little|without) $mDet? @{0,1} $Negative $mTopic
-- output(1)=$5\t#5\tnot $4\tPositive
--
create view Ptn__not____Negative___topic_15_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__not____Negative___topic_15_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|'any'|'no'|'little'|'without') (<mDet1.concept>?) (<Tok1.match>{0,1}) (<Negative1.concept>) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mDet_en mDet1, 
      Negative_en Negative1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Negative___topic_15_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Negative___topic_15_en' as patternName
from Ptn__not____Negative___topic_15_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeAttitude + topic_16
-- value =($mAdvNeg|$mSupportNeg|any|no|little) @{0,1} $NegativeAttitude $mTopic
-- output(1)=$4\t#4\tnot $3\tPositiveAttitude
--
create view Ptn__not____NegativeAttitude___topic_16_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeAttitude___topic_16_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|'any'|'no'|'little') (<Tok1.match>{0,1}) (<NegativeAttitude1.concept>) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      NegativeAttitude_en NegativeAttitude1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeAttitude___topic_16_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveAttitude' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeAttitude___topic_16_en' as patternName
from Ptn__not____NegativeAttitude___topic_16_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeBudget + topic_17
-- value =($mAdvNeg|$mSupportNeg|any|no|little) @{0,1} $NegativeBudget $mTopic
-- output(1)=$4\t#4\tnot $3\tPositiveBudget
--
create view Ptn__not____NegativeBudget___topic_17_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeBudget___topic_17_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|'any'|'no'|'little') (<Tok1.match>{0,1}) (<NegativeBudget1.concept>) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      NegativeBudget_en NegativeBudget1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeBudget___topic_17_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveBudget' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeBudget___topic_17_en' as patternName
from Ptn__not____NegativeBudget___topic_17_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeCompetence + topic_18
-- value =($mAdvNeg|$mSupportNeg|any|no|little) @{0,1} $NegativeCompetence $mTopic
-- output(1)=$4\t#4\tnot $3\tPositiveCompetence
--
create view Ptn__not____NegativeCompetence___topic_18_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeCompetence___topic_18_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|'any'|'no'|'little') (<Tok1.match>{0,1}) (<NegativeCompetence1.concept>) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      NegativeCompetence_en NegativeCompetence1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeCompetence___topic_18_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveCompetence' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeCompetence___topic_18_en' as patternName
from Ptn__not____NegativeCompetence___topic_18_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeFeeling + topic_19
-- value =($mAdvNeg|$mSupportNeg|any|no|little) @{0,1} $NegativeFeeling $mTopic
-- output(1)=$4\t#4\tnot $3\tPositiveFeeling
--
create view Ptn__not____NegativeFeeling___topic_19_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeFeeling___topic_19_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|'any'|'no'|'little') (<Tok1.match>{0,1}) (<NegativeFeeling1.concept>) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      NegativeFeeling_en NegativeFeeling1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeFeeling___topic_19_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveFeeling' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeFeeling___topic_19_en' as patternName
from Ptn__not____NegativeFeeling___topic_19_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeFunctioning + topic_20
-- value =($mAdvNeg|$mMiscNeg|$mSupportNeg|little|few) $mEmpty{0,2} $NegativeFunctioning $mTopic
-- output(1)=$4\t#4\tnot $3\tPositiveFunctioning
--
create view Ptn__not____NegativeFunctioning___topic_20_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeFunctioning___topic_20_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<mAdvNeg1.concept>|<mMiscNeg1.concept>|<mSupportNeg1.concept>|'little'|'few') (<mEmpty1.concept>{0,2}) (<NegativeFunctioning1.concept>) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty1, 
      NegativeFunctioning_en NegativeFunctioning1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeFunctioning___topic_20_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveFunctioning' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeFunctioning___topic_20_en' as patternName
from Ptn__not____NegativeFunctioning___topic_20_en X
consolidate on X.pattern_val;



--
-- name  ="no" + Negative + comma_21
-- value =(no|very? little) $mOpinionNeg $SEP
-- output(1)=no $2\tPositive
--
create view Ptn__no____Negative___comma_21_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__no____Negative___comma_21_en' as patternName
from (
   extract

   pattern
     ('no'|'very'? 'little') (<mOpinionNeg1.concept>) (<SEP1.concept>) 
   return
     group 2 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      SEP_en SEP1

) X
consolidate on X.pattern_val;



create view Ptn__no____Negative___comma_21_en_output_all as
select
   udf.addWordLeft('no', X.concept1_1) as concept1,
   'Positive' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__no____Negative___comma_21_en' as patternName
from Ptn__no____Negative___comma_21_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Positive + topic_22
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg|little) $mEmpty{0,2} $mOpinionPos $mPrep @{0,1} $mDet? $mTopic
-- output(1)=$7\t#7\tnot $3\tNegative
--
create view Ptn__not____Positive___topic_22_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___topic_22_en' as patternName
from (
   extract
   mTopic1.typeName as type7,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>|'little') (<mEmpty1.concept>{0,2}) (<mOpinionPos1.concept>) (<mPrep1.concept>) (<Tok1.match>{0,1}) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 7 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___topic_22_en_output_all as
select
   X.concept1_1 as concept1,
   X.type7 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___topic_22_en' as patternName
from Ptn__not____Positive___topic_22_en X
consolidate on X.pattern_val;



--
-- name  ="no" + topic + Negative_23
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $mTopic $mToo? $NegativeAttitude
-- output(1)=$3\t#3\tnot $5\tPositiveAttitude
--
create view Ptn__no____topic___Negative_23_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__no____topic___Negative_23_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<mTopic1.concept>) (<mToo1.concept>?) (<NegativeAttitude1.concept>) 
   return
     group 3 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mTopic_en mTopic1, 
      mToo_en mToo1, 
      NegativeAttitude_en NegativeAttitude1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__no____topic___Negative_23_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveAttitude' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__no____topic___Negative_23_en' as patternName
from Ptn__no____topic___Negative_23_en X
consolidate on X.pattern_val;



--
-- name  ="no" + topic + Negative_24
-- value =($mSupportNeg|no) @{0,1} $mTopic $mToo? $NegativeBudget
-- output(1)=$3\t#3\tnot $5\tPositiveBudget
--
create view Ptn__no____topic___Negative_24_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__no____topic___Negative_24_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<mSupportNeg1.concept>|'no') (<Tok1.match>{0,1}) (<mTopic1.concept>) (<mToo1.concept>?) (<NegativeBudget1.concept>) 
   return
     group 3 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mTopic_en mTopic1, 
      mToo_en mToo1, 
      NegativeBudget_en NegativeBudget1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__no____topic___Negative_24_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveBudget' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__no____topic___Negative_24_en' as patternName
from Ptn__no____topic___Negative_24_en X
consolidate on X.pattern_val;



--
-- name  ="no" + topic + Negative_25
-- value =($mSupportNeg|no) @{0,1} $mTopic $mToo? $NegativeCompetence
-- output(1)=$3\t#3\tnot $5\tPositiveCompetence
--
create view Ptn__no____topic___Negative_25_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__no____topic___Negative_25_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<mSupportNeg1.concept>|'no') (<Tok1.match>{0,1}) (<mTopic1.concept>) (<mToo1.concept>?) (<NegativeCompetence1.concept>) 
   return
     group 3 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mTopic_en mTopic1, 
      mToo_en mToo1, 
      NegativeCompetence_en NegativeCompetence1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__no____topic___Negative_25_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveCompetence' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__no____topic___Negative_25_en' as patternName
from Ptn__no____topic___Negative_25_en X
consolidate on X.pattern_val;



--
-- name  ="no" + topic + Negative_26
-- value =($mSupportNeg|no) @{0,1} $mTopic $mToo? $NegativeFeeling
-- output(1)=$3\t#3\tnot $5\tPositiveFunctioning
--
create view Ptn__no____topic___Negative_26_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__no____topic___Negative_26_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<mSupportNeg1.concept>|'no') (<Tok1.match>{0,1}) (<mTopic1.concept>) (<mToo1.concept>?) (<NegativeFeeling1.concept>) 
   return
     group 3 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mTopic_en mTopic1, 
      mToo_en mToo1, 
      NegativeFeeling_en NegativeFeeling1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__no____topic___Negative_26_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveFunctioning' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__no____topic___Negative_26_en' as patternName
from Ptn__no____topic___Negative_26_en X
consolidate on X.pattern_val;



--
-- name  ="no" + topic + Negative_27
-- value =($mSupportNeg|no) @{0,1} $mTopic $mToo? $NegativeFunctioning
-- output(1)=$3\t#3\tnot $5\tPositiveFunctioning
--
create view Ptn__no____topic___Negative_27_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__no____topic___Negative_27_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<mSupportNeg1.concept>|'no') (<Tok1.match>{0,1}) (<mTopic1.concept>) (<mToo1.concept>?) (<NegativeFunctioning1.concept>) 
   return
     group 3 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mTopic_en mTopic1, 
      mToo_en mToo1, 
      NegativeFunctioning_en NegativeFunctioning1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__no____topic___Negative_27_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveFunctioning' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__no____topic___Negative_27_en' as patternName
from Ptn__no____topic___Negative_27_en X
consolidate on X.pattern_val;



--
-- name  ="no" + topic + Negative_28
-- value =($mSupportNeg|no) @{0,1} $mTopic $mToo? $Negative
-- output(1)=$3\t#3\tnot $5\tPositive
--
create view Ptn__no____topic___Negative_28_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__no____topic___Negative_28_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<mSupportNeg1.concept>|'no') (<Tok1.match>{0,1}) (<mTopic1.concept>) (<mToo1.concept>?) (<Negative1.concept>) 
   return
     group 3 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mTopic_en mTopic1, 
      mToo_en mToo1, 
      Negative_en Negative1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__no____topic___Negative_28_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__no____topic___Negative_28_en' as patternName
from Ptn__no____topic___Negative_28_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Negative_29
-- value =($mAdvNeg|$mSupportNegPart) $mAnything $mPronoun $mPronoun $mOpinionNeg
-- output(1)=no $5\tPositive
--
create view Ptn__not____Negative_29_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____Negative_29_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNegPart1.concept>) (<mAnything1.concept>) (<mPronoun1.concept>) (<mPronoun2.concept>) (<mOpinionNeg1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mAnything_en mAnything1, 
      mPronoun_en mPronoun1, 
      mPronoun_en mPronoun2, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn__not____Negative_29_en_output_all as
select
   udf.addWordLeft('no', X.concept1_1) as concept1,
   'Positive' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Negative_29_en' as patternName
from Ptn__not____Negative_29_en X
consolidate on X.pattern_val;



--
-- name  ="no" + topic_30
-- value =($mSupportNeg|$mAdvNeg|$mMiscNeg) ($mEmpty|more|$mSupport){0,3} $mTopic ($mPrep $mDet{0,2} $mTopic)?
-- output(1)=$3\t#3\tno\tContextual
--
create view Ptn__no____topic_30_en as
select
   X.concept1_1 as concept1_1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__no____topic_30_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<mSupportNeg1.concept>|<mAdvNeg1.concept>|<mMiscNeg1.concept>) ((<mEmpty1.concept>|'more'|<mSupport1.concept>){0,3}) (<mTopic1.concept>) ((<mPrep1.concept> <mDet1.concept>{0,2} <mTopic2.concept>)?) 
   return
     group 4 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mAdvNeg_en mAdvNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mEmpty_en mEmpty1, 
      mSupport_en mSupport1, 
      mTopic_en mTopic1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__no____topic_30_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   'no' as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__no____topic_30_en' as patternName
from Ptn__no____topic_30_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Positive + topic_31
-- value =($mSupportNeg|no|any|l$mMiscNeg) $mEmpty{0,2} $PositiveAttitude $mPrep? @{0,1} $mTopic ($mPrep $mDet{0,3} $mTopic)?
-- output(1)=$6\t#6\tnot $3\tNegativeAttitude
--
create view Ptn__not____Positive___topic_31_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___topic_31_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mSupportNeg1.concept>|'no'|'any'|'l$mMiscNeg') (<mEmpty1.concept>{0,2}) (<PositiveAttitude1.concept>) (<mPrep1.concept>?) (<Tok1.match>{0,1}) (<mTopic1.concept>) ((<mPrep2.concept> <mDet1.concept>{0,3} <mTopic2.concept>)?) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty1, 
      PositiveAttitude_en PositiveAttitude1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      mPrep_en mPrep2, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___topic_31_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeAttitude' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___topic_31_en' as patternName
from Ptn__not____Positive___topic_31_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Positive + topic_32
-- value =($mSupportNeg|$mMiscNeg) $mEmpty{0,2} $PositiveBudget $mPrep? @{0,1} $mTopic ($mPrep $mDet{0,3} $mTopic)?
-- output(1)=$6\t#6\tnot $3\tNegativeBudget
--
create view Ptn__not____Positive___topic_32_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___topic_32_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<mEmpty1.concept>{0,2}) (<PositiveBudget1.concept>) (<mPrep1.concept>?) (<Tok1.match>{0,1}) (<mTopic1.concept>) ((<mPrep2.concept> <mDet1.concept>{0,3} <mTopic2.concept>)?) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mEmpty_en mEmpty1, 
      PositiveBudget_en PositiveBudget1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      mPrep_en mPrep2, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___topic_32_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeBudget' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___topic_32_en' as patternName
from Ptn__not____Positive___topic_32_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Positive + topic_33
-- value =($mSupportNeg|$mMiscNeg) $mEmpty{0,2} $PositiveCompetence $mPrep? @{0,1} $mTopic ($mPrep $mDet{0,3} $mTopic)?
-- output(1)=$6\t#6\tnot $3\tNegativeCompetence
--
create view Ptn__not____Positive___topic_33_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___topic_33_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<mEmpty1.concept>{0,2}) (<PositiveCompetence1.concept>) (<mPrep1.concept>?) (<Tok1.match>{0,1}) (<mTopic1.concept>) ((<mPrep2.concept> <mDet1.concept>{0,3} <mTopic2.concept>)?) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mEmpty_en mEmpty1, 
      PositiveCompetence_en PositiveCompetence1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      mPrep_en mPrep2, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___topic_33_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeCompetence' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___topic_33_en' as patternName
from Ptn__not____Positive___topic_33_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Positive + topic_34
-- value =($mSupportNeg|$mMiscNeg) $mEmpty{0,2} $PositiveFeeling $mPrep? @{0,1} $mTopic ($mPrep $mDet{0,3} $mTopic)?
-- output(1)=$6\t#6\tnot $3\tNegativeFeeling
--
create view Ptn__not____Positive___topic_34_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___topic_34_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<mEmpty1.concept>{0,2}) (<PositiveFeeling1.concept>) (<mPrep1.concept>?) (<Tok1.match>{0,1}) (<mTopic1.concept>) ((<mPrep2.concept> <mDet1.concept>{0,3} <mTopic2.concept>)?) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mEmpty_en mEmpty1, 
      PositiveFeeling_en PositiveFeeling1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      mPrep_en mPrep2, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___topic_34_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeFeeling' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___topic_34_en' as patternName
from Ptn__not____Positive___topic_34_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Positive + topic_35
-- value =($mSupportNeg|$mMiscNeg) $mEmpty{0,2} $PositiveFunctioning $mPrep? @{0,1} $mTopic ($mPrep $mDet{0,3} $mTopic)?
-- output(1)=$6\t#6\tnot $3\tNegativeFunctioning
--
create view Ptn__not____Positive___topic_35_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___topic_35_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<mEmpty1.concept>{0,2}) (<PositiveFunctioning1.concept>) (<mPrep1.concept>?) (<Tok1.match>{0,1}) (<mTopic1.concept>) ((<mPrep2.concept> <mDet1.concept>{0,3} <mTopic2.concept>)?) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mEmpty_en mEmpty1, 
      PositiveFunctioning_en PositiveFunctioning1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      mPrep_en mPrep2, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___topic_35_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeFunctioning' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___topic_35_en' as patternName
from Ptn__not____Positive___topic_35_en X
consolidate on X.pattern_val;



--
-- name  =2 topics + "not" + Positive_36
-- value =$mTopic ($SEP|$mCoord){1,3} @{0,1} $mTopic $mSupportNegPart $mEmpty{0,3} $mOpinionPos $mTopic?
-- output(1)=$1\t#1\tnot $7\tNegative
-- output(2)=$4\t#4\tnot $7\tNegative
--
create view Ptn_2_topics____not____Positive_36_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_2_topics____not____Positive_36_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,

   pattern
     (<mTopic1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,3}) (<Tok1.match>{0,1}) (<mTopic2.concept>) (<mSupportNegPart1.concept>) (<mEmpty1.concept>{0,3}) (<mOpinionPos1.concept>) (<mTopic3.concept>?) 
   return
     group 1 as concept1_1 and
     group 8 as concept1_2 and
     group 5 as concept2_1 and
     group 8 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2, 
      mSupportNegPart_en mSupportNegPart1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic3, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_2_topics____not____Positive_36_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_topics____not____Positive_36_en' as patternName
from Ptn_2_topics____not____Positive_36_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____not____Positive_36_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_topics____not____Positive_36_en' as patternName
from Ptn_2_topics____not____Positive_36_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____not____Positive_36_en_output_all as
(select X.* from Ptn_2_topics____not____Positive_36_en_output1 X)
union all
(select X.* from Ptn_2_topics____not____Positive_36_en_output2 X)
;



--
-- name  ="not" + Positive + topic_37
-- value =($mSupportNeg|$mMiscNeg) $mEmpty{0,2} $Positive $mPrep? @{0,1} $mTopic ($mPrep $mDet{0,3} $mTopic)?
-- output(1)=$6\t#6\tnot $3\tNegative
--
create view Ptn__not____Positive___topic_37_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___topic_37_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<mEmpty1.concept>{0,2}) (<Positive1.concept>) (<mPrep1.concept>?) (<Tok1.match>{0,1}) (<mTopic1.concept>) ((<mPrep2.concept> <mDet1.concept>{0,3} <mTopic2.concept>)?) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mEmpty_en mEmpty1, 
      Positive_en Positive1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      mPrep_en mPrep2, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___topic_37_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___topic_37_en' as patternName
from Ptn__not____Positive___topic_37_en X
consolidate on X.pattern_val;



--
-- name  ="not" + topic + Positive_38
-- value =$mSupportNeg @{0,2} $mDet? ($mQuant|more)? $mTopic $mEmpty{0,3} $mOpinionPos
-- output(1)=$5\t#5\tnot $7\tNegative
--
create view Ptn__not____topic___Positive_38_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__not____topic___Positive_38_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mSupportNeg1.concept>) (<Tok1.match>{0,2}) (<mDet1.concept>?) ((<mQuant1.concept>|'more')?) (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) (<mOpinionPos1.concept>) 
   return
     group 6 as concept1_1 and
     group 8 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mDet_en mDet1, 
      mQuant_en mQuant1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____topic___Positive_38_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____topic___Positive_38_en' as patternName
from Ptn__not____topic___Positive_38_en X
consolidate on X.pattern_val;



--
-- name  ="not" + topic + Negative_39
-- value =$mSupportNeg @{0,2} $mDet? ($mQuant|more)? $mTopic $mEmpty{0,3} $mOpinionNeg
-- output(1)=$5\t#5\tnot $7\tPositive
--
create view Ptn__not____topic___Negative_39_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__not____topic___Negative_39_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mSupportNeg1.concept>) (<Tok1.match>{0,2}) (<mDet1.concept>?) ((<mQuant1.concept>|'more')?) (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) (<mOpinionNeg1.concept>) 
   return
     group 6 as concept1_1 and
     group 8 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mDet_en mDet1, 
      mQuant_en mQuant1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mOpinionNeg_en mOpinionNeg1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____topic___Negative_39_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____topic___Negative_39_en' as patternName
from Ptn__not____topic___Negative_39_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Negative + topic_40
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,2} $mOpinionNeg $mPrep $mDet? $mTopic
-- output(1)=$6\t#6\tnot $3\tPositive
--
create view Ptn__not____Negative___topic_40_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__not____Negative___topic_40_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,2}) (<mOpinionNeg1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mOpinionNeg_en mOpinionNeg1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Negative___topic_40_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Negative___topic_40_en' as patternName
from Ptn__not____Negative___topic_40_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Positive + topic_41
-- value =($mAdvNeg|$mSupportNeg) ($mHave|$mSupport|$mDet){0,2} $mOpinionPos $mDet? $mTopic
-- output(1)=$5\t#5\tnot $3\tNegative
--
create view Ptn__not____Positive___topic_41_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___topic_41_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mHave1.concept>|<mSupport1.concept>|<mDet1.concept>){0,2}) (<mOpinionPos1.concept>) (<mDet2.concept>?) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mDet_en mDet1, 
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet2, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___topic_41_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___topic_41_en' as patternName
from Ptn__not____Positive___topic_41_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Negative + topic_42
-- value =($mAdvNeg|$mSupportNeg) ($mHave|$mSupport){0,2} $mOpinionNeg $mDet? $mTopic
-- output(1)=$5\t#5\tnot $3\tPositive
--
create view Ptn__not____Negative___topic_42_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__not____Negative___topic_42_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mHave1.concept>|<mSupport1.concept>){0,2}) (<mOpinionNeg1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__not____Negative___topic_42_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Negative___topic_42_en' as patternName
from Ptn__not____Negative___topic_42_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not/too"  Positive + Negative + Positive/Contextual_43
-- value =$mTopic $mEmpty{0,3} ($mSupportNegPart|($mBe|$mHave $mAdvNeg)){1,3} $mEmpty{0,3} ($mOpinionPos|$Contextual) $mCoord $mEmpty{0,3} $Negative ($mOpinionPos|$Contextual)
-- output(1)=$1\t#1\tnot $5\tNegative
-- output(2)=$1\t#1\t$8 $9\tNegative
--
create view Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) ((<mSupportNegPart1.concept>|(<mBe1.concept>|<mHave1.concept> <mAdvNeg1.concept>)){1,3}) (<mEmpty2.concept>{0,3}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mCoord1.concept>) (<mEmpty3.concept>{0,3}) (<Negative1.concept>) (<PtnMerge_Contextual_mOpinionPos_en2.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 1 as concept2_1 and
     group 10 as concept2_2 and
     group 11 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mSupportNegPart_en mSupportNegPart1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mAdvNeg_en mAdvNeg1, 
      mEmpty_en mEmpty2, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty3, 
      Negative_en Negative1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en2

) X
consolidate on X.pattern_val;



create view Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en' as patternName
from Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en X
consolidate on X.pattern_val;

create view Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
udf.addSpanRight(X.concept2_2, X.concept2_3) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en' as patternName
from Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en X
consolidate on X.pattern_val;

create view Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en_output_all as
(select X.* from Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en_output1 X)
union all
(select X.* from Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en_output2 X)
;



--
-- name  =topic + "not/too" + 2 Positive/Contextual_44
-- value =$mTopic $mEmpty{0,3} ($mSupportNegPart|($mBe|$mHave $mAdvNeg)){1,3} $mEmpty{0,3} ($mOpinionPos|$Contextual) $mCoord $mEmpty{0,3} ($mToo|$mAdvNeg)? $mEmpty{0,2} ($mOpinionPos|$Contextual)
-- output(1)=$1\t#1\tnot $5\tNegative
-- output(2)=$1\t#1\t$8 $10\tNegative
--
create view Ptn_topic____not_too____2_Positive_Contextual_44_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not_too____2_Positive_Contextual_44_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) ((<mSupportNegPart1.concept>|(<mBe1.concept>|<mHave1.concept> <mAdvNeg1.concept>)){1,3}) (<mEmpty2.concept>{0,3}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mCoord1.concept>) (<mEmpty3.concept>{0,3}) ((<PtnMerge_mAdvNeg_mToo_en1.concept>?)) (<mEmpty4.concept>{0,2}) (<PtnMerge_Contextual_mOpinionPos_en2.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 1 as concept2_1 and
     group 10 as concept2_2 and
     group 13 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mSupportNegPart_en mSupportNegPart1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mAdvNeg_en mAdvNeg1, 
      mEmpty_en mEmpty2, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty3, 
      PtnMerge_mAdvNeg_mToo_en PtnMerge_mAdvNeg_mToo_en1, 
      mEmpty_en mEmpty4, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en2

) X
consolidate on X.pattern_val;



create view Ptn_topic____not_too____2_Positive_Contextual_44_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not_too____2_Positive_Contextual_44_en' as patternName
from Ptn_topic____not_too____2_Positive_Contextual_44_en X
consolidate on X.pattern_val;

create view Ptn_topic____not_too____2_Positive_Contextual_44_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
udf.addSpanRight(X.concept2_2, X.concept2_3) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic____not_too____2_Positive_Contextual_44_en' as patternName
from Ptn_topic____not_too____2_Positive_Contextual_44_en X
consolidate on X.pattern_val;

create view Ptn_topic____not_too____2_Positive_Contextual_44_en_output_all as
(select X.* from Ptn_topic____not_too____2_Positive_Contextual_44_en_output1 X)
union all
(select X.* from Ptn_topic____not_too____2_Positive_Contextual_44_en_output2 X)
;



--
-- name  =topic + "not" Positive + Negative_45
-- value =$mTopic $mEmpty{0,3} ($mSupportNegPart|($mBe|$mHave $mAdvNeg)){1,3} $mEmpty{0,3} ($mOpinionPos|$Contextual) $mCoord $mEmpty{0,3} ($mToo|$mAdvNeg)? $mEmpty{0,2} $mOpinionNeg
-- output(1)=$1\t#1\tnot $5\tNegative
-- output(2)=$1\t#1\t$8 $10\tNegative
--
create view Ptn_topic____not__Positive___Negative_45_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not__Positive___Negative_45_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) ((<mSupportNegPart1.concept>|(<mBe1.concept>|<mHave1.concept> <mAdvNeg1.concept>)){1,3}) (<mEmpty2.concept>{0,3}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mCoord1.concept>) (<mEmpty3.concept>{0,3}) ((<PtnMerge_mAdvNeg_mToo_en1.concept>?)) (<mEmpty4.concept>{0,2}) (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 1 as concept2_1 and
     group 10 as concept2_2 and
     group 13 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mSupportNegPart_en mSupportNegPart1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mAdvNeg_en mAdvNeg1, 
      mEmpty_en mEmpty2, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty3, 
      PtnMerge_mAdvNeg_mToo_en PtnMerge_mAdvNeg_mToo_en1, 
      mEmpty_en mEmpty4, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not__Positive___Negative_45_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not__Positive___Negative_45_en' as patternName
from Ptn_topic____not__Positive___Negative_45_en X
consolidate on X.pattern_val;

create view Ptn_topic____not__Positive___Negative_45_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
udf.addSpanRight(X.concept2_2, X.concept2_3) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic____not__Positive___Negative_45_en' as patternName
from Ptn_topic____not__Positive___Negative_45_en X
consolidate on X.pattern_val;

create view Ptn_topic____not__Positive___Negative_45_en_output_all as
(select X.* from Ptn_topic____not__Positive___Negative_45_en_output1 X)
union all
(select X.* from Ptn_topic____not__Positive___Negative_45_en_output2 X)
;



--
-- name  =topic + "too" + 2 Positive/Contextual_46
-- value =$mTopic $mPronoun? ($mBe|$mHave|$mSupport|$mEmpty){1,4} $mToo ($mOpinionPos|$Contextual) $mCoord ($mToo|$mAdvNeg) ($mOpinionPos|$Contextual)
-- output(1)=$1\t#1\t$4 $5\tNegative
-- output(2)=$1\t#1\t$7 $8\tNegative
--
create view Ptn_topic____too____2_Positive_Contextual_46_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____too____2_Positive_Contextual_46_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mPronoun1.concept>?) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>|<mEmpty1.concept>){1,4}) (<mToo1.concept>) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mCoord1.concept>) (<PtnMerge_mAdvNeg_mToo_en1.concept>) (<PtnMerge_Contextual_mOpinionPos_en2.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 6 as concept1_3 and
     group 1 as concept2_1 and
     group 8 as concept2_2 and
     group 9 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mPronoun_en mPronoun1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mEmpty_en mEmpty1, 
      mToo_en mToo1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mCoord_en mCoord1, 
      PtnMerge_mAdvNeg_mToo_en PtnMerge_mAdvNeg_mToo_en1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en2

) X
consolidate on X.pattern_val;



create view Ptn_topic____too____2_Positive_Contextual_46_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
udf.addSpanRight(X.concept1_2, X.concept1_3) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____too____2_Positive_Contextual_46_en' as patternName
from Ptn_topic____too____2_Positive_Contextual_46_en X
consolidate on X.pattern_val;

create view Ptn_topic____too____2_Positive_Contextual_46_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
udf.addSpanRight(X.concept2_2, X.concept2_3) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic____too____2_Positive_Contextual_46_en' as patternName
from Ptn_topic____too____2_Positive_Contextual_46_en X
consolidate on X.pattern_val;

create view Ptn_topic____too____2_Positive_Contextual_46_en_output_all as
(select X.* from Ptn_topic____too____2_Positive_Contextual_46_en_output1 X)
union all
(select X.* from Ptn_topic____too____2_Positive_Contextual_46_en_output2 X)
;







--
-- name  =topic + "not" + Positive + topic/Negative_49
-- value =$mTopic @? $mSupportNeg ($mSupport|$mEmpty){0,6} $mToo? $mOpinionPos $mDet? ($mTopic|$mOpinionNeg)
-- output(1)=$1\t#1\t$8\t#8\tnot $6\tNegative
--
create view Ptn_topic____not____Positive___topic_Negative_49_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____Positive___topic_Negative_49_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_mOpinionNeg_mTopic_en1.typeName as type8,

   pattern
     (<mTopic1.concept>) (<Tok1.match>?) (<mSupportNeg1.concept>) ((<mSupport1.concept>|<mEmpty1.concept>){0,6}) (<mToo1.concept>?) (<mOpinionPos1.concept>) (<mDet1.concept>?) (<PtnMerge_mOpinionNeg_mTopic_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 9 as concept1_2 and
     group 7 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mSupportNeg_en mSupportNeg1, 
      mSupport_en mSupport1, 
      mEmpty_en mEmpty1, 
      mToo_en mToo1, 
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      PtnMerge_mOpinionNeg_mTopic_en PtnMerge_mOpinionNeg_mTopic_en1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____Positive___topic_Negative_49_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type8 as type2,
   udf.addWordLeft('not', X.concept1_3) as concept3,
   'Negative' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____Positive___topic_Negative_49_en' as patternName
from Ptn_topic____not____Positive___topic_Negative_49_en X
consolidate on X.pattern_val;



--
-- name  =topic + Negative + Negative + prep + topic_50
-- value =$mTopic ($mShould|$mSupport|$mBe|$mHave)? $mOpinionNeg ($mDet|$mPrep){0,3} $Negative $mPrep $mDet? $mTopic
-- output(1)=$1\t#1\t$5 $3\t#3
-- output(2)=$8\t#8\t$5 $3\t#3
--
create view Ptn_topic___Negative___Negative___prep___topic_50_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type1 as type1,
   X.type3 as type3,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_topic___Negative___Negative___prep___topic_50_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinionNeg1.typeName as type3,
   mTopic2.typeName as type8,

   pattern
     (<mTopic1.concept>) ((<mShould1.concept>|<mSupport1.concept>|<mBe1.concept>|<mHave1.concept>)?) (<mOpinionNeg1.concept>) ((<mDet1.concept>|<mPrep1.concept>){0,3}) (<Negative1.concept>) (<mPrep2.concept>) (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 4 as concept1_3 and
     group 10 as concept2_1 and
     group 7 as concept2_2 and
     group 4 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mSupport_en mSupport1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mPrep_en mPrep1, 
      Negative_en Negative1, 
      mPrep_en mPrep2, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic___Negative___Negative___prep___topic_50_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
udf.addSpanRight(X.concept1_2, X.concept1_3) as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___Negative___Negative___prep___topic_50_en' as patternName
from Ptn_topic___Negative___Negative___prep___topic_50_en X
consolidate on X.pattern_val;

create view Ptn_topic___Negative___Negative___prep___topic_50_en_output2 as
select
   X.concept2_1 as concept1,
   X.type8 as type1,
udf.addSpanRight(X.concept2_2, X.concept2_3) as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___Negative___Negative___prep___topic_50_en' as patternName
from Ptn_topic___Negative___Negative___prep___topic_50_en X
consolidate on X.pattern_val;

create view Ptn_topic___Negative___Negative___prep___topic_50_en_output_all as
(select X.* from Ptn_topic___Negative___Negative___prep___topic_50_en_output1 X)
union all
(select X.* from Ptn_topic___Negative___Negative___prep___topic_50_en_output2 X)
;



--
-- name  =topic + Negative + Negative_51
-- value =$mTopic ($mShould|$mSupport|$mBe|$mHave)? $mOpinionNeg ($mDet|$mPrep){0,3} $Negative
-- output(1)=$1\t#1\t$5 $3\t#3
--
create view Ptn_topic___Negative___Negative_51_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_topic___Negative___Negative_51_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinionNeg1.typeName as type3,

   pattern
     (<mTopic1.concept>) ((<mShould1.concept>|<mSupport1.concept>|<mBe1.concept>|<mHave1.concept>)?) (<mOpinionNeg1.concept>) ((<mDet1.concept>|<mPrep1.concept>){0,3}) (<Negative1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 4 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mSupport_en mSupport1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mPrep_en mPrep1, 
      Negative_en Negative1

) X
consolidate on X.pattern_val;



create view Ptn_topic___Negative___Negative_51_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
udf.addSpanRight(X.concept1_2, X.concept1_3) as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___Negative___Negative_51_en' as patternName
from Ptn_topic___Negative___Negative_51_en X
consolidate on X.pattern_val;



--
-- name  =Negative + "not" + Positive_52
-- value =$mOpinionNeg $mSupportNeg @{0,1} (been)? $mOpinionPos
-- output(1)=$1\t#1\tnot $5\tNegative
--
create view Ptn_Negative____not____Positive_52_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_Negative____not____Positive_52_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type1,

   pattern
     (<mOpinionNeg1.concept>) (<mSupportNeg1.concept>) (<Tok1.match>{0,1}) (('been')?) (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_Negative____not____Positive_52_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative____not____Positive_52_en' as patternName
from Ptn_Negative____not____Positive_52_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + Negative_53
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $Negative
-- output(1)=$1\t#1\tnot $6\tPositive
--
create view Ptn_topic____not____Negative_53_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____Negative_53_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<Negative1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      Negative_en Negative1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____Negative_53_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____Negative_53_en' as patternName
from Ptn_topic____not____Negative_53_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + NegativeAttitude_54
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $NegativeAttitude
-- output(1)=$1\t#1\tnot $6\tPositiveAttitude
--
create view Ptn_topic____not____NegativeAttitude_54_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____NegativeAttitude_54_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<NegativeAttitude1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      NegativeAttitude_en NegativeAttitude1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____NegativeAttitude_54_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveAttitude' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____NegativeAttitude_54_en' as patternName
from Ptn_topic____not____NegativeAttitude_54_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + NegativeBudget_55
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $NegativeBudget
-- output(1)=$1\t#1\tnot $6\tPositiveBudget
--
create view Ptn_topic____not____NegativeBudget_55_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____NegativeBudget_55_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<NegativeBudget1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      NegativeBudget_en NegativeBudget1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____NegativeBudget_55_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveBudget' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____NegativeBudget_55_en' as patternName
from Ptn_topic____not____NegativeBudget_55_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + NegativeCompetence_56
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $NegativeCompetence
-- output(1)=$1\t#1\tnot $6\tPositiveCompetence
--
create view Ptn_topic____not____NegativeCompetence_56_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____NegativeCompetence_56_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<NegativeCompetence1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      NegativeCompetence_en NegativeCompetence1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____NegativeCompetence_56_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveCompetence' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____NegativeCompetence_56_en' as patternName
from Ptn_topic____not____NegativeCompetence_56_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + NegativeFeeling_57
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $NegativeFeeling
-- output(1)=$1\t#1\tnot $6\tPositiveFeeling
--
create view Ptn_topic____not____NegativeFeeling_57_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____NegativeFeeling_57_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<NegativeFeeling1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      NegativeFeeling_en NegativeFeeling1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____NegativeFeeling_57_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveFeeling' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____NegativeFeeling_57_en' as patternName
from Ptn_topic____not____NegativeFeeling_57_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + NegativeFunctioning_58
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $NegativeFunctioning
-- output(1)=$1\t#1\tnot $6\tPositiveFunctioning
--
create view Ptn_topic____not____NegativeFunctioning_58_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____NegativeFunctioning_58_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<NegativeFunctioning1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      NegativeFunctioning_en NegativeFunctioning1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____NegativeFunctioning_58_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'PositiveFunctioning' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____NegativeFunctioning_58_en' as patternName
from Ptn_topic____not____NegativeFunctioning_58_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + Positive_59
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $Positive
-- output(1)=$1\t#1\tnot $6\tNegative
--
create view Ptn_topic____not____Positive_59_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____Positive_59_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<Positive1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      Positive_en Positive1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____Positive_59_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____Positive_59_en' as patternName
from Ptn_topic____not____Positive_59_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + PositiveAttitude_60
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $PositiveAttitude
-- output(1)=$1\t#1\tnot $6\tNegativeAttitude
--
create view Ptn_topic____not____PositiveAttitude_60_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____PositiveAttitude_60_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<PositiveAttitude1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      PositiveAttitude_en PositiveAttitude1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____PositiveAttitude_60_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeAttitude' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____PositiveAttitude_60_en' as patternName
from Ptn_topic____not____PositiveAttitude_60_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + PositiveBudget_61
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $PositiveBudget
-- output(1)=$1\t#1\tnot $6\tNegativeBudget
--
create view Ptn_topic____not____PositiveBudget_61_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____PositiveBudget_61_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<PositiveBudget1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      PositiveBudget_en PositiveBudget1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____PositiveBudget_61_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeBudget' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____PositiveBudget_61_en' as patternName
from Ptn_topic____not____PositiveBudget_61_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + PositiveCompetence_62
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) ($mEmpty|$mSupport){0,3} $mToo? $PositiveCompetence
-- output(1)=$1\t#1\tnot $6\tNegativeCompetence
--
create view Ptn_topic____not____PositiveCompetence_62_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____PositiveCompetence_62_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<PositiveCompetence1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      PositiveCompetence_en PositiveCompetence1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____PositiveCompetence_62_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeCompetence' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____PositiveCompetence_62_en' as patternName
from Ptn_topic____not____PositiveCompetence_62_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + PositiveFeeling_63
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg) @? ($mEmpty|$mSupport){0,3} $mToo? $PositiveFeeling
-- output(1)=$1\t#1\tnot $7\tNegativeFeeling
--
create view Ptn_topic____not____PositiveFeeling_63_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____PositiveFeeling_63_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) (<Tok1.match>?) ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<PositiveFeeling1.concept>) 
   return
     group 1 as concept1_1 and
     group 8 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      PositiveFeeling_en PositiveFeeling1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____PositiveFeeling_63_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeFeeling' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____PositiveFeeling_63_en' as patternName
from Ptn_topic____not____PositiveFeeling_63_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + PositiveFunctioning_64
-- value =$mTopic $mEmpty{0,5} ($mAdvNeg|$mSupportNeg|not) ($mEmpty|$mSupport){0,3} $mToo? $PositiveFunctioning
-- output(1)=$1\t#1\tnot $6\tNegativeFunctioning
--
create view Ptn_topic____not____PositiveFunctioning_64_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____PositiveFunctioning_64_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>|'not') ((<mEmpty2.concept>|<mSupport1.concept>){0,3}) (<mToo1.concept>?) (<PositiveFunctioning1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty2, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      PositiveFunctioning_en PositiveFunctioning1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____PositiveFunctioning_64_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeFunctioning' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____PositiveFunctioning_64_en' as patternName
from Ptn_topic____not____PositiveFunctioning_64_en X
consolidate on X.pattern_val;



--
-- name  =Positive + topic + Negative_65
-- value =$mOpinionPos $mPrep $mDet? $mTopic $mEmpty{0,2} $mOpinionNeg
-- output(1)=$4\t#4\tnot $1\tNegative
--
create view Ptn_Positive___topic___Negative_65_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_Positive___topic___Negative_65_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<mOpinionPos1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) (<mEmpty1.concept>{0,2}) (<mOpinionNeg1.concept>) 
   return
     group 4 as concept1_1 and
     group 1 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn_Positive___topic___Negative_65_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Positive___topic___Negative_65_en' as patternName
from Ptn_Positive___topic___Negative_65_en X
consolidate on X.pattern_val;









--
-- name  =2 topics  + Opinion + "more" + Positive_69
-- value =$mTopic $mCoord $mDet? $mTopic $mShould? ($mBe|$mHave){0,2} $mOpinion $mCoord more $mOpinionPos
-- output(1)=$1\t#1\t$7\t#7
-- output(2)=$4\t#4\t$7\t#7
-- output(3)=$1\t#1\tnot $10\tNegative
-- output(4)=$4\t#4\tnot $10\tNegative
--
create view Ptn_2_topics____Opinion____more____Positive_69_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept3_1 as concept3_1,
   X.concept3_2 as concept3_2,
   X.concept4_1 as concept4_1,
   X.concept4_2 as concept4_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_2_topics____Opinion____more____Positive_69_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,
   mOpinion1.typeName as type7,

   pattern
     (<mTopic1.concept>) (<mCoord1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) (<mShould1.concept>?) ((<mBe1.concept>|<mHave1.concept>){0,2}) (<mOpinion1.concept>) (<mCoord2.concept>) ('more') (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 8 as concept1_2 and
     group 4 as concept2_1 and
     group 8 as concept2_2 and
     group 1 as concept3_1 and
     group 11 as concept3_2 and
     group 4 as concept4_1 and
     group 11 as concept4_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinion_en mOpinion1, 
      mCoord_en mCoord2, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_2_topics____Opinion____more____Positive_69_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_topics____Opinion____more____Positive_69_en' as patternName
from Ptn_2_topics____Opinion____more____Positive_69_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____Opinion____more____Positive_69_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_topics____Opinion____more____Positive_69_en' as patternName
from Ptn_2_topics____Opinion____more____Positive_69_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____Opinion____more____Positive_69_en_output3 as
select
   X.concept3_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept3_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '3' as outputRank,
   'Ptn_2_topics____Opinion____more____Positive_69_en' as patternName
from Ptn_2_topics____Opinion____more____Positive_69_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____Opinion____more____Positive_69_en_output4 as
select
   X.concept4_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept4_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '4' as outputRank,
   'Ptn_2_topics____Opinion____more____Positive_69_en' as patternName
from Ptn_2_topics____Opinion____more____Positive_69_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____Opinion____more____Positive_69_en_output_all as
(select X.* from Ptn_2_topics____Opinion____more____Positive_69_en_output1 X)
union all
(select X.* from Ptn_2_topics____Opinion____more____Positive_69_en_output2 X)
union all
(select X.* from Ptn_2_topics____Opinion____more____Positive_69_en_output3 X)
union all
(select X.* from Ptn_2_topics____Opinion____more____Positive_69_en_output4 X)
;





--
-- name  =2 topics + "more" + Positive_71
-- value =$mTopic $mCoord $mDet? $mTopic $mShould? ($mBe|$mHave){0,2} more $mOpinionPos
-- output(1)=$1\t#1\tnot $8\tNegative
-- output(2)=$4\t#4\tnot $8\tNegative
--
create view Ptn_2_topics____more____Positive_71_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_2_topics____more____Positive_71_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,

   pattern
     (<mTopic1.concept>) (<mCoord1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) (<mShould1.concept>?) ((<mBe1.concept>|<mHave1.concept>){0,2}) ('more') (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 9 as concept1_2 and
     group 4 as concept2_1 and
     group 9 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_2_topics____more____Positive_71_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_topics____more____Positive_71_en' as patternName
from Ptn_2_topics____more____Positive_71_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____more____Positive_71_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_topics____more____Positive_71_en' as patternName
from Ptn_2_topics____more____Positive_71_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____more____Positive_71_en_output_all as
(select X.* from Ptn_2_topics____more____Positive_71_en_output1 X)
union all
(select X.* from Ptn_2_topics____more____Positive_71_en_output2 X)
;



--
-- name  =2 topics + 2 opinions_72
-- value =$mTopic $mCoord @{0,1} $mTopic ($mShould|$mEmpty){0,3} ($mOpinionPos|$mOpinionNeg) $mCoord{1,2} $mEmpty{0,3} ($mOpinionPos|$mOpinionNeg)
-- output(1)=$1\t#1\t$6\t#6
-- output(2)=$4\t#4\t$6\t#6
-- output(3)=$1\t#1\t$9\t#9
-- output(4)=$4\t#4\t$9\t#9
--
create view Ptn_2_topics___2_opinions_72_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept3_1 as concept3_1,
   X.concept3_2 as concept3_2,
   X.concept4_1 as concept4_1,
   X.concept4_2 as concept4_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type6 as type6,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_2_topics___2_opinions_72_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type6,
   PtnMerge_mOpinionNeg_mOpinionPos_en2.typeName as type9,

   pattern
     (<mTopic1.concept>) (<mCoord1.concept>) (<Tok1.match>{0,1}) (<mTopic2.concept>) ((<mShould1.concept>|<mEmpty1.concept>){0,3}) (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) (<mCoord2.concept>{1,2}) (<mEmpty2.concept>{0,3}) (<PtnMerge_mOpinionNeg_mOpinionPos_en2.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 4 as concept2_1 and
     group 7 as concept2_2 and
     group 1 as concept3_1 and
     group 10 as concept3_2 and
     group 4 as concept4_1 and
     group 10 as concept4_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2, 
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      mCoord_en mCoord2, 
      mEmpty_en mEmpty2, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_2_topics___2_opinions_72_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_topics___2_opinions_72_en' as patternName
from Ptn_2_topics___2_opinions_72_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___2_opinions_72_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_topics___2_opinions_72_en' as patternName
from Ptn_2_topics___2_opinions_72_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___2_opinions_72_en_output3 as
select
   X.concept3_1 as concept1,
   X.type1 as type1,
   X.concept3_2 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '3' as outputRank,
   'Ptn_2_topics___2_opinions_72_en' as patternName
from Ptn_2_topics___2_opinions_72_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___2_opinions_72_en_output4 as
select
   X.concept4_1 as concept1,
   X.type4 as type1,
   X.concept4_2 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '4' as outputRank,
   'Ptn_2_topics___2_opinions_72_en' as patternName
from Ptn_2_topics___2_opinions_72_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___2_opinions_72_en_output_all as
(select X.* from Ptn_2_topics___2_opinions_72_en_output1 X)
union all
(select X.* from Ptn_2_topics___2_opinions_72_en_output2 X)
union all
(select X.* from Ptn_2_topics___2_opinions_72_en_output3 X)
union all
(select X.* from Ptn_2_topics___2_opinions_72_en_output4 X)
;



--
-- name  =2 topics + "less" + Negative_73
-- value =$mTopic $mCoord @{0,1} $mTopic ($mShould|$mEmpty){0,5} less $mOpinionNeg
-- output(1)=$1\t#1\t$7\t#7
-- output(2)=$4\t#4\t$7\t#7
--
create view Ptn_2_topics____less____Negative_73_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_2_topics____less____Negative_73_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,
   mOpinionNeg1.typeName as type7,

   pattern
     (<mTopic1.concept>) (<mCoord1.concept>) (<Tok1.match>{0,1}) (<mTopic2.concept>) ((<mShould1.concept>|<mEmpty1.concept>){0,5}) ('less') (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 8 as concept1_2 and
     group 4 as concept2_1 and
     group 8 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2, 
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      mOpinionNeg_en mOpinionNeg1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_2_topics____less____Negative_73_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_topics____less____Negative_73_en' as patternName
from Ptn_2_topics____less____Negative_73_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____less____Negative_73_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_topics____less____Negative_73_en' as patternName
from Ptn_2_topics____less____Negative_73_en X
consolidate on X.pattern_val;

create view Ptn_2_topics____less____Negative_73_en_output_all as
(select X.* from Ptn_2_topics____less____Negative_73_en_output1 X)
union all
(select X.* from Ptn_2_topics____less____Negative_73_en_output2 X)
;



--
-- name  =topic + desire +  "more" + Positive + "and" + "more" + Positive_74
-- value =$mTopic $mShould ($mBe|$mHave){0,2} more $mOpinionPos $mCoord more $mOpinionPos
-- output(1)=$1\t#1\tnot $5\tNegative
-- output(2)=$1\t#1\tnot $8\tNegative
--
create view Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mHave1.concept>){0,2}) ('more') (<mOpinionPos1.concept>) (<mCoord1.concept>) ('more') (<mOpinionPos2.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 1 as concept2_1 and
     group 9 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionPos_en mOpinionPos1, 
      mCoord_en mCoord1, 
      mOpinionPos_en mOpinionPos2

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en' as patternName
from Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en' as patternName
from Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en_output_all as
(select X.* from Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en_output1 X)
union all
(select X.* from Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en_output2 X)
;



--
-- name  =topic + desire + opinion + "and" + "more" + Positive_75
-- value =$mTopic $mShould $mBe $mEmpty{0,5} $mOpinion $mCoord more $mOpinionPos
-- output(1)=$1\t#1\t$5\t#5
-- output(2)=$1\t#1\tnot $8\tNegative
--
create view Ptn_topic___desire___opinion____and_____more____Positive_75_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire___opinion____and_____more____Positive_75_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinion1.typeName as type5,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) (<mBe1.concept>) (<mEmpty1.concept>{0,5}) (<mOpinion1.concept>) (<mCoord1.concept>) ('more') (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 1 as concept2_1 and
     group 8 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mEmpty_en mEmpty1, 
      mOpinion_en mOpinion1, 
      mCoord_en mCoord1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire___opinion____and_____more____Positive_75_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire___opinion____and_____more____Positive_75_en' as patternName
from Ptn_topic___desire___opinion____and_____more____Positive_75_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire___opinion____and_____more____Positive_75_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___desire___opinion____and_____more____Positive_75_en' as patternName
from Ptn_topic___desire___opinion____and_____more____Positive_75_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire___opinion____and_____more____Positive_75_en_output_all as
(select X.* from Ptn_topic___desire___opinion____and_____more____Positive_75_en_output1 X)
union all
(select X.* from Ptn_topic___desire___opinion____and_____more____Positive_75_en_output2 X)
;



--
-- name  =topic + desire + "more" + Positive + "and" + Positive_76
-- value =$mTopic $mShould $mBe more $mOpinionPos $mCoord $mOpinionPos
-- output(1)=$1\t#1\tnot $5\tNegative
-- output(2)=$1\t#1\tnot $7\tNegative
--
create view Ptn_topic___desire____more____Positive____and____Positive_76_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____more____Positive____and____Positive_76_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) (<mBe1.concept>) ('more') (<mOpinionPos1.concept>) (<mCoord1.concept>) (<mOpinionPos2.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 1 as concept2_1 and
     group 7 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mOpinionPos_en mOpinionPos1, 
      mCoord_en mCoord1, 
      mOpinionPos_en mOpinionPos2

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____more____Positive____and____Positive_76_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____more____Positive____and____Positive_76_en' as patternName
from Ptn_topic___desire____more____Positive____and____Positive_76_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire____more____Positive____and____Positive_76_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___desire____more____Positive____and____Positive_76_en' as patternName
from Ptn_topic___desire____more____Positive____and____Positive_76_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire____more____Positive____and____Positive_76_en_output_all as
(select X.* from Ptn_topic___desire____more____Positive____and____Positive_76_en_output1 X)
union all
(select X.* from Ptn_topic___desire____more____Positive____and____Positive_76_en_output2 X)
;



--
-- name  =topic + desire + opinion + "and" + "less" + Negative_77
-- value =$mTopic ($mShould|$mEmpty){0,5} ($mOpinionPos|$mOpinionNeg|$Contextual) $mCoord $mEmpty{0,3} less $mOpinionNeg
-- output(1)=$1\t#1\t$3\t#3
-- output(2)=$1\t#1\t$7\t#7
--
create view Ptn_topic___desire___opinion____and_____less____Negative_77_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire___opinion____and_____less____Negative_77_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type3,
   mOpinionNeg1.typeName as type7,

   pattern
     (<mTopic1.concept>) ((<mShould1.concept>|<mEmpty1.concept>){0,5}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mCoord1.concept>) (<mEmpty2.concept>{0,3}) ('less') (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 1 as concept2_1 and
     group 8 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty2, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire___opinion____and_____less____Negative_77_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire___opinion____and_____less____Negative_77_en' as patternName
from Ptn_topic___desire___opinion____and_____less____Negative_77_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire___opinion____and_____less____Negative_77_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   X.concept2_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___desire___opinion____and_____less____Negative_77_en' as patternName
from Ptn_topic___desire___opinion____and_____less____Negative_77_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire___opinion____and_____less____Negative_77_en_output_all as
(select X.* from Ptn_topic___desire___opinion____and_____less____Negative_77_en_output1 X)
union all
(select X.* from Ptn_topic___desire___opinion____and_____less____Negative_77_en_output2 X)
;



--
-- name  =topic + desire + "more" + Positive_78
-- value =$mTopic $mShould ($mBe|$mSupport){0,2} more $PositiveAttitude
-- output(1)=$1\t#1\tnot $5\tNegativeAttitude
--
create view Ptn_topic___desire____more____Positive_78_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____more____Positive_78_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mSupport1.concept>){0,2}) ('more') (<PositiveAttitude1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mSupport_en mSupport1, 
      PositiveAttitude_en PositiveAttitude1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____more____Positive_78_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeAttitude' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____more____Positive_78_en' as patternName
from Ptn_topic___desire____more____Positive_78_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + "more" + Positive_79
-- value =$mTopic $mShould ($mBe|$mSupport){0,2} more $PositiveBudget
-- output(1)=$1\t#1\tnot $5\tNegativeBudget
--
create view Ptn_topic___desire____more____Positive_79_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____more____Positive_79_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mSupport1.concept>){0,2}) ('more') (<PositiveBudget1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mSupport_en mSupport1, 
      PositiveBudget_en PositiveBudget1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____more____Positive_79_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeBudget' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____more____Positive_79_en' as patternName
from Ptn_topic___desire____more____Positive_79_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + "more" + Positive_80
-- value =$mTopic $mShould ($mBe|$mSupport){0,2} more $PositiveCompetence
-- output(1)=$1\t#1\tnot $5\tNegativeCompetence
--
create view Ptn_topic___desire____more____Positive_80_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____more____Positive_80_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mSupport1.concept>){0,2}) ('more') (<PositiveCompetence1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mSupport_en mSupport1, 
      PositiveCompetence_en PositiveCompetence1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____more____Positive_80_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeCompetence' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____more____Positive_80_en' as patternName
from Ptn_topic___desire____more____Positive_80_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + "more" + Positive_81
-- value =$mTopic $mShould ($mBe|$mSupport){0,2} more $PositiveFeeling
-- output(1)=$1\t#1\tnot $5\tNegativeFeeling
--
create view Ptn_topic___desire____more____Positive_81_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____more____Positive_81_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mSupport1.concept>){0,2}) ('more') (<PositiveFeeling1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mSupport_en mSupport1, 
      PositiveFeeling_en PositiveFeeling1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____more____Positive_81_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeFeeling' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____more____Positive_81_en' as patternName
from Ptn_topic___desire____more____Positive_81_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + "more" + Positive_82
-- value =$mTopic $mShould ($mBe|$mSupport){0,2} more $PositiveFunctioning
-- output(1)=$1\t#1\tnot $5\tNegativeFunctioning
--
create view Ptn_topic___desire____more____Positive_82_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____more____Positive_82_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mSupport1.concept>){0,2}) ('more') (<PositiveFunctioning1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mSupport_en mSupport1, 
      PositiveFunctioning_en PositiveFunctioning1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____more____Positive_82_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'NegativeFunctioning' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____more____Positive_82_en' as patternName
from Ptn_topic___desire____more____Positive_82_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + "more" + Positive_83
-- value =$mTopic $mShould ($mBe|$mSupport){0,2} more $Positive
-- output(1)=$1\t#1\tnot $5\tNegative
--
create view Ptn_topic___desire____more____Positive_83_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____more____Positive_83_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mSupport1.concept>){0,2}) ('more') (<Positive1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mSupport_en mSupport1, 
      Positive_en Positive1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____more____Positive_83_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____more____Positive_83_en' as patternName
from Ptn_topic___desire____more____Positive_83_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + "less" + Negative_84
-- value =$mTopic $mShould ($mBe|$mHave|$mSupport){0,2} (a little)? less $mOpinionNeg
-- output(1)=$1\t#1\t$6\t#6
--
create view Ptn_topic___desire____less____Negative_84_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____less____Negative_84_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinionNeg1.typeName as type6,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){0,2}) (('a little')?) ('less') (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 8 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____less____Negative_84_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____less____Negative_84_en' as patternName
from Ptn_topic___desire____less____Negative_84_en X
consolidate on X.pattern_val;







--
-- name  =topic + "less" + Positive + "than" + 2 topics_87
-- value =$mTopic ($mBe|$mHave|$mSupport){0,2} less $mOpinionPos than $mDet? $mTopic $mCoord{1,2} $mEmpty{0,3} $mTopic
-- output(1)=$1\t#1\t$3 $4 $5\tNegative\t$7\t#7
-- output(2)=$1\t#1\t$3 $4 $5\tNegative\t$10\t#10
--
create view Ptn_topic____less____Positive____than____2_topics_87_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept1_5 as concept1_5,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.concept2_4 as concept2_4,
   X.concept2_5 as concept2_5,
   X.type1 as type1,
   X.type7 as type7,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn_topic____less____Positive____than____2_topics_87_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type7,
   mTopic3.typeName as type10,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){0,2}) ('less') (<mOpinionPos1.concept>) ('than') (<mDet1.concept>?) (<mTopic2.concept>) (<mCoord1.concept>{1,2}) (<mEmpty1.concept>{0,3}) (<mTopic3.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 5 as concept1_3 and
     group 6 as concept1_4 and
     group 8 as concept1_5 and
     group 1 as concept2_1 and
     group 4 as concept2_2 and
     group 5 as concept2_3 and
     group 6 as concept2_4 and
     group 11 as concept2_5 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic3

) X
consolidate on X.pattern_val;



create view Ptn_topic____less____Positive____than____2_topics_87_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
udf.addWordRight(X.concept1_2, udf.addSpanRight(X.concept1_3, X.concept1_4)) as concept2,
   'Negative' as type2,
   X.concept1_5 as concept3,
   X.type7 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____less____Positive____than____2_topics_87_en' as patternName
from Ptn_topic____less____Positive____than____2_topics_87_en X
consolidate on X.pattern_val;

create view Ptn_topic____less____Positive____than____2_topics_87_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
udf.addWordRight(X.concept2_2, udf.addSpanRight(X.concept2_3, X.concept2_4)) as concept2,
   'Negative' as type2,
   X.concept2_5 as concept3,
   X.type10 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic____less____Positive____than____2_topics_87_en' as patternName
from Ptn_topic____less____Positive____than____2_topics_87_en X
consolidate on X.pattern_val;

create view Ptn_topic____less____Positive____than____2_topics_87_en_output_all as
(select X.* from Ptn_topic____less____Positive____than____2_topics_87_en_output1 X)
union all
(select X.* from Ptn_topic____less____Positive____than____2_topics_87_en_output2 X)
;





--
-- name  =topic + "less" + Negative + "than" + 2 topics_89
-- value =$mTopic (is|$mBe|$mHave|$mEmpty|$mQuant){0,7} less ($mOpinionPos|$mOpinionNeg) than $mDet? $mTopic $mCoord{1,2} $mEmpty{0,3} $mTopic
-- output(1)=$1\t#1\t$3 $4 $5\tPositive\t$7\t#7
-- output(2)=$1\t#1\t$3 $4 $5\tPositive\t$10\t#10
--
create view Ptn_topic____less____Negative____than____2_topics_89_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept1_5 as concept1_5,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.concept2_4 as concept2_4,
   X.concept2_5 as concept2_5,
   X.type1 as type1,
   X.type7 as type7,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn_topic____less____Negative____than____2_topics_89_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type7,
   mTopic3.typeName as type10,

   pattern
     (<mTopic1.concept>) (('is'|<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>|<mQuant1.concept>){0,7}) ('less') (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) ('than') (<mDet1.concept>?) (<mTopic2.concept>) (<mCoord1.concept>{1,2}) (<mEmpty2.concept>{0,3}) (<mTopic3.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 5 as concept1_3 and
     group 6 as concept1_4 and
     group 8 as concept1_5 and
     group 1 as concept2_1 and
     group 4 as concept2_2 and
     group 5 as concept2_3 and
     group 6 as concept2_4 and
     group 11 as concept2_5 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      mQuant_en mQuant1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty2, 
      mTopic_en mTopic3

) X
consolidate on X.pattern_val;



create view Ptn_topic____less____Negative____than____2_topics_89_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
udf.addWordRight(X.concept1_2, udf.addSpanRight(X.concept1_3, X.concept1_4)) as concept2,
   'Positive' as type2,
   X.concept1_5 as concept3,
   X.type7 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____less____Negative____than____2_topics_89_en' as patternName
from Ptn_topic____less____Negative____than____2_topics_89_en X
consolidate on X.pattern_val;

create view Ptn_topic____less____Negative____than____2_topics_89_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
udf.addWordRight(X.concept2_2, udf.addSpanRight(X.concept2_3, X.concept2_4)) as concept2,
   'Positive' as type2,
   X.concept2_5 as concept3,
   X.type10 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic____less____Negative____than____2_topics_89_en' as patternName
from Ptn_topic____less____Negative____than____2_topics_89_en X
consolidate on X.pattern_val;

create view Ptn_topic____less____Negative____than____2_topics_89_en_output_all as
(select X.* from Ptn_topic____less____Negative____than____2_topics_89_en_output1 X)
union all
(select X.* from Ptn_topic____less____Negative____than____2_topics_89_en_output2 X)
;





--
-- name  =topic + opinion + "than" + 2 topics_91
-- value =$mTopic ($mBe|$mHave|$mEmpty|$mQuant){0,7} ($mOpinionPos|$mOpinionNeg|$Contextual) than $mDet? $mTopic $mCoord{1,2} $mEmpty{0,3} $mTopic
-- output(1)=$1\t#1\t$3 than\tPositive\t$6\t#6
-- output(2)=$1\t#1\t$3 than\tPositive\t$9\t#9
--
create view Ptn_topic___opinion____than____2_topics_91_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type1 as type1,
   X.type6 as type6,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____than____2_topics_91_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type6,
   mTopic3.typeName as type9,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>|<mQuant1.concept>){0,7}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ('than') (<mDet1.concept>?) (<mTopic2.concept>) (<mCoord1.concept>{1,2}) (<mEmpty2.concept>{0,3}) (<mTopic3.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 7 as concept1_3 and
     group 1 as concept2_1 and
     group 4 as concept2_2 and
     group 10 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      mQuant_en mQuant1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty2, 
      mTopic_en mTopic3

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____than____2_topics_91_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   '$3 than' as concept2,
   'Positive' as type2,
   X.concept1_3 as concept3,
   X.type6 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____than____2_topics_91_en' as patternName
from Ptn_topic___opinion____than____2_topics_91_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____than____2_topics_91_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   '$3 than' as concept2,
   'Positive' as type2,
   X.concept2_3 as concept3,
   X.type9 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___opinion____than____2_topics_91_en' as patternName
from Ptn_topic___opinion____than____2_topics_91_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____than____2_topics_91_en_output_all as
(select X.* from Ptn_topic___opinion____than____2_topics_91_en_output1 X)
union all
(select X.* from Ptn_topic___opinion____than____2_topics_91_en_output2 X)
;



--
-- name  =topic + "more" + opinion + "than" + topic_92
-- value =$mTopic ($mBe|$mHave|$mSupport){0,2} $mAdverb{0,3} more ($mOpinionPos|$mOpinionNeg|$Contextual) than $mDet? $mTopic
-- output(1)=$1\t#1\t$4 $5 $6\t#5\t$8\t#8
--
create view Ptn_topic____more____opinion____than____topic_92_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept1_5 as concept1_5,
   X.type1 as type1,
   X.type5 as type5,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_topic____more____opinion____than____topic_92_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type5,
   mTopic2.typeName as type8,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){0,2}) (<mAdverb1.concept>{0,3}) ('more') (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ('than') (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 6 as concept1_3 and
     group 7 as concept1_4 and
     group 9 as concept1_5 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic____more____opinion____than____topic_92_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
udf.addWordRight(X.concept1_2, udf.addSpanRight(X.concept1_3, X.concept1_4)) as concept2,
   X.type5 as type2,
   X.concept1_5 as concept3,
   X.type8 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____more____opinion____than____topic_92_en' as patternName
from Ptn_topic____more____opinion____than____topic_92_en X
consolidate on X.pattern_val;



--
-- name  =topic + "less" + Positive + "than" + topic_93
-- value =$mTopic ($mBe|$mHave|$mSupport){0,2} $mAdverb? less $mOpinionPos than $mDet? $mTopic
-- output(1)=$1\t#1\t$4 $5 $6\tNegative\t$8\t#8
--
create view Ptn_topic____less____Positive____than____topic_93_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept1_5 as concept1_5,
   X.type1 as type1,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_topic____less____Positive____than____topic_93_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type8,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){0,2}) (<mAdverb1.concept>?) ('less') (<mOpinionPos1.concept>) ('than') (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 6 as concept1_3 and
     group 7 as concept1_4 and
     group 9 as concept1_5 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic____less____Positive____than____topic_93_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
udf.addWordRight(X.concept1_2, udf.addSpanRight(X.concept1_3, X.concept1_4)) as concept2,
   'Negative' as type2,
   X.concept1_5 as concept3,
   X.type8 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____less____Positive____than____topic_93_en' as patternName
from Ptn_topic____less____Positive____than____topic_93_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not as" + Positive + "as" + topic_94
-- value =$mTopic ($mBe|$mHave|$mSupport){0,2} $mAdvNeg $mBe? as $mOpinionPos as $mDet? $mTopic
-- output(1)=$1\t#1\tnot $5 $6 $7\tNegative\t$9\t#9
--
create view Ptn_topic____not_as____Positive____as____topic_94_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept1_5 as concept1_5,
   X.type1 as type1,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_topic____not_as____Positive____as____topic_94_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type9,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){0,2}) (<mAdvNeg1.concept>) (<mBe2.concept>?) ('as') (<mOpinionPos1.concept>) ('as') (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 7 as concept1_3 and
     group 8 as concept1_4 and
     group 10 as concept1_5 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mAdvNeg_en mAdvNeg1, 
      mBe_en mBe2, 
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic____not_as____Positive____as____topic_94_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'not $5 $6 $7' as concept2,
   'Negative' as type2,
   X.concept1_5 as concept3,
   X.type9 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not_as____Positive____as____topic_94_en' as patternName
from Ptn_topic____not_as____Positive____as____topic_94_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not as" + Positive + "as"_95
-- value =$mTopic ($mBe|$mHave|$mEmpty|$mQuant){0,7} $mAdvNeg $mBe? as $mOpinionPos as ($Negative|$mPronoun? $mHave? $Contextual)?
-- output(1)=$1\t#1\tnot $5 $6\tNegative
--
create view Ptn_topic____not_as____Positive____as__95_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not_as____Positive____as__95_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>|<mQuant1.concept>){0,7}) (<mAdvNeg1.concept>) (<mBe2.concept>?) ('as') (<mOpinionPos1.concept>) ('as') ((<Negative1.concept>|<mPronoun1.concept>? <mHave2.concept>? <Contextual1.concept>)?) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 7 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      mQuant_en mQuant1, 
      mAdvNeg_en mAdvNeg1, 
      mBe_en mBe2, 
      mOpinionPos_en mOpinionPos1, 
      Negative_en Negative1, 
      mPronoun_en mPronoun1, 
      mHave_en mHave2, 
      Contextual_en Contextual1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not_as____Positive____as__95_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'not $5 $6' as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not_as____Positive____as__95_en' as patternName
from Ptn_topic____not_as____Positive____as__95_en X
consolidate on X.pattern_val;



--
-- name  =topic + "less" + Negative + "than" + topic_96
-- value =$mTopic $mEmpty{0,7} less $mOpinionNeg than $mDet? $mTopic
-- output(1)=$1\t#1\t$3 $4 $5\tPositive\t$7\t#7
--
create view Ptn_topic____less____Negative____than____topic_96_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept1_5 as concept1_5,
   X.type1 as type1,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_topic____less____Negative____than____topic_96_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type7,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,7}) ('less') (<mOpinionNeg1.concept>) ('than') (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 4 as concept1_3 and
     group 5 as concept1_4 and
     group 7 as concept1_5 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic____less____Negative____than____topic_96_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
udf.addWordRight(X.concept1_2, udf.addSpanRight(X.concept1_3, X.concept1_4)) as concept2,
   'Positive' as type2,
   X.concept1_5 as concept3,
   X.type7 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____less____Negative____than____topic_96_en' as patternName
from Ptn_topic____less____Negative____than____topic_96_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not as" + Negative + "as" + topic_97
-- value =$mTopic $mEmpty{0,7} $mAdvNeg $mBe? as $mOpinionNeg as $mDet? $mTopic
-- output(1)=$1\t#1\tnot $5 $6 $7\tPositive\t$9\t#9
--
create view Ptn_topic____not_as____Negative____as____topic_97_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept1_5 as concept1_5,
   X.type1 as type1,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_topic____not_as____Negative____as____topic_97_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type9,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,7}) (<mAdvNeg1.concept>) (<mBe1.concept>?) ('as') (<mOpinionNeg1.concept>) ('as') (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 6 as concept1_3 and
     group 7 as concept1_4 and
     group 9 as concept1_5 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mAdvNeg_en mAdvNeg1, 
      mBe_en mBe1, 
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic____not_as____Negative____as____topic_97_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'not $5 $6 $7' as concept2,
   'Positive' as type2,
   X.concept1_5 as concept3,
   X.type9 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not_as____Negative____as____topic_97_en' as patternName
from Ptn_topic____not_as____Negative____as____topic_97_en X
consolidate on X.pattern_val;



--
-- name  =topic + opinion + "than" + topic_98
-- value =$mTopic ($mBe|$mHave|$mEmpty){0,7} ($mOpinionPos|$mOpinionNeg|$Contextual) than $mPrep? $mDet? $mTopic
-- output(1)=$1\t#1\t$3 than\tPositive\t$7\t#7
--
create view Ptn_topic___opinion____than____topic_98_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____than____topic_98_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type7,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>){0,7}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ('than') (<mPrep1.concept>?) (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 8 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____than____topic_98_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   '$3 than' as concept2,
   'Positive' as type2,
   X.concept1_3 as concept3,
   X.type7 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____than____topic_98_en' as patternName
from Ptn_topic___opinion____than____topic_98_en X
consolidate on X.pattern_val;



--
-- name  ="more" + Positive + "than" + 2 topics_99
-- value =more $mOpinionPos than $mDet? $mTopic $mCoord{1,2} $mDet? $mTopic
-- output(1)=$1 $2 $3\t#2\t$5\t#5
-- output(2)=$1 $2 $3\t#2\t$8\t#8
--
create view Ptn__more____Positive____than____2_topics_99_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.concept2_4 as concept2_4,
   X.type2 as type2,
   X.type5 as type5,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn__more____Positive____than____2_topics_99_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type2,
   mTopic1.typeName as type5,
   mTopic2.typeName as type8,

   pattern
     ('more') (<mOpinionPos1.concept>) ('than') (<mDet1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>{1,2}) (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 3 as concept1_3 and
     group 5 as concept1_4 and
     group 1 as concept2_1 and
     group 2 as concept2_2 and
     group 3 as concept2_3 and
     group 8 as concept2_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__more____Positive____than____2_topics_99_en_output1 as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   X.type2 as type1,
   X.concept1_4 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more____Positive____than____2_topics_99_en' as patternName
from Ptn__more____Positive____than____2_topics_99_en X
consolidate on X.pattern_val;

create view Ptn__more____Positive____than____2_topics_99_en_output2 as
select
udf.addWordRight(X.concept2_1, udf.addSpanRight(X.concept2_2, X.concept2_3)) as concept1,
   X.type2 as type1,
   X.concept2_4 as concept2,
   X.type8 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__more____Positive____than____2_topics_99_en' as patternName
from Ptn__more____Positive____than____2_topics_99_en X
consolidate on X.pattern_val;

create view Ptn__more____Positive____than____2_topics_99_en_output_all as
(select X.* from Ptn__more____Positive____than____2_topics_99_en_output1 X)
union all
(select X.* from Ptn__more____Positive____than____2_topics_99_en_output2 X)
;



--
-- name  ="not as" + Positive + "as" + 2 topics_100
-- value =$mSupportNeg $mBe? as $mOpinionPos as $mDet? $mTopic $mCoord{1,2} $mEmpty{0,3} $mTopic
-- output(1)=not $3 $4 $5\tNegative\t$7\t#7
-- output(2)=not $3 $4 $5\tNegative\t$10\t#10
--
create view Ptn__not_as____Positive____as____2_topics_100_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.concept2_4 as concept2_4,
   X.type7 as type7,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn__not_as____Positive____as____2_topics_100_en' as patternName
from (
   extract
   mTopic1.typeName as type7,
   mTopic2.typeName as type10,

   pattern
     (<mSupportNeg1.concept>) (<mBe1.concept>?) ('as') (<mOpinionPos1.concept>) ('as') (<mDet1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>{1,2}) (<mEmpty1.concept>{0,3}) (<mTopic2.concept>) 
   return
     group 3 as concept1_1 and
     group 4 as concept1_2 and
     group 5 as concept1_3 and
     group 7 as concept1_4 and
     group 3 as concept2_1 and
     group 4 as concept2_2 and
     group 5 as concept2_3 and
     group 10 as concept2_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mBe_en mBe1, 
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__not_as____Positive____as____2_topics_100_en_output1 as
select
   'not $3 $4 $5' as concept1,
   'Negative' as type1,
   X.concept1_4 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not_as____Positive____as____2_topics_100_en' as patternName
from Ptn__not_as____Positive____as____2_topics_100_en X
consolidate on X.pattern_val;

create view Ptn__not_as____Positive____as____2_topics_100_en_output2 as
select
   'not $3 $4 $5' as concept1,
   'Negative' as type1,
   X.concept2_4 as concept2,
   X.type10 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not_as____Positive____as____2_topics_100_en' as patternName
from Ptn__not_as____Positive____as____2_topics_100_en X
consolidate on X.pattern_val;

create view Ptn__not_as____Positive____as____2_topics_100_en_output_all as
(select X.* from Ptn__not_as____Positive____as____2_topics_100_en_output1 X)
union all
(select X.* from Ptn__not_as____Positive____as____2_topics_100_en_output2 X)
;



--
-- name  ="less" + Positive + "than" + 2 topics_101
-- value =less $mOpinionPos than $mDet? $mTopic $mCoord{1,2} $mDet? $mTopic
-- output(1)=$1 $2 $3\tNegative\t$5\t#5
-- output(2)=$1 $2 $3\tNegative\t$8\t#8
--
create view Ptn__less____Positive____than____2_topics_101_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.concept2_4 as concept2_4,
   X.type5 as type5,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn__less____Positive____than____2_topics_101_en' as patternName
from (
   extract
   mTopic1.typeName as type5,
   mTopic2.typeName as type8,

   pattern
     ('less') (<mOpinionPos1.concept>) ('than') (<mDet1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>{1,2}) (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 3 as concept1_3 and
     group 5 as concept1_4 and
     group 1 as concept2_1 and
     group 2 as concept2_2 and
     group 3 as concept2_3 and
     group 8 as concept2_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__less____Positive____than____2_topics_101_en_output1 as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   'Negative' as type1,
   X.concept1_4 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__less____Positive____than____2_topics_101_en' as patternName
from Ptn__less____Positive____than____2_topics_101_en X
consolidate on X.pattern_val;

create view Ptn__less____Positive____than____2_topics_101_en_output2 as
select
udf.addWordRight(X.concept2_1, udf.addSpanRight(X.concept2_2, X.concept2_3)) as concept1,
   'Negative' as type1,
   X.concept2_4 as concept2,
   X.type8 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__less____Positive____than____2_topics_101_en' as patternName
from Ptn__less____Positive____than____2_topics_101_en X
consolidate on X.pattern_val;

create view Ptn__less____Positive____than____2_topics_101_en_output_all as
(select X.* from Ptn__less____Positive____than____2_topics_101_en_output1 X)
union all
(select X.* from Ptn__less____Positive____than____2_topics_101_en_output2 X)
;



--
-- name  ="not as" + Negative + "as" + 2 topics_102
-- value =$mSupportNeg $mBe? as $mOpinionNeg as $mDet? $mTopic $mCoord{1,2} $mEmpty{0,3} $mTopic
-- output(1)=not $3 $4 $5\tPositive\t$7\t#7
-- output(2)=not $3 $4 $5\tPositive\t$10\t#10
--
create view Ptn__not_as____Negative____as____2_topics_102_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.concept2_4 as concept2_4,
   X.type7 as type7,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn__not_as____Negative____as____2_topics_102_en' as patternName
from (
   extract
   mTopic1.typeName as type7,
   mTopic2.typeName as type10,

   pattern
     (<mSupportNeg1.concept>) (<mBe1.concept>?) ('as') (<mOpinionNeg1.concept>) ('as') (<mDet1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>{1,2}) (<mEmpty1.concept>{0,3}) (<mTopic2.concept>) 
   return
     group 3 as concept1_1 and
     group 4 as concept1_2 and
     group 5 as concept1_3 and
     group 7 as concept1_4 and
     group 3 as concept2_1 and
     group 4 as concept2_2 and
     group 5 as concept2_3 and
     group 10 as concept2_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mBe_en mBe1, 
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__not_as____Negative____as____2_topics_102_en_output1 as
select
   'not $3 $4 $5' as concept1,
   'Positive' as type1,
   X.concept1_4 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not_as____Negative____as____2_topics_102_en' as patternName
from Ptn__not_as____Negative____as____2_topics_102_en X
consolidate on X.pattern_val;

create view Ptn__not_as____Negative____as____2_topics_102_en_output2 as
select
   'not $3 $4 $5' as concept1,
   'Positive' as type1,
   X.concept2_4 as concept2,
   X.type10 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not_as____Negative____as____2_topics_102_en' as patternName
from Ptn__not_as____Negative____as____2_topics_102_en X
consolidate on X.pattern_val;

create view Ptn__not_as____Negative____as____2_topics_102_en_output_all as
(select X.* from Ptn__not_as____Negative____as____2_topics_102_en_output1 X)
union all
(select X.* from Ptn__not_as____Negative____as____2_topics_102_en_output2 X)
;



--
-- name  ="less" + Negative + "than" + 2 topics_103
-- value =less $mOpinionNeg than $mDet? $mTopic $mCoord{1,2} $mDet? $mTopic
-- output(1)=$1 $2 $3\tPositive\t$5\t#5
-- output(2)=$1 $2 $3\tPositive\t$8\t#8
--
create view Ptn__less____Negative____than____2_topics_103_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.concept2_4 as concept2_4,
   X.type5 as type5,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn__less____Negative____than____2_topics_103_en' as patternName
from (
   extract
   mTopic1.typeName as type5,
   mTopic2.typeName as type8,

   pattern
     ('less') (<mOpinionNeg1.concept>) ('than') (<mDet1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>{1,2}) (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 3 as concept1_3 and
     group 5 as concept1_4 and
     group 1 as concept2_1 and
     group 2 as concept2_2 and
     group 3 as concept2_3 and
     group 8 as concept2_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__less____Negative____than____2_topics_103_en_output1 as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   'Positive' as type1,
   X.concept1_4 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__less____Negative____than____2_topics_103_en' as patternName
from Ptn__less____Negative____than____2_topics_103_en X
consolidate on X.pattern_val;

create view Ptn__less____Negative____than____2_topics_103_en_output2 as
select
udf.addWordRight(X.concept2_1, udf.addSpanRight(X.concept2_2, X.concept2_3)) as concept1,
   'Positive' as type1,
   X.concept2_4 as concept2,
   X.type8 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__less____Negative____than____2_topics_103_en' as patternName
from Ptn__less____Negative____than____2_topics_103_en X
consolidate on X.pattern_val;

create view Ptn__less____Negative____than____2_topics_103_en_output_all as
(select X.* from Ptn__less____Negative____than____2_topics_103_en_output1 X)
union all
(select X.* from Ptn__less____Negative____than____2_topics_103_en_output2 X)
;



--
-- name  =opinion + "than" + 2 topics_104
-- value =($mOpinionPos|$mOpinionNeg|$Contextual) than $mDet? $mTopic $mCoord{1,2} $mDet? $mTopic
-- output(1)=$1 than\tPositive\t$4\t#4
-- output(2)=$1 than\tPositive\t$7\t#7
--
create view Ptn_opinion____than____2_topics_104_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type4 as type4,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_opinion____than____2_topics_104_en' as patternName
from (
   extract
   mTopic1.typeName as type4,
   mTopic2.typeName as type7,

   pattern
     (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ('than') (<mDet1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>{1,2}) (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 1 as concept2_1 and
     group 7 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_opinion____than____2_topics_104_en_output1 as
select
   '$1 than' as concept1,
   'Positive' as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion____than____2_topics_104_en' as patternName
from Ptn_opinion____than____2_topics_104_en X
consolidate on X.pattern_val;

create view Ptn_opinion____than____2_topics_104_en_output2 as
select
   '$1 than' as concept1,
   'Positive' as type1,
   X.concept2_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion____than____2_topics_104_en' as patternName
from Ptn_opinion____than____2_topics_104_en X
consolidate on X.pattern_val;

create view Ptn_opinion____than____2_topics_104_en_output_all as
(select X.* from Ptn_opinion____than____2_topics_104_en_output1 X)
union all
(select X.* from Ptn_opinion____than____2_topics_104_en_output2 X)
;



--
-- name  ="more" + Positive + "than" + topic_105
-- value =more $mOpinionPos than $mDet? $mTopic
-- output(1)=$1 $2 $3\tPositive\t$5\t#5
--
create view Ptn__more____Positive____than____topic_105_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__more____Positive____than____topic_105_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     ('more') (<mOpinionPos1.concept>) ('than') (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 3 as concept1_3 and
     group 5 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__more____Positive____than____topic_105_en_output_all as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   'Positive' as type1,
   X.concept1_4 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more____Positive____than____topic_105_en' as patternName
from Ptn__more____Positive____than____topic_105_en X
consolidate on X.pattern_val;



--
-- name  ="less" + Positive + "than" + topic_106
-- value =less $mOpinionPos than $mDet? $mTopic
-- output(1)=$1 $2 $3\tNegative\t$5\t#5
--
create view Ptn__less____Positive____than____topic_106_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__less____Positive____than____topic_106_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     ('less') (<mOpinionPos1.concept>) ('than') (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 3 as concept1_3 and
     group 5 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__less____Positive____than____topic_106_en_output_all as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   'Negative' as type1,
   X.concept1_4 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__less____Positive____than____topic_106_en' as patternName
from Ptn__less____Positive____than____topic_106_en X
consolidate on X.pattern_val;



--
-- name  ="not as" + Positive + "as" + topic_107
-- value =$mSupportNeg $mBe? as $mOpinionPos as $mDet? $mTopic
-- output(1)=not $3 $4 $5\tNegative\t$7\t#7
--
create view Ptn__not_as____Positive____as____topic_107_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn__not_as____Positive____as____topic_107_en' as patternName
from (
   extract
   mTopic1.typeName as type7,

   pattern
     (<mSupportNeg1.concept>) (<mBe1.concept>?) ('as') (<mOpinionPos1.concept>) ('as') (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 3 as concept1_1 and
     group 4 as concept1_2 and
     group 5 as concept1_3 and
     group 7 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mBe_en mBe1, 
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__not_as____Positive____as____topic_107_en_output_all as
select
   'not $3 $4 $5' as concept1,
   'Negative' as type1,
   X.concept1_4 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not_as____Positive____as____topic_107_en' as patternName
from Ptn__not_as____Positive____as____topic_107_en X
consolidate on X.pattern_val;



--
-- name  ="less" + Negative + "than" + topic_108
-- value =less $mOpinionNeg than $mDet? $mTopic
-- output(1)=$1 $2 $3\tPositive\t$5\t#5
--
create view Ptn__less____Negative____than____topic_108_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__less____Negative____than____topic_108_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     ('less') (<mOpinionNeg1.concept>) ('than') (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 3 as concept1_3 and
     group 5 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__less____Negative____than____topic_108_en_output_all as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   'Positive' as type1,
   X.concept1_4 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__less____Negative____than____topic_108_en' as patternName
from Ptn__less____Negative____than____topic_108_en X
consolidate on X.pattern_val;



--
-- name  ="not as" + Negative + "as" + topic_109
-- value =$mSupportNeg $mBe? as $mOpinionNeg as $mDet? $mTopic
-- output(1)=not $3 $4 $5\tPositive\t$7\t#7
--
create view Ptn__not_as____Negative____as____topic_109_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn__not_as____Negative____as____topic_109_en' as patternName
from (
   extract
   mTopic1.typeName as type7,

   pattern
     (<mSupportNeg1.concept>) (<mBe1.concept>?) ('as') (<mOpinionNeg1.concept>) ('as') (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 3 as concept1_1 and
     group 4 as concept1_2 and
     group 5 as concept1_3 and
     group 7 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNeg_en mSupportNeg1, 
      mBe_en mBe1, 
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__not_as____Negative____as____topic_109_en_output_all as
select
   'not $3 $4 $5' as concept1,
   'Positive' as type1,
   X.concept1_4 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not_as____Negative____as____topic_109_en' as patternName
from Ptn__not_as____Negative____as____topic_109_en X
consolidate on X.pattern_val;



--
-- name  =opinion + "than" + topic_110
-- value =($mOpinionPos|$mOpinionNeg|$Contextual) than $mDet? $mTopic
-- output(1)=$1 than\tPositive\t$4\t#4
--
create view Ptn_opinion____than____topic_110_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_opinion____than____topic_110_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ('than') (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_opinion____than____topic_110_en_output_all as
select
   '$1 than' as concept1,
   'Positive' as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion____than____topic_110_en' as patternName
from Ptn_opinion____than____topic_110_en X
consolidate on X.pattern_val;



--
-- name  =Negative + Positive + topic_111
-- value =$mOpinionNeg $mOpinionPos $mPrep $mDet? $mTopic
-- output(1)=$5\t#5\tnot $2\tNegative
--
create view Ptn_Negative___Positive___topic_111_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_Negative___Positive___topic_111_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mOpinionNeg1.concept>) (<mOpinionPos1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 2 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_Negative___Positive___topic_111_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___Positive___topic_111_en' as patternName
from Ptn_Negative___Positive___topic_111_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + "less/more" + opinion_112
-- value =$mTopic $mPronoun? $mSupportNeg $mDet? @{0,1} (less|more) ($mOpinionPos|$mOpinionNeg)
-- output(1)=$1\t#1\tnot $7\t#7
--
create view Ptn_topic____not_____less_more____opinion_112_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_topic____not_____less_more____opinion_112_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type7,

   pattern
     (<mTopic1.concept>) (<mPronoun1.concept>?) (<mSupportNeg1.concept>) (<mDet1.concept>?) (<Tok1.match>{0,1}) ('less'|'more') (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mPronoun_en mPronoun1, 
      mSupportNeg_en mSupportNeg1, 
      mDet_en mDet1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not_____less_more____opinion_112_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not_____less_more____opinion_112_en' as patternName
from Ptn_topic____not_____less_more____opinion_112_en X
consolidate on X.pattern_val;



--
-- name  =topic + "not" + Contextual_113
-- value =$mTopic ($mPronoun|$mBe|$mHave){0,2} ($mAdvNeg|$mSupportNeg) $mEmpty{0,4} @{0,1} $Contextual
-- output(1)=$1\t#1\tnot $6\tNegative
--
create view Ptn_topic____not____Contextual_113_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____not____Contextual_113_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) ((<mPronoun1.concept>|<mBe1.concept>|<mHave1.concept>){0,2}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) (<mEmpty1.concept>{0,4}) (<Tok1.match>{0,1}) (<Contextual1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mPronoun_en mPronoun1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty1, 
      Contextual_en Contextual1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic____not____Contextual_113_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____not____Contextual_113_en' as patternName
from Ptn_topic____not____Contextual_113_en X
consolidate on X.pattern_val;



--
-- name  =3 topics + opinion_114
-- value =$mTopic ($SEP|$mCoord){1,3} $mDet? $mTopic ($SEP|$mCoord){1,3} $mDet? $mTopic ($mBe|$mHave|$mSupport|$mEmpty){1,5} ($mOpinionNeg|$mOpinionPos)
-- output(1)=$1\t#1\t$9\t#9
-- output(2)=$4\t#4\t$9\t#9
-- output(3)=$7\t#7\t$9\t#9
--
create view Ptn_3_topics___opinion_114_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept3_1 as concept3_1,
   X.concept3_2 as concept3_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type7 as type7,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_3_topics___opinion_114_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,
   mTopic3.typeName as type7,
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type9,

   pattern
     (<mTopic1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,3}) (<mDet1.concept>?) (<mTopic2.concept>) ((<SEP2.concept>|<mCoord2.concept>){1,3}) (<mDet2.concept>?) (<mTopic3.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>|<mEmpty1.concept>){1,5}) (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 12 as concept1_2 and
     group 5 as concept2_1 and
     group 12 as concept2_2 and
     group 9 as concept3_1 and
     group 12 as concept3_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      SEP_en SEP2, 
      mCoord_en mCoord2, 
      mDet_en mDet2, 
      mTopic_en mTopic3, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mEmpty_en mEmpty1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_3_topics___opinion_114_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_3_topics___opinion_114_en' as patternName
from Ptn_3_topics___opinion_114_en X
consolidate on X.pattern_val;

create view Ptn_3_topics___opinion_114_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_3_topics___opinion_114_en' as patternName
from Ptn_3_topics___opinion_114_en X
consolidate on X.pattern_val;

create view Ptn_3_topics___opinion_114_en_output3 as
select
   X.concept3_1 as concept1,
   X.type7 as type1,
   X.concept3_2 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '3' as outputRank,
   'Ptn_3_topics___opinion_114_en' as patternName
from Ptn_3_topics___opinion_114_en X
consolidate on X.pattern_val;

create view Ptn_3_topics___opinion_114_en_output_all as
(select X.* from Ptn_3_topics___opinion_114_en_output1 X)
union all
(select X.* from Ptn_3_topics___opinion_114_en_output2 X)
union all
(select X.* from Ptn_3_topics___opinion_114_en_output3 X)
;



--
-- name  =topic + topic + 2 opinions_115
-- value =$mTopic ($mCoord|then) @{0,1} $mTopic ($mBe|$mHave|$mEmpty){0,5} ($mOpinionPos|$mOpinionNeg|$Contextual) ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1\t#1
-- output(2)=$4\t#4\t$6\t#6
-- output(3)=$4\t#4\t$7\t#7
--
create view Ptn_topic___topic___2_opinions_115_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept3_1 as concept3_1,
   X.concept3_2 as concept3_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type6 as type6,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_topic___topic___2_opinions_115_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type6,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type7,

   pattern
     (<mTopic1.concept>) (<mCoord1.concept>|'then') (<Tok1.match>{0,1}) (<mTopic2.concept>) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>){0,5}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept2_1 and
     group 7 as concept2_2 and
     group 4 as concept3_1 and
     group 8 as concept3_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___topic___2_opinions_115_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___topic___2_opinions_115_en' as patternName
from Ptn_topic___topic___2_opinions_115_en X
consolidate on X.pattern_val;

create view Ptn_topic___topic___2_opinions_115_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___topic___2_opinions_115_en' as patternName
from Ptn_topic___topic___2_opinions_115_en X
consolidate on X.pattern_val;

create view Ptn_topic___topic___2_opinions_115_en_output3 as
select
   X.concept3_1 as concept1,
   X.type4 as type1,
   X.concept3_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '3' as outputRank,
   'Ptn_topic___topic___2_opinions_115_en' as patternName
from Ptn_topic___topic___2_opinions_115_en X
consolidate on X.pattern_val;

create view Ptn_topic___topic___2_opinions_115_en_output_all as
(select X.* from Ptn_topic___topic___2_opinions_115_en_output1 X)
union all
(select X.* from Ptn_topic___topic___2_opinions_115_en_output2 X)
union all
(select X.* from Ptn_topic___topic___2_opinions_115_en_output3 X)
;





--
-- name  =2 topics + Positive + NegativeEmoticon_117
-- value =$mTopic $mCoord $mDet? $mTopic @{0,2} $mOpinionPos @{0,1} $NegativeFeeling_Emoticon
-- output(1)=$1\t#1\tnot $6\tNegative
-- output(2)=$4\t#4\tnot $6\tNegative
--
create view Ptn_2_topics___Positive___NegativeEmoticon_117_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_2_topics___Positive___NegativeEmoticon_117_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,

   pattern
     (<mTopic1.concept>) (<mCoord1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) (<Tok1.match>{0,2}) (<mOpinionPos1.concept>) (<Tok2.match>{0,1}) (<NegativeFeeling_Emoticon1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 4 as concept2_1 and
     group 6 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mOpinionPos_en mOpinionPos1, 
      NegativeFeeling_Emoticon_en NegativeFeeling_Emoticon1, 
      Tok Tok1, 
      Tok Tok2

) X
consolidate on X.pattern_val;



create view Ptn_2_topics___Positive___NegativeEmoticon_117_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_topics___Positive___NegativeEmoticon_117_en' as patternName
from Ptn_2_topics___Positive___NegativeEmoticon_117_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___Positive___NegativeEmoticon_117_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_topics___Positive___NegativeEmoticon_117_en' as patternName
from Ptn_2_topics___Positive___NegativeEmoticon_117_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___Positive___NegativeEmoticon_117_en_output_all as
(select X.* from Ptn_2_topics___Positive___NegativeEmoticon_117_en_output1 X)
union all
(select X.* from Ptn_2_topics___Positive___NegativeEmoticon_117_en_output2 X)
;



--
-- name  =topic + Positive + NegativeEmoticon_118
-- value =$mTopic @{0,2} $mOpinionPos @{0,1} $NegativeFeeling_Emoticon
-- output(1)=$1\t#1\tnot $3\tNegative
--
create view Ptn_topic___Positive___NegativeEmoticon_118_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___Positive___NegativeEmoticon_118_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,2}) (<mOpinionPos1.concept>) (<Tok2.match>{0,1}) (<NegativeFeeling_Emoticon1.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mOpinionPos_en mOpinionPos1, 
      NegativeFeeling_Emoticon_en NegativeFeeling_Emoticon1, 
      Tok Tok1, 
      Tok Tok2

) X
consolidate on X.pattern_val;



create view Ptn_topic___Positive___NegativeEmoticon_118_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___Positive___NegativeEmoticon_118_en' as patternName
from Ptn_topic___Positive___NegativeEmoticon_118_en X
consolidate on X.pattern_val;



--
-- name  =2 topics + opinion_119
-- value =$mTopic $mCoord $mDet{0,1} $mTopic ($mBe|$mHave|$mEmpty){0,5} ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1\t#1\t$6\t#6
-- output(2)=$4\t#4\t$6\t#6
--
create view Ptn_2_topics___opinion_119_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_2_topics___opinion_119_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type6,

   pattern
     (<mTopic1.concept>) (<mCoord1.concept>) (<mDet1.concept>{0,1}) (<mTopic2.concept>) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>){0,5}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 4 as concept2_1 and
     group 7 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_2_topics___opinion_119_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_topics___opinion_119_en' as patternName
from Ptn_2_topics___opinion_119_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___opinion_119_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_topics___opinion_119_en' as patternName
from Ptn_2_topics___opinion_119_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___opinion_119_en_output_all as
(select X.* from Ptn_2_topics___opinion_119_en_output1 X)
union all
(select X.* from Ptn_2_topics___opinion_119_en_output2 X)
;



--
-- name  =topic + 4 opinions_120
-- value =$mTopic @{0,2} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){1,2} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){1,2} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){1,2} ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1\t#1\t$3\t#3
-- output(2)=$1\t#1\t$5\t#5
-- output(3)=$1\t#1\t$7\t#7
-- output(4)=$1\t#1\t$9\t#9
--
create view Ptn_topic___4_opinions_120_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept3_1 as concept3_1,
   X.concept3_2 as concept3_2,
   X.concept4_1 as concept4_1,
   X.concept4_2 as concept4_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type5 as type5,
   X.type7 as type7,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_topic___4_opinions_120_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type3,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type5,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en3.typeName as type7,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en4.typeName as type9,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,2}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) ((<SEP2.concept>|<mCoord2.concept>){1,2}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en3.concept>) ((<SEP3.concept>|<mCoord3.concept>){1,2}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en4.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 1 as concept2_1 and
     group 6 as concept2_2 and
     group 1 as concept3_1 and
     group 9 as concept3_2 and
     group 1 as concept4_1 and
     group 12 as concept4_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2, 
      SEP_en SEP2, 
      mCoord_en mCoord2, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en3, 
      SEP_en SEP3, 
      mCoord_en mCoord3, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en4, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___4_opinions_120_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___4_opinions_120_en' as patternName
from Ptn_topic___4_opinions_120_en X
consolidate on X.pattern_val;

create view Ptn_topic___4_opinions_120_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   X.concept2_2 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___4_opinions_120_en' as patternName
from Ptn_topic___4_opinions_120_en X
consolidate on X.pattern_val;

create view Ptn_topic___4_opinions_120_en_output3 as
select
   X.concept3_1 as concept1,
   X.type1 as type1,
   X.concept3_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '3' as outputRank,
   'Ptn_topic___4_opinions_120_en' as patternName
from Ptn_topic___4_opinions_120_en X
consolidate on X.pattern_val;

create view Ptn_topic___4_opinions_120_en_output4 as
select
   X.concept4_1 as concept1,
   X.type1 as type1,
   X.concept4_2 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '4' as outputRank,
   'Ptn_topic___4_opinions_120_en' as patternName
from Ptn_topic___4_opinions_120_en X
consolidate on X.pattern_val;

create view Ptn_topic___4_opinions_120_en_output_all as
(select X.* from Ptn_topic___4_opinions_120_en_output1 X)
union all
(select X.* from Ptn_topic___4_opinions_120_en_output2 X)
union all
(select X.* from Ptn_topic___4_opinions_120_en_output3 X)
union all
(select X.* from Ptn_topic___4_opinions_120_en_output4 X)
;



--
-- name  =topic + 3 opinions_121
-- value =$mTopic @{0,2} $mEmpty{0,5} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){0,2} $mEmpty{0,2} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){0,3} $mEmpty{0,2} ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1\t#1\t$4\t#4
-- output(2)=$1\t#1\t$7\t#7
-- output(3)=$1\t#1\t$10\t#10
--
create view Ptn_topic___3_opinions_121_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept3_1 as concept3_1,
   X.concept3_2 as concept3_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type7 as type7,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn_topic___3_opinions_121_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type7,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en3.typeName as type10,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,2}) (<mEmpty1.concept>{0,5}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){0,2}) (<mEmpty2.concept>{0,2}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) ((<SEP2.concept>|<mCoord2.concept>){0,3}) (<mEmpty3.concept>{0,2}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en3.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 1 as concept2_1 and
     group 8 as concept2_2 and
     group 1 as concept3_1 and
     group 12 as concept3_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty2, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2, 
      SEP_en SEP2, 
      mCoord_en mCoord2, 
      mEmpty_en mEmpty3, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en3, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___3_opinions_121_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___3_opinions_121_en' as patternName
from Ptn_topic___3_opinions_121_en X
consolidate on X.pattern_val;

create view Ptn_topic___3_opinions_121_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   X.concept2_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___3_opinions_121_en' as patternName
from Ptn_topic___3_opinions_121_en X
consolidate on X.pattern_val;

create view Ptn_topic___3_opinions_121_en_output3 as
select
   X.concept3_1 as concept1,
   X.type1 as type1,
   X.concept3_2 as concept2,
   X.type10 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '3' as outputRank,
   'Ptn_topic___3_opinions_121_en' as patternName
from Ptn_topic___3_opinions_121_en X
consolidate on X.pattern_val;

create view Ptn_topic___3_opinions_121_en_output_all as
(select X.* from Ptn_topic___3_opinions_121_en_output1 X)
union all
(select X.* from Ptn_topic___3_opinions_121_en_output2 X)
union all
(select X.* from Ptn_topic___3_opinions_121_en_output3 X)
;



--
-- name  =topic + 2 opinions + topic_122
-- value =$mTopic $mEmpty{1,5} $mOpinion $mCoord $mEmpty{0,2} $mOpinion $mTopic
-- output(1)=$1\t#1\t$7\t#7\t$3\t#3
-- output(2)=$1\t#1\t$7\t#7\t$6\t#6
--
create view Ptn_topic___2_opinions___topic_122_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_topic___2_opinions___topic_122_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinion1.typeName as type3,
   mOpinion2.typeName as type6,
   mTopic2.typeName as type7,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{1,5}) (<mOpinion1.concept>) (<mCoord1.concept>) (<mEmpty2.concept>{0,2}) (<mOpinion2.concept>) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 3 as concept1_3 and
     group 1 as concept2_1 and
     group 7 as concept2_2 and
     group 6 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mOpinion_en mOpinion1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty2, 
      mOpinion_en mOpinion2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic___2_opinions___topic_122_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type7 as type2,
   X.concept1_3 as concept3,
   X.type3 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___2_opinions___topic_122_en' as patternName
from Ptn_topic___2_opinions___topic_122_en X
consolidate on X.pattern_val;

create view Ptn_topic___2_opinions___topic_122_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   X.concept2_2 as concept2,
   X.type7 as type2,
   X.concept2_3 as concept3,
   X.type6 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___2_opinions___topic_122_en' as patternName
from Ptn_topic___2_opinions___topic_122_en X
consolidate on X.pattern_val;

create view Ptn_topic___2_opinions___topic_122_en_output_all as
(select X.* from Ptn_topic___2_opinions___topic_122_en_output1 X)
union all
(select X.* from Ptn_topic___2_opinions___topic_122_en_output2 X)
;



--
-- name  =topic + opinion + topic + opinion_123
-- value =$mTopic @{0,1} $mEmpty{1,5} @{0,1} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){1,2} $mTopic @{0,1} ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1\t#1\t$5\t#5
-- output(2)=$7\t#7\t$9\t#9
--
create view Ptn_topic___opinion___topic___opinion_123_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type5 as type5,
   X.type7 as type7,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion___topic___opinion_123_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type5,
   mTopic2.typeName as type7,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type9,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,1}) (<mEmpty1.concept>{1,5}) (<Tok2.match>{0,1}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mTopic2.concept>) (<Tok3.match>{0,1}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 8 as concept2_1 and
     group 10 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2, 
      Tok Tok1, 
      Tok Tok2, 
      Tok Tok3

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion___topic___opinion_123_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion___topic___opinion_123_en' as patternName
from Ptn_topic___opinion___topic___opinion_123_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion___topic___opinion_123_en_output2 as
select
   X.concept2_1 as concept1,
   X.type7 as type1,
   X.concept2_2 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___opinion___topic___opinion_123_en' as patternName
from Ptn_topic___opinion___topic___opinion_123_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion___topic___opinion_123_en_output_all as
(select X.* from Ptn_topic___opinion___topic___opinion_123_en_output1 X)
union all
(select X.* from Ptn_topic___opinion___topic___opinion_123_en_output2 X)
;



--
-- name  =topic + opinion + "not" + Positive/Contextual_124
-- value =$mTopic @{0,2} $mEmpty{0,4} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){1,2} $mAdvNeg $mEmpty{0,2} ($mOpinionPos|$Contextual)
-- output(1)=$1\t#1\t$4\t#4
-- output(2)=$1\t#1\tnot $8\tNegative
--
create view Ptn_topic___opinion____not____Positive_Contextual_124_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____not____Positive_Contextual_124_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,2}) (<mEmpty1.concept>{0,4}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mAdvNeg1.concept>) (<mEmpty2.concept>{0,2}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 1 as concept2_1 and
     group 9 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mAdvNeg_en mAdvNeg1, 
      mEmpty_en mEmpty2, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____not____Positive_Contextual_124_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____not____Positive_Contextual_124_en' as patternName
from Ptn_topic___opinion____not____Positive_Contextual_124_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____not____Positive_Contextual_124_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___opinion____not____Positive_Contextual_124_en' as patternName
from Ptn_topic___opinion____not____Positive_Contextual_124_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____not____Positive_Contextual_124_en_output_all as
(select X.* from Ptn_topic___opinion____not____Positive_Contextual_124_en_output1 X)
union all
(select X.* from Ptn_topic___opinion____not____Positive_Contextual_124_en_output2 X)
;



--
-- name  =topic + opinion + "too" + Positive/Contextual_125
-- value =$mTopic $mBe $mAdverb? $mOpinionPos? ($SEP|$mCoord){1,2} @ $mToo ($mOpinionPos|$Contextual)
-- output(1)=$1\t#1\t$4\t#4
-- output(2)=$1\t#1\ttoo $8\tNegative
--
create view Ptn_topic___opinion____too____Positive_Contextual_125_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____too____Positive_Contextual_125_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinionPos1.typeName as type4,

   pattern
     (<mTopic1.concept>) (<mBe1.concept>) (<mAdverb1.concept>?) (<mOpinionPos1.concept>?) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<Tok1.match>) (<mToo1.concept>) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 1 as concept2_1 and
     group 9 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mAdverb_en mAdverb1, 
      mOpinionPos_en mOpinionPos1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mToo_en mToo1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____too____Positive_Contextual_125_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____too____Positive_Contextual_125_en' as patternName
from Ptn_topic___opinion____too____Positive_Contextual_125_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____too____Positive_Contextual_125_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('too', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___opinion____too____Positive_Contextual_125_en' as patternName
from Ptn_topic___opinion____too____Positive_Contextual_125_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____too____Positive_Contextual_125_en_output_all as
(select X.* from Ptn_topic___opinion____too____Positive_Contextual_125_en_output1 X)
union all
(select X.* from Ptn_topic___opinion____too____Positive_Contextual_125_en_output2 X)
;



--
-- name  =topic + opinion + "too" + Negative_126
-- value =$mTopic $mEmpty{0,4} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord|but|$mEmpty){1,5} $mToo @{0,1} $mOpinionNeg
-- output(1)=$1\t#1\t$3\t#3
-- output(2)=$1\t#1\t$7\t#7
--
create view Ptn_topic___opinion____too____Negative_126_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____too____Negative_126_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type3,
   mOpinionNeg1.typeName as type7,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,4}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>|'but'|<mEmpty2.concept>){1,5}) (<mToo1.concept>) (<Tok1.match>{0,1}) (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 1 as concept2_1 and
     group 8 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty2, 
      mToo_en mToo1, 
      mOpinionNeg_en mOpinionNeg1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____too____Negative_126_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____too____Negative_126_en' as patternName
from Ptn_topic___opinion____too____Negative_126_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____too____Negative_126_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   X.concept2_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___opinion____too____Negative_126_en' as patternName
from Ptn_topic___opinion____too____Negative_126_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____too____Negative_126_en_output_all as
(select X.* from Ptn_topic___opinion____too____Negative_126_en_output1 X)
union all
(select X.* from Ptn_topic___opinion____too____Negative_126_en_output2 X)
;



--
-- name  =topic/Negative + opinion + "not" + Positive_127
-- value =($mTopic|$mOpinionNeg) $mEmpty{0,4} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){1,2} ($mAdvNeg|$mSupportNeg) ($Contextual|$mOpinionPos)
-- output(1)=$1\t#1\t$3\t#3
-- output(2)=$1\t#1\tnot $6\tNegative
--
create view Ptn_topic_Negative___opinion____not____Positive_127_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_topic_Negative___opinion____not____Positive_127_en' as patternName
from (
   extract
   PtnMerge_mOpinionNeg_mTopic_en1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type3,

   pattern
     (<PtnMerge_mOpinionNeg_mTopic_en1.concept>) (<mEmpty1.concept>{0,4}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 1 as concept2_1 and
     group 7 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_mOpinionNeg_mTopic_en PtnMerge_mOpinionNeg_mTopic_en1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_topic_Negative___opinion____not____Positive_127_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic_Negative___opinion____not____Positive_127_en' as patternName
from Ptn_topic_Negative___opinion____not____Positive_127_en X
consolidate on X.pattern_val;

create view Ptn_topic_Negative___opinion____not____Positive_127_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic_Negative___opinion____not____Positive_127_en' as patternName
from Ptn_topic_Negative___opinion____not____Positive_127_en X
consolidate on X.pattern_val;

create view Ptn_topic_Negative___opinion____not____Positive_127_en_output_all as
(select X.* from Ptn_topic_Negative___opinion____not____Positive_127_en_output1 X)
union all
(select X.* from Ptn_topic_Negative___opinion____not____Positive_127_en_output2 X)
;



--
-- name  =topic + opinion + "not" + Negative_128
-- value =$mTopic @{0,1} ($mBe|$mHave|$mEmpty|$mSupport){0,4} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){1,2} ($mAdvNeg|$mSupportNeg) @{0,1} $mOpinionNeg
-- output(1)=$1\t#1\t$4\t#4
-- output(2)=$1\t#1\tnot $8\tPositive
--
create view Ptn_topic___opinion____not____Negative_128_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____not____Negative_128_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,1}) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>|<mSupport1.concept>){0,4}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) (<Tok2.match>{0,1}) (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 1 as concept2_1 and
     group 10 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      mSupport_en mSupport1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mOpinionNeg_en mOpinionNeg1, 
      Tok Tok1, 
      Tok Tok2

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____not____Negative_128_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____not____Negative_128_en' as patternName
from Ptn_topic___opinion____not____Negative_128_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____not____Negative_128_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___opinion____not____Negative_128_en' as patternName
from Ptn_topic___opinion____not____Negative_128_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____not____Negative_128_en_output_all as
(select X.* from Ptn_topic___opinion____not____Negative_128_en_output1 X)
union all
(select X.* from Ptn_topic___opinion____not____Negative_128_en_output2 X)
;



--
-- name  =topic + opinion + "no" + Negative_129
-- value =$mTopic @{0,1} ($mBe|$mHave|$mEmpty|$mSupport){0,4} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){1,2} (no|$mAdvNeg|$mMiscNeg) @{0,1} $mOpinionNeg
-- output(1)=$1\t#1\t$4\t#4
-- output(2)=$1\t#1\tno $8\tPositive
--
create view Ptn_topic___opinion____no____Negative_129_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____no____Negative_129_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,1}) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>|<mSupport1.concept>){0,4}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) ('no'|<mAdvNeg1.concept>|<mMiscNeg1.concept>) (<Tok2.match>{0,1}) (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 1 as concept2_1 and
     group 10 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      mSupport_en mSupport1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mAdvNeg_en mAdvNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mOpinionNeg_en mOpinionNeg1, 
      Tok Tok1, 
      Tok Tok2

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____no____Negative_129_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____no____Negative_129_en' as patternName
from Ptn_topic___opinion____no____Negative_129_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____no____Negative_129_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('no', X.concept2_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___opinion____no____Negative_129_en' as patternName
from Ptn_topic___opinion____no____Negative_129_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____no____Negative_129_en_output_all as
(select X.* from Ptn_topic___opinion____no____Negative_129_en_output1 X)
union all
(select X.* from Ptn_topic___opinion____no____Negative_129_en_output2 X)
;



--
-- name  =topic + "too" + opinion + opinion_130
-- value =$mTopic @{0,1} ($mBe|$mHave|$mEmpty|$mSupport){0,4} $mToo ($mOpinionPos|$Contextual) ($SEP|$mCoord){1,2} $mEmpty{0,4} @{0,1} ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1\t#1\ttoo $5\tNegative
-- output(2)=$1\t#1\t$9\t#9
--
create view Ptn_topic____too____opinion___opinion_130_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_topic____too____opinion___opinion_130_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type9,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,1}) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>|<mSupport1.concept>){0,4}) (<mToo1.concept>) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mEmpty2.concept>{0,4}) (<Tok2.match>{0,1}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 1 as concept2_1 and
     group 11 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      mSupport_en mSupport1, 
      mToo_en mToo1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty2, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      Tok Tok1, 
      Tok Tok2

) X
consolidate on X.pattern_val;



create view Ptn_topic____too____opinion___opinion_130_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('too', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____too____opinion___opinion_130_en' as patternName
from Ptn_topic____too____opinion___opinion_130_en X
consolidate on X.pattern_val;

create view Ptn_topic____too____opinion___opinion_130_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   X.concept2_2 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic____too____opinion___opinion_130_en' as patternName
from Ptn_topic____too____opinion___opinion_130_en X
consolidate on X.pattern_val;

create view Ptn_topic____too____opinion___opinion_130_en_output_all as
(select X.* from Ptn_topic____too____opinion___opinion_130_en_output1 X)
union all
(select X.* from Ptn_topic____too____opinion___opinion_130_en_output2 X)
;



--
-- name  =topic + 2 opinions_131
-- value =$mTopic $mEmpty{0,4} ($mOpinionPos|$mOpinionNeg|$Contextual) ($SEP|$mCoord){1,2} ($mBe|$mHave|$mEmpty){0,4} ($mOpinionPos|$mOpinionNeg)
-- output(1)=$1\t#1\t$3\t#3
-- output(2)=$1\t#1\t$6\t#6
--
create view Ptn_topic___2_opinions_131_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_topic___2_opinions_131_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type3,
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type6,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,4}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) ((<mBe1.concept>|<mHave1.concept>|<mEmpty2.concept>){0,4}) (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 1 as concept2_1 and
     group 8 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty2, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_topic___2_opinions_131_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___2_opinions_131_en' as patternName
from Ptn_topic___2_opinions_131_en X
consolidate on X.pattern_val;

create view Ptn_topic___2_opinions_131_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   X.concept2_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___2_opinions_131_en' as patternName
from Ptn_topic___2_opinions_131_en X
consolidate on X.pattern_val;

create view Ptn_topic___2_opinions_131_en_output_all as
(select X.* from Ptn_topic___2_opinions_131_en_output1 X)
union all
(select X.* from Ptn_topic___2_opinions_131_en_output2 X)
;



--
-- name  =topic + "has" + 2 opinion + topic_132
-- value =$mTopic ($mBe|$mHave|$mSupport){0,2} $mDet{0,2} $mOpinion $mTopic ($SEP|$mCoord){1,2} $mDet{0,2} $mOpinion $mTopic
-- output(1)=$5\t#5\t$4\t#4\t$1\t#1
-- output(2)=$9\t#9\t$8\t#8\t$1\t#1
--
create view Ptn_topic____has____2_opinion___topic_132_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type1 as type1,
   X.type4 as type4,
   X.type5 as type5,
   X.type8 as type8,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_topic____has____2_opinion___topic_132_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinion1.typeName as type4,
   mTopic2.typeName as type5,
   mOpinion2.typeName as type8,
   mTopic3.typeName as type9,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){0,2}) (<mDet1.concept>{0,2}) (<mOpinion1.concept>) (<mTopic2.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mDet2.concept>{0,2}) (<mOpinion2.concept>) (<mTopic3.concept>) 
   return
     group 6 as concept1_1 and
     group 5 as concept1_2 and
     group 1 as concept1_3 and
     group 11 as concept2_1 and
     group 10 as concept2_2 and
     group 1 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mDet_en mDet1, 
      mOpinion_en mOpinion1, 
      mTopic_en mTopic2, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mOpinion_en mOpinion2, 
      mTopic_en mTopic3

) X
consolidate on X.pattern_val;



create view Ptn_topic____has____2_opinion___topic_132_en_output1 as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   X.concept1_3 as concept3,
   X.type1 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____has____2_opinion___topic_132_en' as patternName
from Ptn_topic____has____2_opinion___topic_132_en X
consolidate on X.pattern_val;

create view Ptn_topic____has____2_opinion___topic_132_en_output2 as
select
   X.concept2_1 as concept1,
   X.type9 as type1,
   X.concept2_2 as concept2,
   X.type8 as type2,
   X.concept2_3 as concept3,
   X.type1 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic____has____2_opinion___topic_132_en' as patternName
from Ptn_topic____has____2_opinion___topic_132_en X
consolidate on X.pattern_val;

create view Ptn_topic____has____2_opinion___topic_132_en_output_all as
(select X.* from Ptn_topic____has____2_opinion___topic_132_en_output1 X)
union all
(select X.* from Ptn_topic____has____2_opinion___topic_132_en_output2 X)
;



--
-- name  =topic + "has" + opinion + topic + "than"_133
-- value =$mTopic $mEmpty{0,5} $mOpinion $mDet? $mTopic than{1,2} $mTopic
-- output(1)=$1\t#1\t$5\t#5\t$3\t#3\t$7\t#7
--
create view Ptn_topic____has____opinion___topic____than__133_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type1 as type1,
   X.type3 as type3,
   X.type5 as type5,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_topic____has____opinion___topic____than__133_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinion1.typeName as type3,
   mTopic2.typeName as type5,
   mTopic3.typeName as type7,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,5}) (<mOpinion1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) ('than'{1,2}) (<mTopic3.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 3 as concept1_3 and
     group 7 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mOpinion_en mOpinion1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mTopic_en mTopic3

) X
consolidate on X.pattern_val;



create view Ptn_topic____has____opinion___topic____than__133_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type5 as type2,
   X.concept1_3 as concept3,
   X.type3 as type3,
   X.concept1_4 as concept4,
   X.type7 as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____has____opinion___topic____than__133_en' as patternName
from Ptn_topic____has____opinion___topic____than__133_en X
consolidate on X.pattern_val;



--
-- name  =topic + "has" + opinion + topic_134
-- value =$mTopic ($mHave|$mSupport){1,3} $mEmpty{0,3} $mOpinion $mDet? $mTopic
-- output(1)=$6\t#6\t$4\t#4\t$1\t#1
--
create view Ptn_topic____has____opinion___topic_134_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type4 as type4,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_topic____has____opinion___topic_134_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinion1.typeName as type4,
   mTopic2.typeName as type6,

   pattern
     (<mTopic1.concept>) ((<mHave1.concept>|<mSupport1.concept>){1,3}) (<mEmpty1.concept>{0,3}) (<mOpinion1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 7 as concept1_1 and
     group 5 as concept1_2 and
     group 1 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mEmpty_en mEmpty1, 
      mOpinion_en mOpinion1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic____has____opinion___topic_134_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   X.concept1_3 as concept3,
   X.type1 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____has____opinion___topic_134_en' as patternName
from Ptn_topic____has____opinion___topic_134_en X
consolidate on X.pattern_val;



--
-- name  =topic + topic + Negative_135
-- value =$mTopic ($mBe|$mHave|$mSupport){1,3} $mDet? $mTopic $mOpinionNeg
-- output(1)=$1\t#1\t$4\t#4\t$5\t#5
--
create view Ptn_topic___topic___Negative_135_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type4 as type4,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_topic___topic___Negative_135_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,
   mOpinionNeg1.typeName as type5,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){1,3}) (<mDet1.concept>?) (<mTopic2.concept>) (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 6 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn_topic___topic___Negative_135_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   X.concept1_3 as concept3,
   X.type5 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___topic___Negative_135_en' as patternName
from Ptn_topic___topic___Negative_135_en X
consolidate on X.pattern_val;



--
-- name  =topic + "more" + Positive + topic_136
-- value =$mTopic more $mOpinionPos $mTopic
-- output(1)=$4\t#4\t$3\t#3
--
create view Ptn_topic____more____Positive___topic_136_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_topic____more____Positive___topic_136_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type3,
   mTopic2.typeName as type4,

   pattern
     (<mTopic1.concept>) ('more') (<mOpinionPos1.concept>) (<mTopic2.concept>) 
   return
     group 4 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic____more____Positive___topic_136_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____more____Positive___topic_136_en' as patternName
from Ptn_topic____more____Positive___topic_136_en X
consolidate on X.pattern_val;



--
-- name  =topic + "more" + Positive_137
-- value =$mTopic more $mOpinionPos
-- output(1)=$1\t#1\tnot $3\tNegative
--
create view Ptn_topic____more____Positive_137_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____more____Positive_137_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) ('more') (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_topic____more____Positive_137_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____more____Positive_137_en' as patternName
from Ptn_topic____more____Positive_137_en X
consolidate on X.pattern_val;



--
-- name  =topic + "less" + Negative_138
-- value =$mTopic less $mOpinionNeg
-- output(1)=$1\t#1\t$3\t#3
--
create view Ptn_topic____less____Negative_138_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_topic____less____Negative_138_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinionNeg1.typeName as type3,

   pattern
     (<mTopic1.concept>) ('less') (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn_topic____less____Negative_138_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____less____Negative_138_en' as patternName
from Ptn_topic____less____Negative_138_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + opinion + 2 topics_139
-- value =$mTopic $mShould @{0,1} ($mOpinionPos|$mOpinionNeg|$Contextual) $mDet $mTopic $mCoord $mDet $mTopic
-- output(1)=$6\t#6\tnot $4\tNegative
-- output(2)=$9\t#9\tnot $4\tNegative
--
create view Ptn_topic___desire___opinion___2_topics_139_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type6 as type6,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire___opinion___2_topics_139_en' as patternName
from (
   extract
   mTopic2.typeName as type6,
   mTopic3.typeName as type9,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) (<Tok1.match>{0,1}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mDet1.concept>) (<mTopic2.concept>) (<mCoord1.concept>) (<mDet2.concept>) (<mTopic3.concept>) 
   return
     group 6 as concept1_1 and
     group 4 as concept1_2 and
     group 9 as concept2_1 and
     group 4 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mTopic_en mTopic3, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire___opinion___2_topics_139_en_output1 as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire___opinion___2_topics_139_en' as patternName
from Ptn_topic___desire___opinion___2_topics_139_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire___opinion___2_topics_139_en_output2 as
select
   X.concept2_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___desire___opinion___2_topics_139_en' as patternName
from Ptn_topic___desire___opinion___2_topics_139_en X
consolidate on X.pattern_val;

create view Ptn_topic___desire___opinion___2_topics_139_en_output_all as
(select X.* from Ptn_topic___desire___opinion___2_topics_139_en_output1 X)
union all
(select X.* from Ptn_topic___desire___opinion___2_topics_139_en_output2 X)
;



--
-- name  =topic + desire + opinion + topic_140
-- value =$mTopic $mShould @{0,1} ($mOpinionPos|$mOpinionNeg|$Contextual) $mDet $mTopic
-- output(1)=$6\t#6\tnot $4\tNegative
--
create view Ptn_topic___desire___opinion___topic_140_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire___opinion___topic_140_en' as patternName
from (
   extract
   mTopic2.typeName as type6,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) (<Tok1.match>{0,1}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mDet1.concept>) (<mTopic2.concept>) 
   return
     group 6 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire___opinion___topic_140_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire___opinion___topic_140_en' as patternName
from Ptn_topic___desire___opinion___topic_140_en X
consolidate on X.pattern_val;



--
-- name  ="seems like" + Positive + topic_141
-- value =$mSupport $mPronoun $mShould $mSupport $mDet $mOpinionPos $mTopic
-- output(1)=$7\t#7\t$6\t#6
--
create view Ptn__seems_like____Positive___topic_141_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn__seems_like____Positive___topic_141_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type6,
   mTopic1.typeName as type7,

   pattern
     (<mSupport1.concept>) (<mPronoun1.concept>) (<mShould1.concept>) (<mSupport2.concept>) (<mDet1.concept>) (<mOpinionPos1.concept>) (<mTopic1.concept>) 
   return
     group 7 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupport_en mSupport1, 
      mPronoun_en mPronoun1, 
      mShould_en mShould1, 
      mSupport_en mSupport2, 
      mDet_en mDet1, 
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__seems_like____Positive___topic_141_en_output_all as
select
   X.concept1_1 as concept1,
   X.type7 as type1,
   X.concept1_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__seems_like____Positive___topic_141_en' as patternName
from Ptn__seems_like____Positive___topic_141_en X
consolidate on X.pattern_val;



--
-- name  =desire + Positive +2  topics_142
-- value =$mShould @{0,1} $mEmpty{0,3} $mOpinionPos $mTopic $mCoord $mDet? $mTopic
-- output(1)=$5\t#5\tnot $4\tNegative
-- output(2)=$8\t#8\tnot $4\tNegative
--
create view Ptn_desire___Positive__2__topics_142_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type5 as type5,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_desire___Positive__2__topics_142_en' as patternName
from (
   extract
   mTopic1.typeName as type5,
   mTopic2.typeName as type8,

   pattern
     (<mShould1.concept>) (<Tok1.match>{0,1}) (<mEmpty1.concept>{0,3}) (<mOpinionPos1.concept>) (<mTopic1.concept>) (<mCoord1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 5 as concept1_1 and
     group 4 as concept1_2 and
     group 8 as concept2_1 and
     group 4 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Positive__2__topics_142_en_output1 as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Positive__2__topics_142_en' as patternName
from Ptn_desire___Positive__2__topics_142_en X
consolidate on X.pattern_val;

create view Ptn_desire___Positive__2__topics_142_en_output2 as
select
   X.concept2_1 as concept1,
   X.type8 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_desire___Positive__2__topics_142_en' as patternName
from Ptn_desire___Positive__2__topics_142_en X
consolidate on X.pattern_val;

create view Ptn_desire___Positive__2__topics_142_en_output_all as
(select X.* from Ptn_desire___Positive__2__topics_142_en_output1 X)
union all
(select X.* from Ptn_desire___Positive__2__topics_142_en_output2 X)
;



--
-- name  =desire + opinion + topic_143
-- value =$mShould @{0,1} $mEmpty{0,3} $mOpinionPos $mTopic
-- output(1)=$5\t#5\tnot $4\tNegative
--
create view Ptn_desire___opinion___topic_143_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_desire___opinion___topic_143_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mShould1.concept>) (<Tok1.match>{0,1}) (<mEmpty1.concept>{0,3}) (<mOpinionPos1.concept>) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___opinion___topic_143_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___opinion___topic_143_en' as patternName
from Ptn_desire___opinion___topic_143_en X
consolidate on X.pattern_val;



--
-- name  =desire + topic + opinion + topic_144
-- value =$mShould @? $mPrep $mSupport $mDet? $mTopic ($mOpinionPos|$Contextual) $mDet? $mTopic
-- output(1)=$9\t#9\tnot $7\tNegative\t$6\t#6
--
create view Ptn_desire___topic___opinion___topic_144_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type6 as type6,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_desire___topic___opinion___topic_144_en' as patternName
from (
   extract
   mTopic1.typeName as type6,
   mTopic2.typeName as type9,

   pattern
     (<mShould1.concept>) (<Tok1.match>?) (<mPrep1.concept>) (<mSupport1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 9 as concept1_1 and
     group 7 as concept1_2 and
     group 6 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mPrep_en mPrep1, 
      mSupport_en mSupport1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mDet_en mDet2, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___topic___opinion___topic_144_en_output_all as
select
   X.concept1_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   X.concept1_3 as concept3,
   X.type6 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___topic___opinion___topic_144_en' as patternName
from Ptn_desire___topic___opinion___topic_144_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire be + Positive/Contextual + topic_145
-- value =($mTopic|$Period) $mShould $mBe $mDet ($mOpinionPos|$Contextual) $mTopic
-- output(1)=$1\t#1\tno\tContextual
--
create view Ptn_topic___desire_be___Positive_Contextual___topic_145_en as
select
   X.concept1_1 as concept1_1,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire_be___Positive_Contextual___topic_145_en' as patternName
from (
   extract
   PtnMerge_Period_mTopic_en1.typeName as type1,

   pattern
     (<PtnMerge_Period_mTopic_en1.concept>) (<mShould1.concept>) (<mBe1.concept>) (<mDet1.concept>) (<mOpinionPos1.concept>|<Contextual1.concept>) (<mTopic1.concept>) 
   return
     group 1 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Period_mTopic_en PtnMerge_Period_mTopic_en1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mDet_en mDet1, 
      mOpinionPos_en mOpinionPos1, 
      Contextual_en Contextual1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire_be___Positive_Contextual___topic_145_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'no' as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire_be___Positive_Contextual___topic_145_en' as patternName
from Ptn_topic___desire_be___Positive_Contextual___topic_145_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + Positive/Contextual + topic_146
-- value =($mTopic|$Period) $mShould $mEmpty{0,3} ($mOpinionPos|$Contextual) $mTopic
-- output(1)=$1\t#1\t$5\t#5\tnot $4\tNegative
--
create view Ptn_topic___desire___Positive_Contextual___topic_146_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire___Positive_Contextual___topic_146_en' as patternName
from (
   extract
   PtnMerge_Period_mTopic_en1.typeName as type1,
   mTopic1.typeName as type5,

   pattern
     (<PtnMerge_Period_mTopic_en1.concept>) (<mShould1.concept>) (<mEmpty1.concept>{0,3}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mTopic1.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 4 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Period_mTopic_en PtnMerge_Period_mTopic_en1, 
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire___Positive_Contextual___topic_146_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type5 as type2,
   udf.addWordLeft('not', X.concept1_3) as concept3,
   'Negative' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire___Positive_Contextual___topic_146_en' as patternName
from Ptn_topic___desire___Positive_Contextual___topic_146_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + Positive/Contextual_147
-- value =$mTopic $mShould ($mBe|$mHave|$mSupport){0,3} ($mOpinionPos|$Contextual)
-- output(1)=$1\t#1\tnot $4\tNegative
--
create view Ptn_topic___desire___Positive_Contextual_147_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire___Positive_Contextual_147_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){0,3}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire___Positive_Contextual_147_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire___Positive_Contextual_147_en' as patternName
from Ptn_topic___desire___Positive_Contextual_147_en X
consolidate on X.pattern_val;



--
-- name  =desire + "more" + Positive + topic_148
-- value =$mShould ($mBe|$mHave|$mSupport|to){1,3} @? more $mOpinionPos $mPrep? $mDet? $mTopic
-- output(1)=$8\t#8\tnot $5\tNegative
--
create view Ptn_desire____more____Positive___topic_148_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_desire____more____Positive___topic_148_en' as patternName
from (
   extract
   mTopic1.typeName as type8,

   pattern
     (<mShould1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>|'to'){1,3}) (<Tok1.match>?) ('more') (<mOpinionPos1.concept>) (<mPrep1.concept>?) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 9 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire____more____Positive___topic_148_en_output_all as
select
   X.concept1_1 as concept1,
   X.type8 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire____more____Positive___topic_148_en' as patternName
from Ptn_desire____more____Positive___topic_148_en X
consolidate on X.pattern_val;



--
-- name  =desire + Positive + "to" + Positive + topic_149
-- value =((would be $mOpinionPos)|$Negative) $mPrep $mBe $mOpinionPos @{0,2} $mTopic
-- output(1)=$6\t#6\tnot $4\tNegative
--
create view Ptn_desire___Positive____to____Positive___topic_149_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_desire___Positive____to____Positive___topic_149_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (('would be $mOpinionPos')|<Negative1.concept>) (<mPrep1.concept>) (<mBe1.concept>) (<mOpinionPos1.concept>) (<Tok1.match>{0,2}) (<mTopic1.concept>) 
   return
     group 7 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      mPrep_en mPrep1, 
      mBe_en mBe1, 
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Positive____to____Positive___topic_149_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Positive____to____Positive___topic_149_en' as patternName
from Ptn_desire___Positive____to____Positive___topic_149_en X
consolidate on X.pattern_val;



--
-- name  =desire + Positive + topic + opinion_150
-- value =((would be $mOpinionPos)|$Negative) $mPrep? @{0,1} $mDet? @? $mTopic ($mSupport|$mBe|$mHave) $mOpinionPos
-- output(1)=$6\t#6\tnot $8\tNegative
--
create view Ptn_desire___Positive___topic___opinion_150_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_desire___Positive___topic___opinion_150_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (('would be $mOpinionPos')|<Negative1.concept>) (<mPrep1.concept>?) (<Tok1.match>{0,1}) (<mDet1.concept>?) (<Tok2.match>?) (<mTopic1.concept>) (<mSupport1.concept>|<mBe1.concept>|<mHave1.concept>) (<mOpinionPos1.concept>) 
   return
     group 7 as concept1_1 and
     group 9 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mSupport_en mSupport1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1, 
      Tok Tok2

) X
consolidate on X.pattern_val;



create view Ptn_desire___Positive___topic___opinion_150_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Positive___topic___opinion_150_en' as patternName
from Ptn_desire___Positive___topic___opinion_150_en X
consolidate on X.pattern_val;



--
-- name  =desire + Positive + topic_151
-- value =((would be $mOpinionPos)|$Negative) $mPrep? $mHave $mDet? @? $mTopic
-- output(1)=$6\t#6\t$1\t#1
--
create view Ptn_desire___Positive___topic_151_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_desire___Positive___topic_151_en' as patternName
from (
   extract
   PtnMerge_Negative_Ptn_SeqTypeUnknown_would_be_mOpinionPos_en_en1.typeName as type1,
   mTopic1.typeName as type6,

   pattern
     (<PtnMerge_Negative_Ptn_SeqTypeUnknown_would_be_mOpinionPos_en_en1.concept>) (<mPrep1.concept>?) (<mHave1.concept>) (<mDet1.concept>?) (<Tok1.match>?) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 1 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Negative_Ptn_SeqTypeUnknown_would_be_mOpinionPos_en_en PtnMerge_Negative_Ptn_SeqTypeUnknown_would_be_mOpinionPos_en_en1, 
      mPrep_en mPrep1, 
      mHave_en mHave1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Positive___topic_151_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Positive___topic_151_en' as patternName
from Ptn_desire___Positive___topic_151_en X
consolidate on X.pattern_val;



--
-- name  =desire + "more" + 2 topics_152
-- value =$mShould $mPrep? @{0,2} more $mTopic $mCoord $mEmpty{0,3} $mTopic
-- output(1)=$5\t#5\tneed more\tNegative
-- output(2)=$8\t#8\tneed more\tNegative
--
create view Ptn_desire____more____2_topics_152_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.type5 as type5,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_desire____more____2_topics_152_en' as patternName
from (
   extract
   mTopic1.typeName as type5,
   mTopic2.typeName as type8,

   pattern
     (<mShould1.concept>) (<mPrep1.concept>?) (<Tok1.match>{0,2}) ('more') (<mTopic1.concept>) (<mCoord1.concept>) (<mEmpty1.concept>{0,3}) (<mTopic2.concept>) 
   return
     group 5 as concept1_1 and
     group 8 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire____more____2_topics_152_en_output1 as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   'need more' as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire____more____2_topics_152_en' as patternName
from Ptn_desire____more____2_topics_152_en X
consolidate on X.pattern_val;

create view Ptn_desire____more____2_topics_152_en_output2 as
select
   X.concept2_1 as concept1,
   X.type8 as type1,
   'need more' as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_desire____more____2_topics_152_en' as patternName
from Ptn_desire____more____2_topics_152_en X
consolidate on X.pattern_val;

create view Ptn_desire____more____2_topics_152_en_output_all as
(select X.* from Ptn_desire____more____2_topics_152_en_output1 X)
union all
(select X.* from Ptn_desire____more____2_topics_152_en_output2 X)
;



--
-- name  =desire + "more" + topic_153
-- value =$mShould $mPrep? @{0,2} more $mTopic
-- output(1)=$5\t#5\tneed more \tNegative
--
create view Ptn_desire____more____topic_153_en as
select
   X.concept1_1 as concept1_1,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_desire____more____topic_153_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mShould1.concept>) (<mPrep1.concept>?) (<Tok1.match>{0,2}) ('more') (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire____more____topic_153_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   'need more ' as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire____more____topic_153_en' as patternName
from Ptn_desire____more____topic_153_en X
consolidate on X.pattern_val;



--
-- name  =desire + Positive/Contextual + topic_154
-- value =$mShould ($mOpinionPos|$Contextual) $mEmpty{0,5} $mTopic
-- output(1)=$4\t#4\tnot $2\tNegative
--
create view Ptn_desire___Positive_Contextual___topic_154_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_desire___Positive_Contextual___topic_154_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<mShould1.concept>) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mEmpty1.concept>{0,5}) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 2 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Positive_Contextual___topic_154_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Positive_Contextual___topic_154_en' as patternName
from Ptn_desire___Positive_Contextual___topic_154_en X
consolidate on X.pattern_val;



--
-- name  =desire + 2 topics_155
-- value =$mShould @? ($mPrep|$mPronoun){0,2} $mEmpty{0,3} $mDet? $mTopic $mCoord $mDet? $mTopic
-- output(1)=$6\t#6\twould be good\tNegative
-- output(2)=$9\t#9\twould be good\tNegative
--
create view Ptn_desire___2_topics_155_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.type6 as type6,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_desire___2_topics_155_en' as patternName
from (
   extract
   mTopic1.typeName as type6,
   mTopic2.typeName as type9,

   pattern
     (<mShould1.concept>) (<Tok1.match>?) ((<mPrep1.concept>|<mPronoun1.concept>){0,2}) (<mEmpty1.concept>{0,3}) (<mDet1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>) (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 7 as concept1_1 and
     group 10 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mPrep_en mPrep1, 
      mPronoun_en mPronoun1, 
      mEmpty_en mEmpty1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___2_topics_155_en_output1 as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   'would be good' as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___2_topics_155_en' as patternName
from Ptn_desire___2_topics_155_en X
consolidate on X.pattern_val;

create view Ptn_desire___2_topics_155_en_output2 as
select
   X.concept2_1 as concept1,
   X.type9 as type1,
   'would be good' as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_desire___2_topics_155_en' as patternName
from Ptn_desire___2_topics_155_en X
consolidate on X.pattern_val;

create view Ptn_desire___2_topics_155_en_output_all as
(select X.* from Ptn_desire___2_topics_155_en_output1 X)
union all
(select X.* from Ptn_desire___2_topics_155_en_output2 X)
;



--
-- name  =desire + Negative + topic_156
-- value =$mShould @? to $mOpinionNeg $mDet $mTopic
-- output(1)=$6\t#6\t$4\t#4
--
create view Ptn_desire___Negative___topic_156_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_desire___Negative___topic_156_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type4,
   mTopic1.typeName as type6,

   pattern
     (<mShould1.concept>) (<Tok1.match>?) ('to') (<mOpinionNeg1.concept>) (<mDet1.concept>) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mOpinionNeg_en mOpinionNeg1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Negative___topic_156_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Negative___topic_156_en' as patternName
from Ptn_desire___Negative___topic_156_en X
consolidate on X.pattern_val;



--
-- name  =desire + topic + positive_157
-- value =$mShould $mEmpty{0,2} $mTopic $mEmpty{0,3} more? $mOpinionPos{1}
-- output(1)=$3\t#3\tnot $6\tNegative
--
create view Ptn_desire___topic___positive_157_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_desire___topic___positive_157_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<mShould1.concept>) (<mEmpty1.concept>{0,2}) (<mTopic1.concept>) (<mEmpty2.concept>{0,3}) ('more'?) (<mOpinionPos1.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty2, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_desire___topic___positive_157_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___topic___positive_157_en' as patternName
from Ptn_desire___topic___positive_157_en X
consolidate on X.pattern_val;



--
-- name  =desire + topic_158
-- value =$mShould @? ($mPrep|$mPronoun){0,2} $mEmpty{0,3} $mDet? $mTopic $mOpinionPos?
-- output(1)=$6\t#6\twould be good\tNegative
--
create view Ptn_desire___topic_158_en as
select
   X.concept1_1 as concept1_1,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_desire___topic_158_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mShould1.concept>) (<Tok1.match>?) ((<mPrep1.concept>|<mPronoun1.concept>){0,2}) (<mEmpty1.concept>{0,3}) (<mDet1.concept>?) (<mTopic1.concept>) (<mOpinionPos1.concept>?) 
   return
     group 7 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mPrep_en mPrep1, 
      mPronoun_en mPronoun1, 
      mEmpty_en mEmpty1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___topic_158_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   'would be good' as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___topic_158_en' as patternName
from Ptn_desire___topic_158_en X
consolidate on X.pattern_val;



--
-- name  =topic + Contextual + topic_159
-- value =$mTopic $mEmpty{0,3} ($Contextual|more|less) $mPrep $mDet? $mTopic
-- output(1)=$1 $4 $6\t#1\t$3\tContextual
--
create view Ptn_topic___Contextual___topic_159_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___Contextual___topic_159_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) (<PtnMerge_Contextual_less_more_en1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 6 as concept1_3 and
     group 3 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_less_more_en PtnMerge_Contextual_less_more_en1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic___Contextual___topic_159_en_output_all as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   X.type1 as type1,
   X.concept1_4 as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___Contextual___topic_159_en' as patternName
from Ptn_topic___Contextual___topic_159_en X
consolidate on X.pattern_val;



--
-- name  =topic + opinion + topic_160
-- value =$mTopic $mDet? ($mOpinionPos|$mOpinionNeg|$Contextual) ($mDet|$mEmpty)? $mTopic
-- output(1)=$1\t#1\t$5\t#5\t$3\t#3
--
create view Ptn_topic___opinion___topic_160_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type3 as type3,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion___topic_160_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type3,
   mTopic2.typeName as type5,

   pattern
     (<mTopic1.concept>) (<mDet1.concept>?) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<mDet2.concept>|<mEmpty1.concept>)?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 3 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mDet_en mDet1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mDet_en mDet2, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion___topic_160_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type5 as type2,
   X.concept1_3 as concept3,
   X.type3 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion___topic_160_en' as patternName
from Ptn_topic___opinion___topic_160_en X
consolidate on X.pattern_val;



--
-- name  =topic + opinion + topic_161
-- value =$mTopic $mPrep more $mOpinionPos $mTopic
-- output(1)=$1 $2 $5\t#1\tmore $4\tContextual
--
create view Ptn_topic___opinion___topic_161_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion___topic_161_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mPrep1.concept>) ('more') (<mOpinionPos1.concept>) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 5 as concept1_3 and
     group 4 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mPrep_en mPrep1, 
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion___topic_161_en_output_all as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   X.type1 as type1,
   udf.addWordLeft('more', X.concept1_4) as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion___topic_161_en' as patternName
from Ptn_topic___opinion___topic_161_en X
consolidate on X.pattern_val;



--
-- name  =2 topics + emoticon_162
-- value =$mTopic $mCoord $mDet? $mTopic @{0,1} ($NegativeFeeling_Emoticon|$PositiveFeeling_Emoticon)
-- output(1)=$1\t#1\t$6\t#6
-- output(2)=$4\t#4\t$6\t#6
--
create view Ptn_2_topics___emoticon_162_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_2_topics___emoticon_162_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type4,
   PtnMerge_NegativeFeeling_Emoticon_PositiveFeeling_Emoticon_en1.typeName as type6,

   pattern
     (<mTopic1.concept>) (<mCoord1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) (<Tok1.match>{0,1}) (<PtnMerge_NegativeFeeling_Emoticon_PositiveFeeling_Emoticon_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 4 as concept2_1 and
     group 6 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      PtnMerge_NegativeFeeling_Emoticon_PositiveFeeling_Emoticon_en PtnMerge_NegativeFeeling_Emoticon_PositiveFeeling_Emoticon_en1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_2_topics___emoticon_162_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_topics___emoticon_162_en' as patternName
from Ptn_2_topics___emoticon_162_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___emoticon_162_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_topics___emoticon_162_en' as patternName
from Ptn_2_topics___emoticon_162_en X
consolidate on X.pattern_val;

create view Ptn_2_topics___emoticon_162_en_output_all as
(select X.* from Ptn_2_topics___emoticon_162_en_output1 X)
union all
(select X.* from Ptn_2_topics___emoticon_162_en_output2 X)
;



--
-- name  =topic + opinion + "compared to" + 2 topic_163
-- value =$mTopic @{0,1} ($mBe|$mHave|$mEmpty){0,4} ($mOpinionPos|$mOpinionNeg|$Contextual) $mComparedTo $mDet{0,2} $mTopic $mCoord $mDet? $mTopic
-- output(1)=$1\t#1\t$4\t#4\t$7\t#7
-- output(2)=$1\t#1\t$4\t#4\t$10\t#10
--
create view Ptn_topic___opinion____compared_to____2_topic_163_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type1 as type1,
   X.type4 as type4,
   X.type7 as type7,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____compared_to____2_topic_163_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,
   mTopic2.typeName as type7,
   mTopic3.typeName as type10,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,1}) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>){0,4}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mComparedTo1.concept>) (<mDet1.concept>{0,2}) (<mTopic2.concept>) (<mCoord1.concept>) (<mDet2.concept>?) (<mTopic3.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 8 as concept1_3 and
     group 1 as concept2_1 and
     group 5 as concept2_2 and
     group 11 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mComparedTo_en mComparedTo1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mTopic_en mTopic3, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____compared_to____2_topic_163_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   X.concept1_3 as concept3,
   X.type7 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____compared_to____2_topic_163_en' as patternName
from Ptn_topic___opinion____compared_to____2_topic_163_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____compared_to____2_topic_163_en_output2 as
select
   X.concept2_1 as concept1,
   X.type1 as type1,
   X.concept2_2 as concept2,
   X.type4 as type2,
   X.concept2_3 as concept3,
   X.type10 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___opinion____compared_to____2_topic_163_en' as patternName
from Ptn_topic___opinion____compared_to____2_topic_163_en X
consolidate on X.pattern_val;

create view Ptn_topic___opinion____compared_to____2_topic_163_en_output_all as
(select X.* from Ptn_topic___opinion____compared_to____2_topic_163_en_output1 X)
union all
(select X.* from Ptn_topic___opinion____compared_to____2_topic_163_en_output2 X)
;



--
-- name  =topic + opinion + "compared to" + topic_164
-- value =$mTopic @{0,1} $mEmpty{0,4} ($mOpinionPos|$mOpinionNeg|$Contextual) $mComparedTo $mDet{0,2} $mTopic
-- output(1)=$1\t#1\t$4\t#4\t$7\t#7
--
create view Ptn_topic___opinion____compared_to____topic_164_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type4 as type4,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____compared_to____topic_164_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,
   mTopic2.typeName as type7,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,1}) (<mEmpty1.concept>{0,4}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mComparedTo1.concept>) (<mDet1.concept>{0,2}) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 7 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mComparedTo_en mComparedTo1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____compared_to____topic_164_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   X.concept1_3 as concept3,
   X.type7 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____compared_to____topic_164_en' as patternName
from Ptn_topic___opinion____compared_to____topic_164_en X
consolidate on X.pattern_val;



--
-- name  =topic + prep + topic + "too" + Positive/Contextual_165
-- value =$mTopic $mPrep $mDet? $mTopic $mEmpty{0,5} $mToo ($mOpinionPos|$Contextual)
-- output(1)=$1 $2 $4\t#1\ttoo $7\tNegative
--
create view Ptn_topic___prep___topic____too____Positive_Contextual_165_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___prep___topic____too____Positive_Contextual_165_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) (<mEmpty1.concept>{0,5}) (<mToo1.concept>) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 4 as concept1_3 and
     group 7 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mEmpty_en mEmpty1, 
      mToo_en mToo1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_topic___prep___topic____too____Positive_Contextual_165_en_output_all as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   X.type1 as type1,
   udf.addWordLeft('too', X.concept1_4) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___prep___topic____too____Positive_Contextual_165_en' as patternName
from Ptn_topic___prep___topic____too____Positive_Contextual_165_en X
consolidate on X.pattern_val;



--
-- name  =topic + "too" + Positive/Contextual_166
-- value =$mTopic $mEmpty{0,3} $mToo ($mOpinionPos|$Contextual)
-- output(1)=$1\t#1\ttoo $4\tNegative
--
create view Ptn_topic____too____Positive_Contextual_166_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____too____Positive_Contextual_166_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) (<mToo1.concept>) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mToo_en mToo1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_topic____too____Positive_Contextual_166_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('too', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____too____Positive_Contextual_166_en' as patternName
from Ptn_topic____too____Positive_Contextual_166_en X
consolidate on X.pattern_val;



--
-- name  =topic + opinion + topic_167
-- value =$mTopic $mSupport? ($mOpinionPos|$mOpinionNeg|$Contextual) $mPrep $mDet? $mTopic
-- output(1)=$1\t#1\t$6\t#6\t$3\t#3
--
create view Ptn_topic___opinion___topic_167_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion___topic_167_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type3,
   mTopic2.typeName as type6,

   pattern
     (<mTopic1.concept>) (<mSupport1.concept>?) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 3 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mSupport_en mSupport1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion___topic_167_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type6 as type2,
   X.concept1_3 as concept3,
   X.type3 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion___topic_167_en' as patternName
from Ptn_topic___opinion___topic_167_en X
consolidate on X.pattern_val;





--
-- name  ="less" + Negative + "more" + Positive + topic_169
-- value =less $mOpinionNeg ($SEP|$mCoord){1,2} more $mOpinionPos ($mPrep|$mDet){0,2} $mTopic
-- output(1)=$7\t#7\t$2\t#2
-- output(2)=$7\t#7\tnot $5\tNegative
--
create view Ptn__less____Negative____more____Positive___topic_169_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type2 as type2,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn__less____Negative____more____Positive___topic_169_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type2,
   mTopic1.typeName as type7,

   pattern
     ('less') (<mOpinionNeg1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) ('more') (<mOpinionPos1.concept>) ((<mPrep1.concept>|<mDet1.concept>){0,2}) (<mTopic1.concept>) 
   return
     group 9 as concept1_1 and
     group 2 as concept1_2 and
     group 9 as concept2_1 and
     group 6 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__less____Negative____more____Positive___topic_169_en_output1 as
select
   X.concept1_1 as concept1,
   X.type7 as type1,
   X.concept1_2 as concept2,
   X.type2 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__less____Negative____more____Positive___topic_169_en' as patternName
from Ptn__less____Negative____more____Positive___topic_169_en X
consolidate on X.pattern_val;

create view Ptn__less____Negative____more____Positive___topic_169_en_output2 as
select
   X.concept2_1 as concept1,
   X.type7 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__less____Negative____more____Positive___topic_169_en' as patternName
from Ptn__less____Negative____more____Positive___topic_169_en X
consolidate on X.pattern_val;

create view Ptn__less____Negative____more____Positive___topic_169_en_output_all as
(select X.* from Ptn__less____Negative____more____Positive___topic_169_en_output1 X)
union all
(select X.* from Ptn__less____Negative____more____Positive___topic_169_en_output2 X)
;



--
-- name  ="more" + Positive + "less" + Negative + topic_170
-- value =more $mOpinionPos ($SEP|$mCoord){1,2} less $mOpinionNeg ($mPrep|$mDet){0,2} $mTopic
-- output(1)=$7\t#7\tnot $2\tNegative
-- output(2)=$7\t#7\t$5\t#5
--
create view Ptn__more____Positive____less____Negative___topic_170_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type5 as type5,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn__more____Positive____less____Negative___topic_170_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type5,
   mTopic1.typeName as type7,

   pattern
     ('more') (<mOpinionPos1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) ('less') (<mOpinionNeg1.concept>) ((<mPrep1.concept>|<mDet1.concept>){0,2}) (<mTopic1.concept>) 
   return
     group 9 as concept1_1 and
     group 2 as concept1_2 and
     group 9 as concept2_1 and
     group 6 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mOpinionNeg_en mOpinionNeg1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__more____Positive____less____Negative___topic_170_en_output1 as
select
   X.concept1_1 as concept1,
   X.type7 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more____Positive____less____Negative___topic_170_en' as patternName
from Ptn__more____Positive____less____Negative___topic_170_en X
consolidate on X.pattern_val;

create view Ptn__more____Positive____less____Negative___topic_170_en_output2 as
select
   X.concept2_1 as concept1,
   X.type7 as type1,
   X.concept2_2 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__more____Positive____less____Negative___topic_170_en' as patternName
from Ptn__more____Positive____less____Negative___topic_170_en X
consolidate on X.pattern_val;

create view Ptn__more____Positive____less____Negative___topic_170_en_output_all as
(select X.* from Ptn__more____Positive____less____Negative___topic_170_en_output1 X)
union all
(select X.* from Ptn__more____Positive____less____Negative___topic_170_en_output2 X)
;



--
-- name  ="more" + Contextual + "less" + Contextual + topic_171
-- value =more $Contextual ($SEP|$mCoord){1,2} less $Contextual $mTopic
-- output(1)=$6\t#6\tnot $2\t#2
-- output(2)=$6\t#6\tnot $5\t#5
--
create view Ptn__more____Contextual____less____Contextual___topic_171_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type2 as type2,
   X.type5 as type5,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__more____Contextual____less____Contextual___topic_171_en' as patternName
from (
   extract
   Contextual1.typeName as type2,
   Contextual2.typeName as type5,
   mTopic1.typeName as type6,

   pattern
     ('more') (<Contextual1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) ('less') (<Contextual2.concept>) (<mTopic1.concept>) 
   return
     group 7 as concept1_1 and
     group 2 as concept1_2 and
     group 7 as concept2_1 and
     group 6 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Contextual_en Contextual1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      Contextual_en Contextual2, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__more____Contextual____less____Contextual___topic_171_en_output1 as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   X.type2 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more____Contextual____less____Contextual___topic_171_en' as patternName
from Ptn__more____Contextual____less____Contextual___topic_171_en X
consolidate on X.pattern_val;

create view Ptn__more____Contextual____less____Contextual___topic_171_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__more____Contextual____less____Contextual___topic_171_en' as patternName
from Ptn__more____Contextual____less____Contextual___topic_171_en X
consolidate on X.pattern_val;

create view Ptn__more____Contextual____less____Contextual___topic_171_en_output_all as
(select X.* from Ptn__more____Contextual____less____Contextual___topic_171_en_output1 X)
union all
(select X.* from Ptn__more____Contextual____less____Contextual___topic_171_en_output2 X)
;



--
-- name  =3 opinions + topic_172
-- value =($mOpinionNeg|$mOpinionPos|$Contextual) ($SEP|$mCoord){1,2} ($mOpinionNeg|$mOpinionPos|$Contextual) ($SEP|$mCoord){1,2} $mEmpty{0,3} ($mOpinionNeg|$mOpinionPos|$Contextual) $mTopic
-- output(1)=$7\t#7\t$1\t#1
-- output(2)=$7\t#7\t$3\t#3
-- output(3)=$7\t#7\t$6\t#6
--
create view Ptn_3_opinions___topic_172_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept3_1 as concept3_1,
   X.concept3_2 as concept3_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_3_opinions___topic_172_en' as patternName
from (
   extract
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type3,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en3.typeName as type6,
   mTopic1.typeName as type7,

   pattern
     (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) ((<SEP2.concept>|<mCoord2.concept>){1,2}) (<mEmpty1.concept>{0,3}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en3.concept>) (<mTopic1.concept>) 
   return
     group 9 as concept1_1 and
     group 1 as concept1_2 and
     group 9 as concept2_1 and
     group 4 as concept2_2 and
     group 9 as concept3_1 and
     group 8 as concept3_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2, 
      SEP_en SEP2, 
      mCoord_en mCoord2, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en3, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_3_opinions___topic_172_en_output1 as
select
   X.concept1_1 as concept1,
   X.type7 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_3_opinions___topic_172_en' as patternName
from Ptn_3_opinions___topic_172_en X
consolidate on X.pattern_val;

create view Ptn_3_opinions___topic_172_en_output2 as
select
   X.concept2_1 as concept1,
   X.type7 as type1,
   X.concept2_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_3_opinions___topic_172_en' as patternName
from Ptn_3_opinions___topic_172_en X
consolidate on X.pattern_val;

create view Ptn_3_opinions___topic_172_en_output3 as
select
   X.concept3_1 as concept1,
   X.type7 as type1,
   X.concept3_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '3' as outputRank,
   'Ptn_3_opinions___topic_172_en' as patternName
from Ptn_3_opinions___topic_172_en X
consolidate on X.pattern_val;

create view Ptn_3_opinions___topic_172_en_output_all as
(select X.* from Ptn_3_opinions___topic_172_en_output1 X)
union all
(select X.* from Ptn_3_opinions___topic_172_en_output2 X)
union all
(select X.* from Ptn_3_opinions___topic_172_en_output3 X)
;



--
-- name  =2 opinions + topic_173
-- value =($mOpinionNeg|$mOpinionPos|$Contextual) ($SEP|$mCoord){1,2} $mEmpty{0,5} ($mOpinionNeg|$mOpinionPos|$Contextual) ($SEP|$mPrep)? $mTopic
-- output(1)=$6\t#6\t$1\t#1
-- output(2)=$6\t#6\t$4\t#4
--
create view Ptn_2_opinions___topic_173_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_2_opinions___topic_173_en' as patternName
from (
   extract
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type4,
   mTopic1.typeName as type6,

   pattern
     (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mEmpty1.concept>{0,5}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) ((<SEP2.concept>|<mPrep1.concept>)?) (<mTopic1.concept>) 
   return
     group 8 as concept1_1 and
     group 1 as concept1_2 and
     group 8 as concept2_1 and
     group 5 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2, 
      SEP_en SEP2, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_2_opinions___topic_173_en_output1 as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_opinions___topic_173_en' as patternName
from Ptn_2_opinions___topic_173_en X
consolidate on X.pattern_val;

create view Ptn_2_opinions___topic_173_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   X.concept2_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_opinions___topic_173_en' as patternName
from Ptn_2_opinions___topic_173_en X
consolidate on X.pattern_val;

create view Ptn_2_opinions___topic_173_en_output_all as
(select X.* from Ptn_2_opinions___topic_173_en_output1 X)
union all
(select X.* from Ptn_2_opinions___topic_173_en_output2 X)
;



--
-- name  ="get" + topic + Positive + prep topic_174
-- value =get $mDet? $mTopic $mOpinionPos $mPrep $mDet? $mTopic
-- output(1)=$3\t#3\tnot $4\tNegative
--
create view Ptn__get____topic___Positive___prep_topic_174_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__get____topic___Positive___prep_topic_174_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     ('get') (<mDet1.concept>?) (<mTopic1.concept>) (<mOpinionPos1.concept>) (<mPrep1.concept>) (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 3 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__get____topic___Positive___prep_topic_174_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__get____topic___Positive___prep_topic_174_en' as patternName
from Ptn__get____topic___Positive___prep_topic_174_en X
consolidate on X.pattern_val;



--
-- name  ="get" + topic + Positive_175
-- value =get $mDet? $mTopic $mOpinionPos
-- output(1)=$3\t#3\tnot $4\tNegative
--
create view Ptn__get____topic___Positive_175_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__get____topic___Positive_175_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     ('get') (<mDet1.concept>?) (<mTopic1.concept>) (<mOpinionPos1.concept>) 
   return
     group 3 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn__get____topic___Positive_175_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__get____topic___Positive_175_en' as patternName
from Ptn__get____topic___Positive_175_en X
consolidate on X.pattern_val;



--
-- name  =topic/opinion + "comma"_176
-- value =($mTopic|$mOpinion) $SEP
-- output(1)=$1\t#1
--
create view Ptn_topic_opinion____comma__176_en as
select
   X.concept1_1 as concept1_1,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic_opinion____comma__176_en' as patternName
from (
   extract
   PtnMerge_mOpinion_mTopic_en1.typeName as type1,

   pattern
     (<PtnMerge_mOpinion_mTopic_en1.concept>) (<SEP1.concept>) 
   return
     group 1 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_mOpinion_mTopic_en PtnMerge_mOpinion_mTopic_en1, 
      SEP_en SEP1

) X
consolidate on X.pattern_val;



create view Ptn_topic_opinion____comma__176_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic_opinion____comma__176_en' as patternName
from Ptn_topic_opinion____comma__176_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + "more" + topic_177
-- value =$mTopic $mShould @{0,1} more $mTopic $mPrep $mDet? $mTopic
-- output(1)=$1\t#1\t$5 $6 $8\t#5\tneed more\tNegative
--
create view Ptn_topic___desire____more____topic_177_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type1 as type1,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____more____topic_177_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type5,

   pattern
     (<mTopic1.concept>) (<mShould1.concept>) (<Tok1.match>{0,1}) ('more') (<mTopic2.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic3.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 6 as concept1_3 and
     group 8 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mShould_en mShould1, 
      mTopic_en mTopic2, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic3, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____more____topic_177_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
udf.addWordRight(X.concept1_2, udf.addSpanRight(X.concept1_3, X.concept1_4)) as concept2,
   X.type5 as type2,
   'need more' as concept3,
   'Negative' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____more____topic_177_en' as patternName
from Ptn_topic___desire____more____topic_177_en X
consolidate on X.pattern_val;



--
-- name  =topic + "more" + Positive/Contextual_178
-- value =$mTopic $mBe more $mOpinionPos
-- output(1)=$1\t#1\t$4\t#4
--
create view Ptn_topic____more____Positive_Contextual_178_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_topic____more____Positive_Contextual_178_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mOpinionPos1.typeName as type4,

   pattern
     (<mTopic1.concept>) (<mBe1.concept>) ('more') (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_topic____more____Positive_Contextual_178_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____more____Positive_Contextual_178_en' as patternName
from Ptn_topic____more____Positive_Contextual_178_en X
consolidate on X.pattern_val;



--
-- name  =topic + "less" + Negative_179
-- value =$mTopic ($mBe|$mHave|$mSupport){1,5} @{0,1} less $mOpinionNeg
-- output(1)=$1\t#1\tnot $5\tPositive
--
create view Ptn_topic____less____Negative_179_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____less____Negative_179_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){1,5}) (<Tok1.match>{0,1}) ('less') (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mOpinionNeg_en mOpinionNeg1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic____less____Negative_179_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____less____Negative_179_en' as patternName
from Ptn_topic____less____Negative_179_en X
consolidate on X.pattern_val;



--
-- name  =topic + "no" + Positive_180
-- value =$mTopic ($mBe|$mHave){0,2} @{0,1} no $mOpinionPos
-- output(1)=$1\t#1\tnot $5\tNegative
--
create view Ptn_topic____no____Positive_180_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____no____Positive_180_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>){0,2}) (<Tok1.match>{0,1}) ('no') (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic____no____Positive_180_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____no____Positive_180_en' as patternName
from Ptn_topic____no____Positive_180_en X
consolidate on X.pattern_val;





--
-- name  =topic + "in/of/on" + topic + "not" + Contextual_182
-- value =$mTopic $mPrep $mDet{0,1} $mTopic ($mPronoun|$mBe|$mHave){0,2} ($mAdvNeg|$mSupportNeg) $mEmpty{0,4} @{0,1} $Contextual
-- output(1)=$1 $2 $4\t#1\tnot $9\tNegative
--
create view Ptn_topic____in_of_on____topic____not____Contextual_182_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____in_of_on____topic____not____Contextual_182_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mPrep1.concept>) (<mDet1.concept>{0,1}) (<mTopic2.concept>) ((<mPronoun1.concept>|<mBe1.concept>|<mHave1.concept>){0,2}) (<mAdvNeg1.concept>|<mSupportNeg1.concept>) (<mEmpty1.concept>{0,4}) (<Tok1.match>{0,1}) (<Contextual1.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 4 as concept1_3 and
     group 10 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mPronoun_en mPronoun1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty1, 
      Contextual_en Contextual1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic____in_of_on____topic____not____Contextual_182_en_output_all as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_4) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____in_of_on____topic____not____Contextual_182_en' as patternName
from Ptn_topic____in_of_on____topic____not____Contextual_182_en X
consolidate on X.pattern_val;



--
-- name  =topic + "in/of/on" + topic + opinion_183
-- value =$mTopic $mPrep $mDet{0,1} $mTopic ($mBe|$mHave|$mSupport|$mEmpty){0,5} @{0,1} ($mEmpty|$mQuant)? @{0,1} ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1 $2 $4\t#1\t$9\t#9
--
create view Ptn_topic____in_of_on____topic___opinion_183_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type1 as type1,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_topic____in_of_on____topic___opinion_183_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type9,

   pattern
     (<mTopic1.concept>) (<mPrep1.concept>) (<mDet1.concept>{0,1}) (<mTopic2.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>|<mEmpty1.concept>){0,5}) (<Tok1.match>{0,1}) ((<mEmpty2.concept>|<mQuant1.concept>)?) (<Tok2.match>{0,1}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 4 as concept1_3 and
     group 11 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mEmpty_en mEmpty1, 
      mEmpty_en mEmpty2, 
      mQuant_en mQuant1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      Tok Tok1, 
      Tok Tok2

) X
consolidate on X.pattern_val;



create view Ptn_topic____in_of_on____topic___opinion_183_en_output_all as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   X.type1 as type1,
   X.concept1_4 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____in_of_on____topic___opinion_183_en' as patternName
from Ptn_topic____in_of_on____topic___opinion_183_en X
consolidate on X.pattern_val;



--
-- name  =topic + prep + topic + 2 opinions_184
-- value =$mTopic $mTopic ($mBe|$mHave|$mSupport|$mEmpty|$mDet){0,5} ($mOpinionPos|$mOpinionNeg|$Contextual) $mCoord ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1 $2\t#2\t$4\t#4
-- output(2)=$1 $2\t#2\t$6\t#6
--
create view Ptn_topic___prep___topic___2_opinions_184_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.type2 as type2,
   X.type4 as type4,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_topic___prep___topic___2_opinions_184_en' as patternName
from (
   extract
   mTopic2.typeName as type2,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type6,

   pattern
     (<mTopic1.concept>) (<mTopic2.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>|<mEmpty1.concept>|<mDet1.concept>){0,5}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mCoord1.concept>) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 5 as concept1_3 and
     group 1 as concept2_1 and
     group 2 as concept2_2 and
     group 7 as concept2_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mTopic_en mTopic2, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mEmpty_en mEmpty1, 
      mDet_en mDet1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mCoord_en mCoord1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2

) X
consolidate on X.pattern_val;



create view Ptn_topic___prep___topic___2_opinions_184_en_output1 as
select
udf.addSpanRight(X.concept1_1, X.concept1_2) as concept1,
   X.type2 as type1,
   X.concept1_3 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___prep___topic___2_opinions_184_en' as patternName
from Ptn_topic___prep___topic___2_opinions_184_en X
consolidate on X.pattern_val;

create view Ptn_topic___prep___topic___2_opinions_184_en_output2 as
select
udf.addSpanRight(X.concept2_1, X.concept2_2) as concept1,
   X.type2 as type1,
   X.concept2_3 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_topic___prep___topic___2_opinions_184_en' as patternName
from Ptn_topic___prep___topic___2_opinions_184_en X
consolidate on X.pattern_val;

create view Ptn_topic___prep___topic___2_opinions_184_en_output_all as
(select X.* from Ptn_topic___prep___topic___2_opinions_184_en_output1 X)
union all
(select X.* from Ptn_topic___prep___topic___2_opinions_184_en_output2 X)
;



--
-- name  =topic + prep + topic + opinion_185
-- value =$mTopic $mTopic $mEmpty{0,5} ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1 $2\t#2\t$4\t#4
--
create view Ptn_topic___prep___topic___opinion_185_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type2 as type2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_topic___prep___topic___opinion_185_en' as patternName
from (
   extract
   mTopic2.typeName as type2,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,

   pattern
     (<mTopic1.concept>) (<mTopic2.concept>) (<mEmpty1.concept>{0,5}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 4 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mTopic_en mTopic2, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_topic___prep___topic___opinion_185_en_output_all as
select
udf.addSpanRight(X.concept1_1, X.concept1_2) as concept1,
   X.type2 as type1,
   X.concept1_3 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___prep___topic___opinion_185_en' as patternName
from Ptn_topic___prep___topic___opinion_185_en X
consolidate on X.pattern_val;



--
-- name  =topic + opinion + "than"_186
-- value =$mTopic ($mBe|$mHave|$mSupport|$mEmpty|$mDet|$mToo){0,5} @? ($mOpinionNeg|$Contextual) than $Negative
-- output(1)=$1\t#1\tnot $4\tPositive
--
create view Ptn_topic___opinion____than__186_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion____than__186_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>|<mEmpty1.concept>|<mDet1.concept>|<mToo1.concept>){0,5}) (<Tok1.match>?) (<PtnMerge_Contextual_mOpinionNeg_en1.concept>) ('than') (<Negative1.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mEmpty_en mEmpty1, 
      mDet_en mDet1, 
      mToo_en mToo1, 
      PtnMerge_Contextual_mOpinionNeg_en PtnMerge_Contextual_mOpinionNeg_en1, 
      Negative_en Negative1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion____than__186_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion____than__186_en' as patternName
from Ptn_topic___opinion____than__186_en X
consolidate on X.pattern_val;



--
-- name  =topic + opinion + topic_187
-- value =$mTopic $mPrep $mEmpty{0,5} ($mOpinionPos|$mOpinionNeg|$Contextual) $mTopic
-- output(1)=$1 $2 $5\t#1\t$4\t#4
--
create view Ptn_topic___opinion___topic_187_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion___topic_187_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,

   pattern
     (<mTopic1.concept>) (<mPrep1.concept>) (<mEmpty1.concept>{0,5}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 5 as concept1_3 and
     group 4 as concept1_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mPrep_en mPrep1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion___topic_187_en_output_all as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   X.type1 as type1,
   X.concept1_4 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion___topic_187_en' as patternName
from Ptn_topic___opinion___topic_187_en X
consolidate on X.pattern_val;



--
-- name  =topic + opinion + topic_188
-- value =$mTopic $mBe $mEmpty{0,2} ($mOpinionPos|$mOpinionNeg|$Contextual) $mTopic
-- output(1)=$1\t#1\t$4\t#4\t$5\t#5
--
create view Ptn_topic___opinion___topic_188_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type4 as type4,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion___topic_188_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,
   mTopic2.typeName as type5,

   pattern
     (<mTopic1.concept>) (<mBe1.concept>) (<mEmpty1.concept>{0,2}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 5 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion___topic_188_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   X.concept1_3 as concept3,
   X.type5 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion___topic_188_en' as patternName
from Ptn_topic___opinion___topic_188_en X
consolidate on X.pattern_val;



--
-- name  =topic + opinion_189
-- value =$mTopic ($mEmpty|$mToo){0,5} ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$1\t#1\t$3\t#3
--
create view Ptn_topic___opinion_189_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_topic___opinion_189_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type3,

   pattern
     (<mTopic1.concept>) ((<mEmpty1.concept>|<mToo1.concept>){0,5}) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mToo_en mToo1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_topic___opinion_189_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___opinion_189_en' as patternName
from Ptn_topic___opinion_189_en X
consolidate on X.pattern_val;















--
-- name  =opinion + 3 topics_196
-- value =($OpinionNeg|$mOpinionPos|$Contextual) $mEmpty{0,4} $mTopic ($SEP|$mCoord){1,3} $mDet? $mTopic ($SEP|$mCoord){1,3} $mEmpty? $mDet? $mTopic
-- output(1)=$3\t#3\t$1\t#1
-- output(2)=$6\t#6\t$1\t#1
-- output(3)=$10\t#10\t$1\t#1
--
create view Ptn_opinion___3_topics_196_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept3_1 as concept3_1,
   X.concept3_2 as concept3_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn_opinion___3_topics_196_en' as patternName
from (
   extract
   PtnMerge_Contextual_OpinionNeg_mOpinionPos_en1.typeName as type1,
   mTopic1.typeName as type3,
   mTopic2.typeName as type6,
   mTopic3.typeName as type10,

   pattern
     (<PtnMerge_Contextual_OpinionNeg_mOpinionPos_en1.concept>) (<mEmpty1.concept>{0,4}) (<mTopic1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,3}) (<mDet1.concept>?) (<mTopic2.concept>) ((<SEP2.concept>|<mCoord2.concept>){1,3}) (<mEmpty2.concept>?) (<mDet2.concept>?) (<mTopic3.concept>) 
   return
     group 3 as concept1_1 and
     group 1 as concept1_2 and
     group 7 as concept2_1 and
     group 1 as concept2_2 and
     group 12 as concept3_1 and
     group 1 as concept3_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_OpinionNeg_mOpinionPos_en PtnMerge_Contextual_OpinionNeg_mOpinionPos_en1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      SEP_en SEP2, 
      mCoord_en mCoord2, 
      mEmpty_en mEmpty2, 
      mDet_en mDet2, 
      mTopic_en mTopic3

) X
consolidate on X.pattern_val;



create view Ptn_opinion___3_topics_196_en_output1 as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___3_topics_196_en' as patternName
from Ptn_opinion___3_topics_196_en X
consolidate on X.pattern_val;

create view Ptn_opinion___3_topics_196_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   X.concept2_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___3_topics_196_en' as patternName
from Ptn_opinion___3_topics_196_en X
consolidate on X.pattern_val;

create view Ptn_opinion___3_topics_196_en_output3 as
select
   X.concept3_1 as concept1,
   X.type10 as type1,
   X.concept3_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '3' as outputRank,
   'Ptn_opinion___3_topics_196_en' as patternName
from Ptn_opinion___3_topics_196_en X
consolidate on X.pattern_val;

create view Ptn_opinion___3_topics_196_en_output_all as
(select X.* from Ptn_opinion___3_topics_196_en_output1 X)
union all
(select X.* from Ptn_opinion___3_topics_196_en_output2 X)
union all
(select X.* from Ptn_opinion___3_topics_196_en_output3 X)
;



--
-- name  =opinion + topic + topic + "not" + Positive_197
-- value =($mOpinionNeg|$mOpinionPos) $Contextual? $mTopic $mCoord $mDet? $mTopic $mSupportNeg $mEmpty{0,3} @{0,1} $mOpinionPos
-- output(1)=$3\t#3\t$1\t#1
-- output(2)=$6\t#6\tnot $10\tNegative
--
create view Ptn_opinion___topic___topic____not____Positive_197_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic___topic____not____Positive_197_en' as patternName
from (
   extract
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   mTopic1.typeName as type3,
   mTopic2.typeName as type6,

   pattern
     (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) (<Contextual1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) (<mSupportNeg1.concept>) (<mEmpty1.concept>{0,3}) (<Tok1.match>{0,1}) (<mOpinionPos1.concept>) 
   return
     group 3 as concept1_1 and
     group 1 as concept1_2 and
     group 6 as concept2_1 and
     group 10 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      Contextual_en Contextual1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mSupportNeg_en mSupportNeg1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic___topic____not____Positive_197_en_output1 as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic___topic____not____Positive_197_en' as patternName
from Ptn_opinion___topic___topic____not____Positive_197_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___topic____not____Positive_197_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___topic___topic____not____Positive_197_en' as patternName
from Ptn_opinion___topic___topic____not____Positive_197_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___topic____not____Positive_197_en_output_all as
(select X.* from Ptn_opinion___topic___topic____not____Positive_197_en_output1 X)
union all
(select X.* from Ptn_opinion___topic___topic____not____Positive_197_en_output2 X)
;



--
-- name  =opinions + topic + topic + Negative_198
-- value =($mOpinionNeg|$mOpinionPos) $Contextual? $mTopic $mCoord $mDet? $mTopic $mOpinionNeg
-- output(1)=$3\t#3\t$1\t#1
-- output(2)=$6\t#6\t$7\t#7
--
create view Ptn_opinions___topic___topic___Negative_198_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_opinions___topic___topic___Negative_198_en' as patternName
from (
   extract
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   mTopic1.typeName as type3,
   mTopic2.typeName as type6,
   mOpinionNeg1.typeName as type7,

   pattern
     (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) (<Contextual1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) (<mOpinionNeg1.concept>) 
   return
     group 3 as concept1_1 and
     group 1 as concept1_2 and
     group 6 as concept2_1 and
     group 7 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      Contextual_en Contextual1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn_opinions___topic___topic___Negative_198_en_output1 as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinions___topic___topic___Negative_198_en' as patternName
from Ptn_opinions___topic___topic___Negative_198_en X
consolidate on X.pattern_val;

create view Ptn_opinions___topic___topic___Negative_198_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   X.concept2_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinions___topic___topic___Negative_198_en' as patternName
from Ptn_opinions___topic___topic___Negative_198_en X
consolidate on X.pattern_val;

create view Ptn_opinions___topic___topic___Negative_198_en_output_all as
(select X.* from Ptn_opinions___topic___topic___Negative_198_en_output1 X)
union all
(select X.* from Ptn_opinions___topic___topic___Negative_198_en_output2 X)
;



--
-- name  =opinion + topic + topic + opinion_199
-- value =($mOpinionNeg|$mOpinionPos) ($mPrep|$mDet){0,2} $Contextual? $mTopic $mCoord $mDet? $mTopic ($mBe|$mHave|$mSupport){0,3} ($mOpinionNeg|$mOpinionPos|$Uncertain)
-- output(1)=$4\t#4\t$1\t#1
-- output(2)=$7\t#7\t$9\t#9
--
create view Ptn_opinion___topic___topic___opinion_199_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type7 as type7,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic___topic___opinion_199_en' as patternName
from (
   extract
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   mTopic1.typeName as type4,
   mTopic2.typeName as type7,
   PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1.typeName as type9,

   pattern
     (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) ((<mPrep1.concept>|<mDet1.concept>){0,2}) (<Contextual1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>) (<mDet2.concept>?) (<mTopic2.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>){0,3}) (<PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 5 as concept1_1 and
     group 1 as concept1_2 and
     group 8 as concept2_1 and
     group 11 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      Contextual_en Contextual1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mTopic_en mTopic2, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic___topic___opinion_199_en_output1 as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic___topic___opinion_199_en' as patternName
from Ptn_opinion___topic___topic___opinion_199_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___topic___opinion_199_en_output2 as
select
   X.concept2_1 as concept1,
   X.type7 as type1,
   X.concept2_2 as concept2,
   X.type9 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___topic___topic___opinion_199_en' as patternName
from Ptn_opinion___topic___topic___opinion_199_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___topic___opinion_199_en_output_all as
(select X.* from Ptn_opinion___topic___topic___opinion_199_en_output1 X)
union all
(select X.* from Ptn_opinion___topic___topic___opinion_199_en_output2 X)
;



--
-- name  =opinion + 2 topics_200
-- value =($mOpinionNeg|$mOpinionPos) $mEmpty{0,4} @{0,1} $Contextual? $mTopic $mCoord ($mPrep|$mDet){0,2} $mTopic
-- output(1)=$5\t#5\t$1\t#1
-- output(2)=$8\t#8\t$1\t#1
--
create view Ptn_opinion___2_topics_200_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type5 as type5,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_opinion___2_topics_200_en' as patternName
from (
   extract
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   mTopic1.typeName as type5,
   mTopic2.typeName as type8,

   pattern
     (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) (<mEmpty1.concept>{0,4}) (<Tok1.match>{0,1}) (<Contextual1.concept>?) (<mTopic1.concept>) (<mCoord1.concept>) ((<mPrep1.concept>|<mDet1.concept>){0,2}) (<mTopic2.concept>) 
   return
     group 5 as concept1_1 and
     group 1 as concept1_2 and
     group 9 as concept2_1 and
     group 1 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      mEmpty_en mEmpty1, 
      Contextual_en Contextual1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___2_topics_200_en_output1 as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___2_topics_200_en' as patternName
from Ptn_opinion___2_topics_200_en X
consolidate on X.pattern_val;

create view Ptn_opinion___2_topics_200_en_output2 as
select
   X.concept2_1 as concept1,
   X.type8 as type1,
   X.concept2_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___2_topics_200_en' as patternName
from Ptn_opinion___2_topics_200_en X
consolidate on X.pattern_val;

create view Ptn_opinion___2_topics_200_en_output_all as
(select X.* from Ptn_opinion___2_topics_200_en_output1 X)
union all
(select X.* from Ptn_opinion___2_topics_200_en_output2 X)
;







--
-- name  =opinion + 3 topics_203
-- value =($Negative|$Positive) @{0,1} $mTopic @{1,2} $mDet? $mTopic ($SEP|$mCoord){1,3} $mDet? $mTopic
-- output(1)=$3\t#3\t$1\t#1
-- output(2)=$6\t#6\t$1\t#1
-- output(3)=$9\t#9\t$1\t#1
--
create view Ptn_opinion___3_topics_203_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept3_1 as concept3_1,
   X.concept3_2 as concept3_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_opinion___3_topics_203_en' as patternName
from (
   extract
   PtnMerge_Negative_Positive_en1.typeName as type1,
   mTopic1.typeName as type3,
   mTopic2.typeName as type6,
   mTopic3.typeName as type9,

   pattern
     (<PtnMerge_Negative_Positive_en1.concept>) (<Tok1.match>{0,1}) (<mTopic1.concept>) (<Tok2.match>{1,2}) (<mDet1.concept>?) (<mTopic2.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,3}) (<mDet2.concept>?) (<mTopic3.concept>) 
   return
     group 3 as concept1_1 and
     group 1 as concept1_2 and
     group 6 as concept2_1 and
     group 1 as concept2_2 and
     group 10 as concept3_1 and
     group 1 as concept3_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Negative_Positive_en PtnMerge_Negative_Positive_en1, 
      mTopic_en mTopic1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mDet_en mDet2, 
      mTopic_en mTopic3, 
      Tok Tok1, 
      Tok Tok2

) X
consolidate on X.pattern_val;



create view Ptn_opinion___3_topics_203_en_output1 as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___3_topics_203_en' as patternName
from Ptn_opinion___3_topics_203_en X
consolidate on X.pattern_val;

create view Ptn_opinion___3_topics_203_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   X.concept2_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___3_topics_203_en' as patternName
from Ptn_opinion___3_topics_203_en X
consolidate on X.pattern_val;

create view Ptn_opinion___3_topics_203_en_output3 as
select
   X.concept3_1 as concept1,
   X.type9 as type1,
   X.concept3_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '3' as outputRank,
   'Ptn_opinion___3_topics_203_en' as patternName
from Ptn_opinion___3_topics_203_en X
consolidate on X.pattern_val;

create view Ptn_opinion___3_topics_203_en_output_all as
(select X.* from Ptn_opinion___3_topics_203_en_output1 X)
union all
(select X.* from Ptn_opinion___3_topics_203_en_output2 X)
union all
(select X.* from Ptn_opinion___3_topics_203_en_output3 X)
;





--
-- name  =Uncertain + topic + opinion_205
-- value =$Uncertain ($mDet|$mPrep|$mEmpty){0,3} ($mOpinionNeg|$mOpinionPos|$Uncertain) $mTopic
-- output(1)=$4\t#4\t$3\t#3
--
create view Ptn_Uncertain___topic___opinion_205_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_Uncertain___topic___opinion_205_en' as patternName
from (
   extract
   PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1.typeName as type3,
   mTopic1.typeName as type4,

   pattern
     (<Uncertain1.concept>) ((<mDet1.concept>|<mPrep1.concept>|<mEmpty1.concept>){0,3}) (<PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1.concept>) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Uncertain_en Uncertain1, 
      mDet_en mDet1, 
      mPrep_en mPrep1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_Uncertain___topic___opinion_205_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Uncertain___topic___opinion_205_en' as patternName
from Ptn_Uncertain___topic___opinion_205_en X
consolidate on X.pattern_val;



--
-- name  =Uncertain + "but" topic_206
-- value =(nothing|$Uncertain) but $mDet? $mTopic
-- output(1)=$4\t#4
--
create view Ptn_Uncertain____but__topic_206_en as
select
   X.concept1_1 as concept1_1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_Uncertain____but__topic_206_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     ('nothing'|<Uncertain1.concept>) ('but') (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Uncertain_en Uncertain1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_Uncertain____but__topic_206_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Uncertain____but__topic_206_en' as patternName
from Ptn_Uncertain____but__topic_206_en X
consolidate on X.pattern_val;



--
-- name  =Uncertain + topic_207
-- value =$Uncertain ($mDet|$mPrep){0,2} @{0,1} $mTopic
-- output(1)=$4\t#4\t$1\t#1
--
create view Ptn_Uncertain___topic_207_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_Uncertain___topic_207_en' as patternName
from (
   extract
   Uncertain1.typeName as type1,
   mTopic1.typeName as type4,

   pattern
     (<Uncertain1.concept>) ((<mDet1.concept>|<mPrep1.concept>){0,2}) (<Tok1.match>{0,1}) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 1 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Uncertain_en Uncertain1, 
      mDet_en mDet1, 
      mPrep_en mPrep1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_Uncertain___topic_207_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Uncertain___topic_207_en' as patternName
from Ptn_Uncertain___topic_207_en X
consolidate on X.pattern_val;



--
-- name  =topic + Uncertain_208
-- value =$mTopic @{0,1} $mPronoun{0,3} $Uncertain
-- output(1)=$1\t#1\t$4\t#4
--
create view Ptn_topic___Uncertain_208_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_topic___Uncertain_208_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   Uncertain1.typeName as type4,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,1}) (<mPronoun1.concept>{0,3}) (<Uncertain1.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mPronoun_en mPronoun1, 
      Uncertain_en Uncertain1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___Uncertain_208_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___Uncertain_208_en' as patternName
from Ptn_topic___Uncertain_208_en X
consolidate on X.pattern_val;



--
-- name  ="more" + Positive + 2 topics_209
-- value =more $mOpinionPos $mTopic $mCoord $mTopic
-- output(1)=$3\t#3\tnot $2\tNegative
-- output(2)=$5\t#5\tnot $2\tNegative
--
create view Ptn__more____Positive___2_topics_209_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type3 as type3,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__more____Positive___2_topics_209_en' as patternName
from (
   extract
   mTopic1.typeName as type3,
   mTopic2.typeName as type5,

   pattern
     ('more') (<mOpinionPos1.concept>) (<mTopic1.concept>) (<mCoord1.concept>) (<mTopic2.concept>) 
   return
     group 3 as concept1_1 and
     group 2 as concept1_2 and
     group 5 as concept2_1 and
     group 2 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__more____Positive___2_topics_209_en_output1 as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more____Positive___2_topics_209_en' as patternName
from Ptn__more____Positive___2_topics_209_en X
consolidate on X.pattern_val;

create view Ptn__more____Positive___2_topics_209_en_output2 as
select
   X.concept2_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__more____Positive___2_topics_209_en' as patternName
from Ptn__more____Positive___2_topics_209_en X
consolidate on X.pattern_val;

create view Ptn__more____Positive___2_topics_209_en_output_all as
(select X.* from Ptn__more____Positive___2_topics_209_en_output1 X)
union all
(select X.* from Ptn__more____Positive___2_topics_209_en_output2 X)
;



--
-- name  ="less" + Negative + topic + wish_210
-- value =less $mOpinionNeg $mTopic ((would be $Positive)|$Negative)
-- output(1)=$3\t#3\t$2\t#2
--
create view Ptn__less____Negative___topic___wish_210_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type2 as type2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__less____Negative___topic___wish_210_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type2,
   mTopic1.typeName as type3,

   pattern
     ('less') (<mOpinionNeg1.concept>) (<mTopic1.concept>) (('would be $Positive')|<Negative1.concept>) 
   return
     group 3 as concept1_1 and
     group 2 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mTopic_en mTopic1, 
      Negative_en Negative1

) X
consolidate on X.pattern_val;



create view Ptn__less____Negative___topic___wish_210_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type2 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__less____Negative___topic___wish_210_en' as patternName
from Ptn__less____Negative___topic___wish_210_en X
consolidate on X.pattern_val;



--
-- name  ="less" + Negative + topic_211
-- value =less $NegativeFunctioning $mTopic
-- output(1)=$3\t#3\tnot $2\tPositive
--
create view Ptn__less____Negative___topic_211_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__less____Negative___topic_211_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     ('less') (<NegativeFunctioning1.concept>) (<mTopic1.concept>) 
   return
     group 3 as concept1_1 and
     group 2 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      NegativeFunctioning_en NegativeFunctioning1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__less____Negative___topic_211_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__less____Negative___topic_211_en' as patternName
from Ptn__less____Negative___topic_211_en X
consolidate on X.pattern_val;







--
-- name  ="never" + 2 Positive + topic_214
-- value =$mAdvNeg $mEmpty{0,4} more $mOpinionPos $mCoord more? $mOpinionPos $mTopic
-- output(1)=$8\t#8\t$4\t#4
-- output(2)=$8\t#8\t$7\t#7
--
create view Ptn__never____2_Positive___topic_214_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type4 as type4,
   X.type7 as type7,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn__never____2_Positive___topic_214_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type4,
   mOpinionPos2.typeName as type7,
   mTopic1.typeName as type8,

   pattern
     (<mAdvNeg1.concept>) (<mEmpty1.concept>{0,4}) ('more') (<mOpinionPos1.concept>) (<mCoord1.concept>) ('more'?) (<mOpinionPos2.concept>) (<mTopic1.concept>) 
   return
     group 8 as concept1_1 and
     group 4 as concept1_2 and
     group 8 as concept2_1 and
     group 7 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      mCoord_en mCoord1, 
      mOpinionPos_en mOpinionPos2, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__never____2_Positive___topic_214_en_output1 as
select
   X.concept1_1 as concept1,
   X.type8 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__never____2_Positive___topic_214_en' as patternName
from Ptn__never____2_Positive___topic_214_en X
consolidate on X.pattern_val;

create view Ptn__never____2_Positive___topic_214_en_output2 as
select
   X.concept2_1 as concept1,
   X.type8 as type1,
   X.concept2_2 as concept2,
   X.type7 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__never____2_Positive___topic_214_en' as patternName
from Ptn__never____2_Positive___topic_214_en X
consolidate on X.pattern_val;

create view Ptn__never____2_Positive___topic_214_en_output_all as
(select X.* from Ptn__never____2_Positive___topic_214_en_output1 X)
union all
(select X.* from Ptn__never____2_Positive___topic_214_en_output2 X)
;



--
-- name  ="never" + Positive + topic_215
-- value =$mAdvNeg $mEmpty{0,4} more $mOpinionPos $mTopic
-- output(1)=$5\t#5\t$4\t#4
--
create view Ptn__never____Positive___topic_215_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__never____Positive___topic_215_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type4,
   mTopic1.typeName as type5,

   pattern
     (<mAdvNeg1.concept>) (<mEmpty1.concept>{0,4}) ('more') (<mOpinionPos1.concept>) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__never____Positive___topic_215_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__never____Positive___topic_215_en' as patternName
from Ptn__never____Positive___topic_215_en X
consolidate on X.pattern_val;



--
-- name  ="more" + Positive + Positive + topic_216
-- value =more $mOpinionPos $mCoord{1,2} $mEmpty{0,3} more? $mOpinionPos $mPrep{0,2} $mDet{0,2} $mTopic
-- output(1)=$9\t#9\tnot $2\tNegative
-- output(2)=$9\t#9\tnot $6\tNegative
--
create view Ptn__more____Positive___Positive___topic_216_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn__more____Positive___Positive___topic_216_en' as patternName
from (
   extract
   mTopic1.typeName as type9,

   pattern
     ('more') (<mOpinionPos1.concept>) (<mCoord1.concept>{1,2}) (<mEmpty1.concept>{0,3}) ('more'?) (<mOpinionPos2.concept>) (<mPrep1.concept>{0,2}) (<mDet1.concept>{0,2}) (<mTopic1.concept>) 
   return
     group 9 as concept1_1 and
     group 2 as concept1_2 and
     group 9 as concept2_1 and
     group 6 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos2, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__more____Positive___Positive___topic_216_en_output1 as
select
   X.concept1_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more____Positive___Positive___topic_216_en' as patternName
from Ptn__more____Positive___Positive___topic_216_en X
consolidate on X.pattern_val;

create view Ptn__more____Positive___Positive___topic_216_en_output2 as
select
   X.concept2_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__more____Positive___Positive___topic_216_en' as patternName
from Ptn__more____Positive___Positive___topic_216_en X
consolidate on X.pattern_val;

create view Ptn__more____Positive___Positive___topic_216_en_output_all as
(select X.* from Ptn__more____Positive___Positive___topic_216_en_output1 X)
union all
(select X.* from Ptn__more____Positive___Positive___topic_216_en_output2 X)
;



--
-- name  ="more" + Positive + topic_217
-- value =more ($mOpinionPos|$Contextual) $mTopic
-- output(1)=$3\t#3\t$1 $2\tContextual
--
create view Ptn__more____Positive___topic_217_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__more____Positive___topic_217_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     ('more') (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mTopic1.concept>) 
   return
     group 3 as concept1_1 and
     group 1 as concept1_2 and
     group 2 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__more____Positive___topic_217_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
udf.addSpanRight(X.concept1_2, X.concept1_3) as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more____Positive___topic_217_en' as patternName
from Ptn__more____Positive___topic_217_en X
consolidate on X.pattern_val;



--
-- name  =opinion + topic + topic_218
-- value =($Negative|$Positive) @{0,1} $mPrep $mDet? $mTopic ($mBe|$mHave|$mEmpty){1,3} $mTopic
-- output(1)=$7\t#7\t$1\t#1
-- output(2)=$5\t#5
--
create view Ptn_opinion___topic___topic_218_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.type1 as type1,
   X.type5 as type5,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic___topic_218_en' as patternName
from (
   extract
   PtnMerge_Negative_Positive_en1.typeName as type1,
   mTopic1.typeName as type5,
   mTopic2.typeName as type7,

   pattern
     (<PtnMerge_Negative_Positive_en1.concept>) (<Tok1.match>{0,1}) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mEmpty1.concept>){1,3}) (<mTopic2.concept>) 
   return
     group 8 as concept1_1 and
     group 1 as concept1_2 and
     group 5 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Negative_Positive_en PtnMerge_Negative_Positive_en1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic___topic_218_en_output1 as
select
   X.concept1_1 as concept1,
   X.type7 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic___topic_218_en' as patternName
from Ptn_opinion___topic___topic_218_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___topic_218_en_output2 as
select
   X.concept2_1 as concept1,
   X.type5 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___topic___topic_218_en' as patternName
from Ptn_opinion___topic___topic_218_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___topic_218_en_output_all as
(select X.* from Ptn_opinion___topic___topic_218_en_output1 X)
union all
(select X.* from Ptn_opinion___topic___topic_218_en_output2 X)
;



--
-- name  =opinion + topic + opinion + topic_219
-- value =$mOpinion (with|being)? @{0,1} $mTopic $mCoord ($mOpinionPos|$mOpinionNeg|$Contextual) $mTopic
-- output(1)=$4\t#4\t$1\t#1
-- output(2)=$7\t#7\t$6\t#6
--
create view Ptn_opinion___topic___opinion___topic_219_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type6 as type6,
   X.type7 as type7,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic___opinion___topic_219_en' as patternName
from (
   extract
   mOpinion1.typeName as type1,
   mTopic1.typeName as type4,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type6,
   mTopic2.typeName as type7,

   pattern
     (<mOpinion1.concept>) (('with'|'being')?) (<Tok1.match>{0,1}) (<mTopic1.concept>) (<mCoord1.concept>) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mTopic2.concept>) 
   return
     group 5 as concept1_1 and
     group 1 as concept1_2 and
     group 8 as concept2_1 and
     group 7 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinion_en mOpinion1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic___opinion___topic_219_en_output1 as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic___opinion___topic_219_en' as patternName
from Ptn_opinion___topic___opinion___topic_219_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___opinion___topic_219_en_output2 as
select
   X.concept2_1 as concept1,
   X.type7 as type1,
   X.concept2_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___topic___opinion___topic_219_en' as patternName
from Ptn_opinion___topic___opinion___topic_219_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___opinion___topic_219_en_output_all as
(select X.* from Ptn_opinion___topic___opinion___topic_219_en_output1 X)
union all
(select X.* from Ptn_opinion___topic___opinion___topic_219_en_output2 X)
;



--
-- name  =opinion + 2 topics_220
-- value =$mOpinion @{0,1} $mTopic $mCoord $mEmpty{0,3} $mTopic
-- output(1)=$3\t#3\t$1\t#1
-- output(2)=$6\t#6\t$1\t#1
--
create view Ptn_opinion___2_topics_220_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_opinion___2_topics_220_en' as patternName
from (
   extract
   mOpinion1.typeName as type1,
   mTopic1.typeName as type3,
   mTopic2.typeName as type6,

   pattern
     (<mOpinion1.concept>) (<Tok1.match>{0,1}) (<mTopic1.concept>) (<mCoord1.concept>) (<mEmpty1.concept>{0,3}) (<mTopic2.concept>) 
   return
     group 3 as concept1_1 and
     group 1 as concept1_2 and
     group 6 as concept2_1 and
     group 1 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinion_en mOpinion1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___2_topics_220_en_output1 as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___2_topics_220_en' as patternName
from Ptn_opinion___2_topics_220_en X
consolidate on X.pattern_val;

create view Ptn_opinion___2_topics_220_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   X.concept2_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___2_topics_220_en' as patternName
from Ptn_opinion___2_topics_220_en X
consolidate on X.pattern_val;

create view Ptn_opinion___2_topics_220_en_output_all as
(select X.* from Ptn_opinion___2_topics_220_en_output1 X)
union all
(select X.* from Ptn_opinion___2_topics_220_en_output2 X)
;



--
-- name  =opinion + topic + "are" + topic_221
-- value =($mOpinionPos|$mOpinionNeg|$Uncertain) $mTopic ($mBe|$mHave) ($mBe|$mHave|$mEmpty){0,3} @{0,1} $mTopic
-- output(1)=$2\t#2
-- output(2)=$6\t#6\t$1\t#1
--
create view Ptn_opinion___topic____are____topic_221_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type2 as type2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic____are____topic_221_en' as patternName
from (
   extract
   PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   mTopic1.typeName as type2,
   mTopic2.typeName as type6,

   pattern
     (<PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1.concept>) (<mTopic1.concept>) (<mBe1.concept>|<mHave1.concept>) ((<mBe2.concept>|<mHave2.concept>|<mEmpty1.concept>){0,3}) (<Tok1.match>{0,1}) (<mTopic2.concept>) 
   return
     group 2 as concept1_1 and
     group 7 as concept2_1 and
     group 1 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1, 
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mBe_en mBe2, 
      mHave_en mHave2, 
      mEmpty_en mEmpty1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic____are____topic_221_en_output1 as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic____are____topic_221_en' as patternName
from Ptn_opinion___topic____are____topic_221_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic____are____topic_221_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   X.concept2_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___topic____are____topic_221_en' as patternName
from Ptn_opinion___topic____are____topic_221_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic____are____topic_221_en_output_all as
(select X.* from Ptn_opinion___topic____are____topic_221_en_output1 X)
union all
(select X.* from Ptn_opinion___topic____are____topic_221_en_output2 X)
;



--
-- name  ="nothing" + "but" + opinion_222
-- value =(nothing|$Uncertain) but @{0,1} ($mOpinionPos|$mOpinionNeg) @{0,1} $mTopic
-- output(1)=$6\t#6\t$4\t#4
--
create view Ptn__nothing_____but____opinion_222_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__nothing_____but____opinion_222_en' as patternName
from (
   extract
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type4,
   mTopic1.typeName as type6,

   pattern
     ('nothing'|<Uncertain1.concept>) ('but') (<Tok1.match>{0,1}) (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) (<Tok2.match>{0,1}) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Uncertain_en Uncertain1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      mTopic_en mTopic1, 
      Tok Tok1, 
      Tok Tok2

) X
consolidate on X.pattern_val;



create view Ptn__nothing_____but____opinion_222_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__nothing_____but____opinion_222_en' as patternName
from Ptn__nothing_____but____opinion_222_en X
consolidate on X.pattern_val;



--
-- name  =opinion + topic + "with" + topic_223
-- value =$mOpinionPos $mDet? $mOpinionPos @? $mTopic $mPrep{0,1} $mDet? $mTopic
-- output(1)=$5\t#5\t$1\t#1
-- output(2)=$8\t#8\t$1\t#1
--
create view Ptn_opinion___topic____with____topic_223_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type5 as type5,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic____with____topic_223_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type1,
   mTopic1.typeName as type5,
   mTopic2.typeName as type8,

   pattern
     (<mOpinionPos1.concept>) (<mDet1.concept>?) (<mOpinionPos2.concept>) (<Tok1.match>?) (<mTopic1.concept>) (<mPrep1.concept>{0,1}) (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 5 as concept1_1 and
     group 1 as concept1_2 and
     group 8 as concept2_1 and
     group 1 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mDet_en mDet1, 
      mOpinionPos_en mOpinionPos2, 
      mTopic_en mTopic1, 
      mPrep_en mPrep1, 
      mDet_en mDet2, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic____with____topic_223_en_output1 as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic____with____topic_223_en' as patternName
from Ptn_opinion___topic____with____topic_223_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic____with____topic_223_en_output2 as
select
   X.concept2_1 as concept1,
   X.type8 as type1,
   X.concept2_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___topic____with____topic_223_en' as patternName
from Ptn_opinion___topic____with____topic_223_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic____with____topic_223_en_output_all as
(select X.* from Ptn_opinion___topic____with____topic_223_en_output1 X)
union all
(select X.* from Ptn_opinion___topic____with____topic_223_en_output2 X)
;



--
-- name  =opinion + "and" + topic + opinion_224
-- value =($mOpinionPos|$mOpinionNeg) $mCoord $mDet? $mTopic ($mBe|$mEmpty){1,3} ($mOpinionPos|$mOpinionNeg)
-- output(1)=$1\t#1
-- output(2)=$4\t#4\t$6\t#6
--
create view Ptn_opinion____and____topic___opinion_224_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_opinion____and____topic___opinion_224_en' as patternName
from (
   extract
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   mTopic1.typeName as type4,
   PtnMerge_mOpinionNeg_mOpinionPos_en2.typeName as type6,

   pattern
     (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) (<mCoord1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) ((<mBe1.concept>|<mEmpty1.concept>){1,3}) (<PtnMerge_mOpinionNeg_mOpinionPos_en2.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept2_1 and
     group 7 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      mCoord_en mCoord1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mEmpty_en mEmpty1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en2

) X
consolidate on X.pattern_val;



create view Ptn_opinion____and____topic___opinion_224_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion____and____topic___opinion_224_en' as patternName
from Ptn_opinion____and____topic___opinion_224_en X
consolidate on X.pattern_val;

create view Ptn_opinion____and____topic___opinion_224_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   X.type6 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion____and____topic___opinion_224_en' as patternName
from Ptn_opinion____and____topic___opinion_224_en X
consolidate on X.pattern_val;

create view Ptn_opinion____and____topic___opinion_224_en_output_all as
(select X.* from Ptn_opinion____and____topic___opinion_224_en_output1 X)
union all
(select X.* from Ptn_opinion____and____topic___opinion_224_en_output2 X)
;



--
-- name  =Positive + "with" + Negative + topic_225
-- value =$mOpinionPos $mPrep $mDet? $mOpinionNeg $mTopic
-- output(1)=$5\t#5\tnot $4\tPositive
--
create view Ptn_Positive____with____Negative___topic_225_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_Positive____with____Negative___topic_225_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mOpinionPos1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mOpinionNeg1.concept>) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mOpinionNeg_en mOpinionNeg1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_Positive____with____Negative___topic_225_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Positive____with____Negative___topic_225_en' as patternName
from Ptn_Positive____with____Negative___topic_225_en X
consolidate on X.pattern_val;



--
-- name  =opinion + "and/with" + opinion + topic_226
-- value =($mOpinionPos|$mOpinionNeg|$Uncertain) with $mDet? ($mOpinionPos|$mOpinionNeg) $mTopic
-- output(1)=$1\t#1
-- output(2)=$5\t#5\t$4\t#4
--
create view Ptn_opinion____and_with____opinion___topic_226_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type4 as type4,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_opinion____and_with____opinion___topic_226_en' as patternName
from (
   extract
   PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type4,
   mTopic1.typeName as type5,

   pattern
     (<PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1.concept>) ('with') (<mDet1.concept>?) (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) (<mTopic1.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept2_1 and
     group 4 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en PtnMerge_Uncertain_mOpinionNeg_mOpinionPos_en1, 
      mDet_en mDet1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_opinion____and_with____opinion___topic_226_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion____and_with____opinion___topic_226_en' as patternName
from Ptn_opinion____and_with____opinion___topic_226_en X
consolidate on X.pattern_val;

create view Ptn_opinion____and_with____opinion___topic_226_en_output2 as
select
   X.concept2_1 as concept1,
   X.type5 as type1,
   X.concept2_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion____and_with____opinion___topic_226_en' as patternName
from Ptn_opinion____and_with____opinion___topic_226_en X
consolidate on X.pattern_val;

create view Ptn_opinion____and_with____opinion___topic_226_en_output_all as
(select X.* from Ptn_opinion____and_with____opinion___topic_226_en_output1 X)
union all
(select X.* from Ptn_opinion____and_with____opinion___topic_226_en_output2 X)
;



--
-- name  =2 Negative + topic_227
-- value =$Negative $NegativeFunctioning $mTopic
-- output(1)=$3\t#3\t$2\t#2
--
create view Ptn_2_Negative___topic_227_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type2 as type2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_2_Negative___topic_227_en' as patternName
from (
   extract
   NegativeFunctioning1.typeName as type2,
   mTopic1.typeName as type3,

   pattern
     (<Negative1.concept>) (<NegativeFunctioning1.concept>) (<mTopic1.concept>) 
   return
     group 3 as concept1_1 and
     group 2 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      NegativeFunctioning_en NegativeFunctioning1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_2_Negative___topic_227_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type2 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_Negative___topic_227_en' as patternName
from Ptn_2_Negative___topic_227_en X
consolidate on X.pattern_val;



--
-- name  =2 opinions + topic + prep + topic_228
-- value =($mOpinionPos|$mOpinionNeg|$Contextual) ($mOpinionPos|$mOpinionNeg|$Contextual) $mTopic $mPrep $mDet? $mTopic
-- output(1)=$3 $4 $6\t#3\t$1\t#1
-- output(2)=$3 $4 $6\t#3\t$2\t#2
--
create view Ptn_2_opinions___topic___prep___topic_228_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.concept1_4 as concept1_4,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.concept2_3 as concept2_3,
   X.concept2_4 as concept2_4,
   X.type1 as type1,
   X.type2 as type2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_2_opinions___topic___prep___topic_228_en' as patternName
from (
   extract
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type2,
   mTopic1.typeName as type3,

   pattern
     (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) (<mTopic1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 3 as concept1_1 and
     group 4 as concept1_2 and
     group 6 as concept1_3 and
     group 1 as concept1_4 and
     group 3 as concept2_1 and
     group 4 as concept2_2 and
     group 6 as concept2_3 and
     group 2 as concept2_4 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2, 
      mTopic_en mTopic1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_2_opinions___topic___prep___topic_228_en_output1 as
select
udf.addWordRight(X.concept1_1, udf.addSpanRight(X.concept1_2, X.concept1_3)) as concept1,
   X.type3 as type1,
   X.concept1_4 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_opinions___topic___prep___topic_228_en' as patternName
from Ptn_2_opinions___topic___prep___topic_228_en X
consolidate on X.pattern_val;

create view Ptn_2_opinions___topic___prep___topic_228_en_output2 as
select
udf.addWordRight(X.concept2_1, udf.addSpanRight(X.concept2_2, X.concept2_3)) as concept1,
   X.type3 as type1,
   X.concept2_4 as concept2,
   X.type2 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_opinions___topic___prep___topic_228_en' as patternName
from Ptn_2_opinions___topic___prep___topic_228_en X
consolidate on X.pattern_val;

create view Ptn_2_opinions___topic___prep___topic_228_en_output_all as
(select X.* from Ptn_2_opinions___topic___prep___topic_228_en_output1 X)
union all
(select X.* from Ptn_2_opinions___topic___prep___topic_228_en_output2 X)
;



--
-- name  =2 opinions + topic_229
-- value =($mOpinionPos|$mOpinionNeg|$Contextual) ($mOpinionPos|$mOpinionNeg|$Contextual) $mTopic
-- output(1)=$3\t#3\t$1\t#1
-- output(2)=$3\t#3\t$2\t#2
--
create view Ptn_2_opinions___topic_229_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type2 as type2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_2_opinions___topic_229_en' as patternName
from (
   extract
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type2,
   mTopic1.typeName as type3,

   pattern
     (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) (<mTopic1.concept>) 
   return
     group 3 as concept1_1 and
     group 1 as concept1_2 and
     group 3 as concept2_1 and
     group 2 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_2_opinions___topic_229_en_output1 as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_2_opinions___topic_229_en' as patternName
from Ptn_2_opinions___topic_229_en X
consolidate on X.pattern_val;

create view Ptn_2_opinions___topic_229_en_output2 as
select
   X.concept2_1 as concept1,
   X.type3 as type1,
   X.concept2_2 as concept2,
   X.type2 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_2_opinions___topic_229_en' as patternName
from Ptn_2_opinions___topic_229_en X
consolidate on X.pattern_val;

create view Ptn_2_opinions___topic_229_en_output_all as
(select X.* from Ptn_2_opinions___topic_229_en_output1 X)
union all
(select X.* from Ptn_2_opinions___topic_229_en_output2 X)
;



--
-- name  =opinion + topic + opinion + topic_230
-- value =($mOpinionPos|$mOpinionNeg|$Contextual) $mTopic ($mOpinionPos|$mOpinionNeg|$Contextual) $mTopic
-- output(1)=$2\t#2\t$1\t#1
-- output(2)=$4\t#4\t$3\t#3
--
create view Ptn_opinion___topic___opinion___topic_230_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type2 as type2,
   X.type3 as type3,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic___opinion___topic_230_en' as patternName
from (
   extract
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type1,
   mTopic1.typeName as type2,
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.typeName as type3,
   mTopic2.typeName as type4,

   pattern
     (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) (<mTopic1.concept>) (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2.concept>) (<mTopic2.concept>) 
   return
     group 2 as concept1_1 and
     group 1 as concept1_2 and
     group 4 as concept2_1 and
     group 3 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1, 
      mTopic_en mTopic1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic___opinion___topic_230_en_output1 as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic___opinion___topic_230_en' as patternName
from Ptn_opinion___topic___opinion___topic_230_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___opinion___topic_230_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___topic___opinion___topic_230_en' as patternName
from Ptn_opinion___topic___opinion___topic_230_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic___opinion___topic_230_en_output_all as
(select X.* from Ptn_opinion___topic___opinion___topic_230_en_output1 X)
union all
(select X.* from Ptn_opinion___topic___opinion___topic_230_en_output2 X)
;



--
-- name  =Negative + topic + Neg/Contextual_231
-- value =$mOpinionNeg $mTopic ($mBe|$mEmpty){0,3} ($Contextual|$Negative)
-- output(1)=$2\t#2\tnot $1\tPositive
--
create view Ptn_Negative___topic___Neg_Contextual_231_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type2 as type2,
   X.pattern_val as pattern_val,
   'Ptn_Negative___topic___Neg_Contextual_231_en' as patternName
from (
   extract
   mTopic1.typeName as type2,

   pattern
     (<mOpinionNeg1.concept>) (<mTopic1.concept>) ((<mBe1.concept>|<mEmpty1.concept>){0,3}) (<Contextual1.concept>|<Negative1.concept>) 
   return
     group 2 as concept1_1 and
     group 1 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mEmpty_en mEmpty1, 
      Contextual_en Contextual1, 
      Negative_en Negative1

) X
consolidate on X.pattern_val;



create view Ptn_Negative___topic___Neg_Contextual_231_en_output_all as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___topic___Neg_Contextual_231_en' as patternName
from Ptn_Negative___topic___Neg_Contextual_231_en X
consolidate on X.pattern_val;



--
-- name  =Negative + Negative + topic_232
-- value =$mOpinionNeg ($mBe|$mPrep) @{0,1} $mOpinionNeg $mTopic
-- output(1)=$5\t#5\t$4\t#4
--
create view Ptn_Negative___Negative___topic_232_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_Negative___Negative___topic_232_en' as patternName
from (
   extract
   mOpinionNeg2.typeName as type4,
   mTopic1.typeName as type5,

   pattern
     (<mOpinionNeg1.concept>) (<mBe1.concept>|<mPrep1.concept>) (<Tok1.match>{0,1}) (<mOpinionNeg2.concept>) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mBe_en mBe1, 
      mPrep_en mPrep1, 
      mOpinionNeg_en mOpinionNeg2, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_Negative___Negative___topic_232_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   X.concept1_2 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___Negative___topic_232_en' as patternName
from Ptn_Negative___Negative___topic_232_en X
consolidate on X.pattern_val;



--
-- name  =Positive/Contextual + topic + desire + Positive_233
-- value =($mOpinionPos|$Contextual) @{0,1} $mTopic ((should be $mOpinionPos)|$Negative)
-- output(1)=$3\t#3\tnot $1\tNegative
--
create view Ptn_Positive_Contextual___topic___desire___Positive_233_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_Positive_Contextual___topic___desire___Positive_233_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<Tok1.match>{0,1}) (<mTopic1.concept>) (('should be $mOpinionPos')|<Negative1.concept>) 
   return
     group 3 as concept1_1 and
     group 1 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mTopic_en mTopic1, 
      Negative_en Negative1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_Positive_Contextual___topic___desire___Positive_233_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Positive_Contextual___topic___desire___Positive_233_en' as patternName
from Ptn_Positive_Contextual___topic___desire___Positive_233_en X
consolidate on X.pattern_val;



--
-- name  =Negative + 2 Positive + topic_234
-- value =(little|not enough|few|$mOpinionNeg) $mOpinionPos $mCoord $mOpinionPos @{0,1} ($mPrep|$mEmpty){0,5} @{0,1} $mDet? @{0,1} $mTopic
-- output(1)=$10\t#10\tnot $2\tNegative
-- output(2)=$10\t#10\tnot $4\tNegative
--
create view Ptn_Negative___2_Positive___topic_234_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type10 as type10,
   X.pattern_val as pattern_val,
   'Ptn_Negative___2_Positive___topic_234_en' as patternName
from (
   extract
   mTopic1.typeName as type10,

   pattern
     ('little'|'not enough'|'few'|<mOpinionNeg1.concept>) (<mOpinionPos1.concept>) (<mCoord1.concept>) (<mOpinionPos2.concept>) (<Tok1.match>{0,1}) ((<mPrep1.concept>|<mEmpty1.concept>){0,5}) (<Tok2.match>{0,1}) (<mDet1.concept>?) (<Tok3.match>{0,1}) (<mTopic1.concept>) 
   return
     group 11 as concept1_1 and
     group 2 as concept1_2 and
     group 11 as concept2_1 and
     group 4 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mOpinionPos_en mOpinionPos1, 
      mCoord_en mCoord1, 
      mOpinionPos_en mOpinionPos2, 
      mPrep_en mPrep1, 
      mEmpty_en mEmpty1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1, 
      Tok Tok2, 
      Tok Tok3

) X
consolidate on X.pattern_val;



create view Ptn_Negative___2_Positive___topic_234_en_output1 as
select
   X.concept1_1 as concept1,
   X.type10 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___2_Positive___topic_234_en' as patternName
from Ptn_Negative___2_Positive___topic_234_en X
consolidate on X.pattern_val;

create view Ptn_Negative___2_Positive___topic_234_en_output2 as
select
   X.concept2_1 as concept1,
   X.type10 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_Negative___2_Positive___topic_234_en' as patternName
from Ptn_Negative___2_Positive___topic_234_en X
consolidate on X.pattern_val;

create view Ptn_Negative___2_Positive___topic_234_en_output_all as
(select X.* from Ptn_Negative___2_Positive___topic_234_en_output1 X)
union all
(select X.* from Ptn_Negative___2_Positive___topic_234_en_output2 X)
;



--
-- name  =Negative + Negative + topic_235
-- value =$Negative $mDet? $NegativeFunctioning $mTopic
-- output(1)=$4\t#4\t$3\t#3
--
create view Ptn_Negative___Negative___topic_235_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_Negative___Negative___topic_235_en' as patternName
from (
   extract
   NegativeFunctioning1.typeName as type3,
   mTopic1.typeName as type4,

   pattern
     (<Negative1.concept>) (<mDet1.concept>?) (<NegativeFunctioning1.concept>) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      mDet_en mDet1, 
      NegativeFunctioning_en NegativeFunctioning1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_Negative___Negative___topic_235_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___Negative___topic_235_en' as patternName
from Ptn_Negative___Negative___topic_235_en X
consolidate on X.pattern_val;



--
-- name  =Contextual + Positive + topic_236
-- value =($Contextual|more) @{0,1} $mOpinionPos $mPrep $mDet? $mTopic
-- output(1)=$6\t#6\tnot $3\tNegative
--
create view Ptn_Contextual___Positive___topic_236_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_Contextual___Positive___topic_236_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<Contextual1.concept>|'more') (<Tok1.match>{0,1}) (<mOpinionPos1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Contextual_en Contextual1, 
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_Contextual___Positive___topic_236_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Contextual___Positive___topic_236_en' as patternName
from Ptn_Contextual___Positive___topic_236_en X
consolidate on X.pattern_val;



--
-- name  =opinion + "no" + topic_237
-- value =$mOpinion ($SEP|$mCoord){1,2} no $mTopic
-- output(1)=$1\t#1
-- output(2)=$4\t#4\tno\tContextual
--
create view Ptn_opinion____no____topic_237_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.type1 as type1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_opinion____no____topic_237_en' as patternName
from (
   extract
   mOpinion1.typeName as type1,
   mTopic1.typeName as type4,

   pattern
     (<mOpinion1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) ('no') (<mTopic1.concept>) 
   return
     group 1 as concept1_1 and
     group 5 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinion_en mOpinion1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_opinion____no____topic_237_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion____no____topic_237_en' as patternName
from Ptn_opinion____no____topic_237_en X
consolidate on X.pattern_val;

create view Ptn_opinion____no____topic_237_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   'no' as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion____no____topic_237_en' as patternName
from Ptn_opinion____no____topic_237_en X
consolidate on X.pattern_val;

create view Ptn_opinion____no____topic_237_en_output_all as
(select X.* from Ptn_opinion____no____topic_237_en_output1 X)
union all
(select X.* from Ptn_opinion____no____topic_237_en_output2 X)
;



--
-- name  =Contextual + topic + "too" + opinion_238
-- value =($Negative|$Contextual) $mTopic $mEmpty{0,3} $mToo ($mOpinionPos|$mOpinionNeg)
-- output(1)=$2\t#2\t$5\t#5
--
create view Ptn_Contextual___topic____too____opinion_238_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type2 as type2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_Contextual___topic____too____opinion_238_en' as patternName
from (
   extract
   mTopic1.typeName as type2,
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type5,

   pattern
     (<Negative1.concept>|<Contextual1.concept>) (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) (<mToo1.concept>) (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 2 as concept1_1 and
     group 5 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      Contextual_en Contextual1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mToo_en mToo1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_Contextual___topic____too____opinion_238_en_output_all as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
   X.concept1_2 as concept2,
   X.type5 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Contextual___topic____too____opinion_238_en' as patternName
from Ptn_Contextual___topic____too____opinion_238_en X
consolidate on X.pattern_val;



--
-- name  =topic + "lack" + Positive_239
-- value =$mTopic ($mBe|$mHave|$mSupport|$mEmpty){0,3} $mMiscNeg $mEmpty{0,5} @{0,1} $mOpinionPos
-- output(1)=$1\t#1\tnot $6\tNegative
--
create view Ptn_topic____lack____Positive_239_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____lack____Positive_239_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) ((<mBe1.concept>|<mHave1.concept>|<mSupport1.concept>|<mEmpty1.concept>){0,3}) (<mMiscNeg1.concept>) (<mEmpty2.concept>{0,5}) (<Tok1.match>{0,1}) (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 7 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mEmpty_en mEmpty1, 
      mMiscNeg_en mMiscNeg1, 
      mEmpty_en mEmpty2, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic____lack____Positive_239_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____lack____Positive_239_en' as patternName
from Ptn_topic____lack____Positive_239_en X
consolidate on X.pattern_val;



--
-- name  ="less/more" + 2 topics_240
-- value =(less|more) $mTopic $mCoord $mTopic
-- output(1)=$2\t#2\t$1\tContextual
-- output(2)=$4\t#4\t$1\tContextual
--
create view Ptn__less_more____2_topics_240_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type2 as type2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn__less_more____2_topics_240_en' as patternName
from (
   extract
   mTopic1.typeName as type2,
   mTopic2.typeName as type4,

   pattern
     (<PtnMerge_less_more_en1.concept>) (<mTopic1.concept>) (<mCoord1.concept>) (<mTopic2.concept>) 
   return
     group 2 as concept1_1 and
     group 1 as concept1_2 and
     group 4 as concept2_1 and
     group 1 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_less_more_en PtnMerge_less_more_en1, 
      mTopic_en mTopic1, 
      mCoord_en mCoord1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn__less_more____2_topics_240_en_output1 as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
   X.concept1_2 as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__less_more____2_topics_240_en' as patternName
from Ptn__less_more____2_topics_240_en X
consolidate on X.pattern_val;

create view Ptn__less_more____2_topics_240_en_output2 as
select
   X.concept2_1 as concept1,
   X.type4 as type1,
   X.concept2_2 as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__less_more____2_topics_240_en' as patternName
from Ptn__less_more____2_topics_240_en X
consolidate on X.pattern_val;

create view Ptn__less_more____2_topics_240_en_output_all as
(select X.* from Ptn__less_more____2_topics_240_en_output1 X)
union all
(select X.* from Ptn__less_more____2_topics_240_en_output2 X)
;



--
-- name  ="more" + topic + Positive_241
-- value =(more|$Contextual) $mTopic $mOpinionPos
-- output(1)=$2\t#2\tnot $3\tNegative
--
create view Ptn__more____topic___Positive_241_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type2 as type2,
   X.pattern_val as pattern_val,
   'Ptn__more____topic___Positive_241_en' as patternName
from (
   extract
   mTopic1.typeName as type2,

   pattern
     ('more'|<Contextual1.concept>) (<mTopic1.concept>) (<mOpinionPos1.concept>) 
   return
     group 2 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Contextual_en Contextual1, 
      mTopic_en mTopic1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn__more____topic___Positive_241_en_output_all as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more____topic___Positive_241_en' as patternName
from Ptn__more____topic___Positive_241_en X
consolidate on X.pattern_val;



--
-- name  =topic + "more" + topic_242
-- value =$mTopic more $mTopic
-- output(1)=$1\t#1\t$3\t#3\t$2\tContextual
--
create view Ptn_topic____more____topic_242_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_topic____more____topic_242_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   mTopic2.typeName as type3,

   pattern
     (<mTopic1.concept>) ('more') (<mTopic2.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 2 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_topic____more____topic_242_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   X.concept1_3 as concept3,
   'Contextual' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____more____topic_242_en' as patternName
from Ptn_topic____more____topic_242_en X
consolidate on X.pattern_val;



--
-- name  =topic + "more"_243
-- value =$mTopic $mAdverb? more
-- output(1)=$1\t#1\t$3\tContextual
--
create view Ptn_topic____more__243_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic____more__243_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mAdverb1.concept>?) ('more') 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mAdverb_en mAdverb1

) X
consolidate on X.pattern_val;



create view Ptn_topic____more__243_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic____more__243_en' as patternName
from Ptn_topic____more__243_en X
consolidate on X.pattern_val;



--
-- name  =desire + Positive/Contextual + topic_244
-- value =$mShould @ $mBe{1,3} ($Positive|$Contextual) ($mEmpty|$mBe|$mHave|$mSupport|$mDet|$mQuant){0,5} $mTopic
-- output(1)=$6\t#6\tnot $4\tNegative
--
create view Ptn_desire___Positive_Contextual___topic_244_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_desire___Positive_Contextual___topic_244_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mShould1.concept>) (<Tok1.match>) (<mBe1.concept>{1,3}) (<PtnMerge_Contextual_Positive_en1.concept>) ((<mEmpty1.concept>|<mBe2.concept>|<mHave1.concept>|<mSupport1.concept>|<mDet1.concept>|<mQuant1.concept>){0,5}) (<mTopic1.concept>) 
   return
     group 7 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mBe_en mBe1, 
      PtnMerge_Contextual_Positive_en PtnMerge_Contextual_Positive_en1, 
      mEmpty_en mEmpty1, 
      mBe_en mBe2, 
      mHave_en mHave1, 
      mSupport_en mSupport1, 
      mDet_en mDet1, 
      mQuant_en mQuant1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Positive_Contextual___topic_244_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Positive_Contextual___topic_244_en' as patternName
from Ptn_desire___Positive_Contextual___topic_244_en X
consolidate on X.pattern_val;



--
-- name  =Negative + desire + Positive + topic_245
-- value =$Negative $mShould ($mBe|$mHave){1,2} $mEmpty{0,3} $mOpinionPos (of|for) @{0,1} $mTopic
-- output(1)=$8\t#8\tnot $5\tNegative
--
create view Ptn_Negative___desire___Positive___topic_245_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_Negative___desire___Positive___topic_245_en' as patternName
from (
   extract
   mTopic1.typeName as type8,

   pattern
     (<Negative1.concept>) (<mShould1.concept>) ((<mBe1.concept>|<mHave1.concept>){1,2}) (<mEmpty1.concept>{0,3}) (<mOpinionPos1.concept>) ('of'|'for') (<Tok1.match>{0,1}) (<mTopic1.concept>) 
   return
     group 9 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      mShould_en mShould1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_Negative___desire___Positive___topic_245_en_output_all as
select
   X.concept1_1 as concept1,
   X.type8 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___desire___Positive___topic_245_en' as patternName
from Ptn_Negative___desire___Positive___topic_245_en X
consolidate on X.pattern_val;



--
-- name  =Negative + topic + Positive_246
-- value =$mOpinionNeg @{0,1} $mTopic $mOpinionPos ($mPrep $mDet? $mTopic)?
-- output(1)=$3\t#3\tnot $4\tNegative
--
create view Ptn_Negative___topic___Positive_246_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_Negative___topic___Positive_246_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<mOpinionNeg1.concept>) (<Tok1.match>{0,1}) (<mTopic1.concept>) (<mOpinionPos1.concept>) ((<mPrep1.concept> <mDet1.concept>? <mTopic2.concept>)?) 
   return
     group 3 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mTopic_en mTopic1, 
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_Negative___topic___Positive_246_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___topic___Positive_246_en' as patternName
from Ptn_Negative___topic___Positive_246_en X
consolidate on X.pattern_val;



--
-- name  =Positive + topic + "more than" + topic_247
-- value =$Positive $mDet? $mTopic $mEmpty{0,3} (more|$Contextual) than $mDet? $mTopic
-- output(1)=$3\t#3\tbetter than\tPositive\t$8\t#8
--
create view Ptn_Positive___topic____more_than____topic_247_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_Positive___topic____more_than____topic_247_en' as patternName
from (
   extract
   mTopic1.typeName as type3,
   mTopic2.typeName as type8,

   pattern
     (<Positive1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) ('more'|<Contextual1.concept>) ('than') (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 3 as concept1_1 and
     group 8 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Positive_en Positive1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      Contextual_en Contextual1, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_Positive___topic____more_than____topic_247_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   'better than' as concept2,
   'Positive' as type2,
   X.concept1_2 as concept3,
   X.type8 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Positive___topic____more_than____topic_247_en' as patternName
from Ptn_Positive___topic____more_than____topic_247_en X
consolidate on X.pattern_val;



--
-- name  =Positive + topic + "less than" + topic_248
-- value =$Positive $mDet? $mTopic $mEmpty{0,3} less than $mDet? $mTopic
-- output(1)=$8\t#8\tbetter than\tPositive\t$3\t#3
--
create view Ptn_Positive___topic____less_than____topic_248_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_Positive___topic____less_than____topic_248_en' as patternName
from (
   extract
   mTopic1.typeName as type3,
   mTopic2.typeName as type8,

   pattern
     (<Positive1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) ('less') ('than') (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 8 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Positive_en Positive1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_Positive___topic____less_than____topic_248_en_output_all as
select
   X.concept1_1 as concept1,
   X.type8 as type1,
   'better than' as concept2,
   'Positive' as type2,
   X.concept1_2 as concept3,
   X.type3 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Positive___topic____less_than____topic_248_en' as patternName
from Ptn_Positive___topic____less_than____topic_248_en X
consolidate on X.pattern_val;



--
-- name  =Negative + topic + "more than" + topic_249
-- value =$Negative $mDet? $mTopic $mEmpty{0,3} more than $mDet? $mTopic
-- output(1)=$8\t#8\tbetter than\tPositive\t$3\t#3
--
create view Ptn_Negative___topic____more_than____topic_249_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_Negative___topic____more_than____topic_249_en' as patternName
from (
   extract
   mTopic1.typeName as type3,
   mTopic2.typeName as type8,

   pattern
     (<Negative1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) ('more') ('than') (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 8 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_Negative___topic____more_than____topic_249_en_output_all as
select
   X.concept1_1 as concept1,
   X.type8 as type1,
   'better than' as concept2,
   'Positive' as type2,
   X.concept1_2 as concept3,
   X.type3 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___topic____more_than____topic_249_en' as patternName
from Ptn_Negative___topic____more_than____topic_249_en X
consolidate on X.pattern_val;



--
-- name  =Negative + topic + "less than" + topic_250
-- value =$Negative $mDet? $mTopic $mEmpty{0,3} less than $mDet? $mTopic
-- output(1)=$3\t#3\tbetter than\tPositive\t$8\t#8
--
create view Ptn_Negative___topic____less_than____topic_250_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.type8 as type8,
   X.pattern_val as pattern_val,
   'Ptn_Negative___topic____less_than____topic_250_en' as patternName
from (
   extract
   mTopic1.typeName as type3,
   mTopic2.typeName as type8,

   pattern
     (<Negative1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) ('less') ('than') (<mDet2.concept>?) (<mTopic2.concept>) 
   return
     group 3 as concept1_1 and
     group 8 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mDet_en mDet2, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_Negative___topic____less_than____topic_250_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   'better than' as concept2,
   'Positive' as type2,
   X.concept1_2 as concept3,
   X.type8 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___topic____less_than____topic_250_en' as patternName
from Ptn_Negative___topic____less_than____topic_250_en X
consolidate on X.pattern_val;



--
-- name  =Contextual + Topic + opinion_251
-- value =$Contextual $mTopic $mEmpty{0,3} $mOpinion
-- output(1)=$1 $2\t#2\t$4\t#4
--
create view Ptn_Contextual___Topic___opinion_251_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type2 as type2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_Contextual___Topic___opinion_251_en' as patternName
from (
   extract
   mTopic1.typeName as type2,
   mOpinion1.typeName as type4,

   pattern
     (<Contextual1.concept>) (<mTopic1.concept>) (<mEmpty1.concept>{0,3}) (<mOpinion1.concept>) 
   return
     group 1 as concept1_1 and
     group 2 as concept1_2 and
     group 4 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Contextual_en Contextual1, 
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      mOpinion_en mOpinion1

) X
consolidate on X.pattern_val;



create view Ptn_Contextual___Topic___opinion_251_en_output_all as
select
udf.addSpanRight(X.concept1_1, X.concept1_2) as concept1,
   X.type2 as type1,
   X.concept1_3 as concept2,
   X.type4 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Contextual___Topic___opinion_251_en' as patternName
from Ptn_Contextual___Topic___opinion_251_en X
consolidate on X.pattern_val;



--
-- name  =opinion + topic + "than expected"_252
-- value =$mOpinion $mTopic than expected
-- output(1)=$2\t#2\t$1 $3\tPositive
--
create view Ptn_opinion___topic____than_expected__252_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type2 as type2,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic____than_expected__252_en' as patternName
from (
   extract
   mTopic1.typeName as type2,

   pattern
     (<mOpinion1.concept>) (<mTopic1.concept>) ('than') ('expected') 
   return
     group 2 as concept1_1 and
     group 1 as concept1_2 and
     group 3 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinion_en mOpinion1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic____than_expected__252_en_output_all as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
udf.addSpanRight(X.concept1_2, X.concept1_3) as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic____than_expected__252_en' as patternName
from Ptn_opinion___topic____than_expected__252_en X
consolidate on X.pattern_val;



--
-- name  =negative + pos/cont + topic_253
-- value =$Negative $mDet ($mOpinionPos|$Contextual) $mTopic
-- output(1)=$4\t#4\tnot $3\tNegative
--
create view Ptn_negative___pos_cont___topic_253_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_negative___pos_cont___topic_253_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<Negative1.concept>) (<mDet1.concept>) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      mDet_en mDet1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_negative___pos_cont___topic_253_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_negative___pos_cont___topic_253_en' as patternName
from Ptn_negative___pos_cont___topic_253_en X
consolidate on X.pattern_val;



--
-- name  =negative + negative + topic_254
-- value =$Negative $mDet? $mOpinionNeg $mTopic
-- output(1)=$4\t#4\t$3\t#3
--
create view Ptn_negative___negative___topic_254_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn_negative___negative___topic_254_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type3,
   mTopic1.typeName as type4,

   pattern
     (<Negative1.concept>) (<mDet1.concept>?) (<mOpinionNeg1.concept>) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Negative_en Negative1, 
      mDet_en mDet1, 
      mOpinionNeg_en mOpinionNeg1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_negative___negative___topic_254_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_negative___negative___topic_254_en' as patternName
from Ptn_negative___negative___topic_254_en X
consolidate on X.pattern_val;



--
-- name  =contextual + topic + "than" + topic_255
-- value =$Contextual $mTopic than $mPrep? $mDet? $mTopic
-- output(1)=$2\t#2\t$1 than\tPositive\t$6\t#6
--
create view Ptn_contextual___topic____than____topic_255_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type2 as type2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_contextual___topic____than____topic_255_en' as patternName
from (
   extract
   mTopic1.typeName as type2,
   mTopic2.typeName as type6,

   pattern
     (<Contextual1.concept>) (<mTopic1.concept>) ('than') (<mPrep1.concept>?) (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 2 as concept1_1 and
     group 1 as concept1_2 and
     group 6 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Contextual_en Contextual1, 
      mTopic_en mTopic1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_contextual___topic____than____topic_255_en_output_all as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
   '$1 than' as concept2,
   'Positive' as type2,
   X.concept1_3 as concept3,
   X.type6 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_contextual___topic____than____topic_255_en' as patternName
from Ptn_contextual___topic____than____topic_255_en X
consolidate on X.pattern_val;



--
-- name  =opinion + topic + "except" + topic_256
-- value =$mOpinionPos $mTopic $SEP? (except|apart from) $mDet? $mTopic
-- output(1)=$2\t#2\t$1\t#1
-- output(2)=$6\t#6\tnot $1\tNegative
--
create view Ptn_opinion___topic____except____topic_256_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type1 as type1,
   X.type2 as type2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic____except____topic_256_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type1,
   mTopic1.typeName as type2,
   mTopic2.typeName as type6,

   pattern
     (<mOpinionPos1.concept>) (<mTopic1.concept>) (<SEP1.concept>?) ('except'|'apart from') (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 2 as concept1_1 and
     group 1 as concept1_2 and
     group 6 as concept2_1 and
     group 1 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mTopic_en mTopic1, 
      SEP_en SEP1, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic____except____topic_256_en_output1 as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic____except____topic_256_en' as patternName
from Ptn_opinion___topic____except____topic_256_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic____except____topic_256_en_output2 as
select
   X.concept2_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_opinion___topic____except____topic_256_en' as patternName
from Ptn_opinion___topic____except____topic_256_en X
consolidate on X.pattern_val;

create view Ptn_opinion___topic____except____topic_256_en_output_all as
(select X.* from Ptn_opinion___topic____except____topic_256_en_output1 X)
union all
(select X.* from Ptn_opinion___topic____except____topic_256_en_output2 X)
;



--
-- name  =opinion + topic + NP_257
-- value =$mOpinion ($mEmpty|$mPrep|$mPronoun|being){0,3} $mTopic $mPrep $mDet? $mTopic
-- output(1)=$3\t#3\t$1\t#1\t$6\t#6
--
create view Ptn_opinion___topic___NP_257_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept1_3 as concept1_3,
   X.type1 as type1,
   X.type3 as type3,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic___NP_257_en' as patternName
from (
   extract
   mOpinion1.typeName as type1,
   mTopic1.typeName as type3,
   mTopic2.typeName as type6,

   pattern
     (<mOpinion1.concept>) ((<mEmpty1.concept>|<mPrep1.concept>|<mPronoun1.concept>|'being'){0,3}) (<mTopic1.concept>) (<mPrep2.concept>) (<mDet1.concept>?) (<mTopic2.concept>) 
   return
     group 4 as concept1_1 and
     group 1 as concept1_2 and
     group 7 as concept1_3 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinion_en mOpinion1, 
      mEmpty_en mEmpty1, 
      mPrep_en mPrep1, 
      mPronoun_en mPronoun1, 
      mTopic_en mTopic1, 
      mPrep_en mPrep2, 
      mDet_en mDet1, 
      mTopic_en mTopic2

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic___NP_257_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   X.concept1_3 as concept3,
   X.type6 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic___NP_257_en' as patternName
from Ptn_opinion___topic___NP_257_en X
consolidate on X.pattern_val;



--
-- name  =opinion + topic_258
-- value =$mOpinion ($mEmpty|$mPrep|$mPronoun|being){0,3} $mTopic
-- output(1)=$3\t#3\t$1\t#1
--
create view Ptn_opinion___topic_258_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_opinion___topic_258_en' as patternName
from (
   extract
   mOpinion1.typeName as type1,
   mTopic1.typeName as type3,

   pattern
     (<mOpinion1.concept>) ((<mEmpty1.concept>|<mPrep1.concept>|<mPronoun1.concept>|'being'){0,3}) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 1 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinion_en mOpinion1, 
      mEmpty_en mEmpty1, 
      mPrep_en mPrep1, 
      mPronoun_en mPronoun1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_opinion___topic_258_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   X.type1 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion___topic_258_en' as patternName
from Ptn_opinion___topic_258_en X
consolidate on X.pattern_val;



--
-- name  ="not" + 2 Positive_259
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $PositiveAttitude ($SEP|$mCoord){1,2} $PositiveAttitude
-- output(1)=not $3\tNegativeAttitude
-- output(2)=not $5\tNegativeAttitude
--
create view Ptn__not____2_Positive_259_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Positive_259_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<PositiveAttitude1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<PositiveAttitude2.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      PositiveAttitude_en PositiveAttitude1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      PositiveAttitude_en PositiveAttitude2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Positive_259_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeAttitude' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Positive_259_en' as patternName
from Ptn__not____2_Positive_259_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_259_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'NegativeAttitude' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____2_Positive_259_en' as patternName
from Ptn__not____2_Positive_259_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_259_en_output_all as
(select X.* from Ptn__not____2_Positive_259_en_output1 X)
union all
(select X.* from Ptn__not____2_Positive_259_en_output2 X)
;



--
-- name  ="not" + 2 Positive_260
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $PositiveBudget ($SEP|$mCoord){1,2} $PositiveBudget
-- output(1)=not $3\tNegativeBudget
-- output(2)=not $5\tNegativeBudget
--
create view Ptn__not____2_Positive_260_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Positive_260_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<PositiveBudget1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<PositiveBudget2.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      PositiveBudget_en PositiveBudget1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      PositiveBudget_en PositiveBudget2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Positive_260_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeBudget' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Positive_260_en' as patternName
from Ptn__not____2_Positive_260_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_260_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'NegativeBudget' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____2_Positive_260_en' as patternName
from Ptn__not____2_Positive_260_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_260_en_output_all as
(select X.* from Ptn__not____2_Positive_260_en_output1 X)
union all
(select X.* from Ptn__not____2_Positive_260_en_output2 X)
;



--
-- name  ="not" + 2 Positive_261
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $PositiveCompetence ($SEP|$mCoord){1,2} $PositiveCompetence
-- output(1)=not $3\tNegativeCompetence
-- output(2)=not $5\tNegativeCompetence
--
create view Ptn__not____2_Positive_261_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Positive_261_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<PositiveCompetence1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<PositiveCompetence2.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      PositiveCompetence_en PositiveCompetence1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      PositiveCompetence_en PositiveCompetence2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Positive_261_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeCompetence' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Positive_261_en' as patternName
from Ptn__not____2_Positive_261_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_261_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'NegativeCompetence' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____2_Positive_261_en' as patternName
from Ptn__not____2_Positive_261_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_261_en_output_all as
(select X.* from Ptn__not____2_Positive_261_en_output1 X)
union all
(select X.* from Ptn__not____2_Positive_261_en_output2 X)
;



--
-- name  ="not" + 2 Positive_262
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $PositiveFeeling ($SEP|$mCoord){1,2} $PositiveFeeling
-- output(1)=not $3\tNegativeFeeling
-- output(2)=not $5\tNegativeFeeling
--
create view Ptn__not____2_Positive_262_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Positive_262_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<PositiveFeeling1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<PositiveFeeling2.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      PositiveFeeling_en PositiveFeeling1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      PositiveFeeling_en PositiveFeeling2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Positive_262_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeFeeling' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Positive_262_en' as patternName
from Ptn__not____2_Positive_262_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_262_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'NegativeFeeling' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____2_Positive_262_en' as patternName
from Ptn__not____2_Positive_262_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_262_en_output_all as
(select X.* from Ptn__not____2_Positive_262_en_output1 X)
union all
(select X.* from Ptn__not____2_Positive_262_en_output2 X)
;



--
-- name  ="not" + 2 Positive_263
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $PositiveFunctioning ($SEP|$mCoord){1,2} $PositiveFunctioning
-- output(1)=not $3\tNegativeFunctioning
-- output(2)=not $5\tNegativeFunctioning
--
create view Ptn__not____2_Positive_263_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Positive_263_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<PositiveFunctioning1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<PositiveFunctioning2.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      PositiveFunctioning_en PositiveFunctioning1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      PositiveFunctioning_en PositiveFunctioning2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Positive_263_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeFunctioning' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Positive_263_en' as patternName
from Ptn__not____2_Positive_263_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_263_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'NegativeFunctioning' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____2_Positive_263_en' as patternName
from Ptn__not____2_Positive_263_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_263_en_output_all as
(select X.* from Ptn__not____2_Positive_263_en_output1 X)
union all
(select X.* from Ptn__not____2_Positive_263_en_output2 X)
;



--
-- name  ="not" + 2 Positive_264
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $mOpinionPos ($SEP|$mCoord){1,2} $mOpinionPos
-- output(1)=not $3\tNegative
-- output(2)=not $5\tNegative
--
create view Ptn__not____2_Positive_264_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Positive_264_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<mOpinionPos1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mOpinionPos2.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mOpinionPos_en mOpinionPos1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mOpinionPos_en mOpinionPos2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Positive_264_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Positive_264_en' as patternName
from Ptn__not____2_Positive_264_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_264_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____2_Positive_264_en' as patternName
from Ptn__not____2_Positive_264_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Positive_264_en_output_all as
(select X.* from Ptn__not____2_Positive_264_en_output1 X)
union all
(select X.* from Ptn__not____2_Positive_264_en_output2 X)
;



--
-- name  ="not" + PositiveAttitude_265
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $PositiveAttitude
-- output(1)=not $4\tNegativeAttitude
--
create view Ptn__not____PositiveAttitude_265_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____PositiveAttitude_265_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<PositiveAttitude1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      PositiveAttitude_en PositiveAttitude1

) X
consolidate on X.pattern_val;



create view Ptn__not____PositiveAttitude_265_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeAttitude' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____PositiveAttitude_265_en' as patternName
from Ptn__not____PositiveAttitude_265_en X
consolidate on X.pattern_val;



--
-- name  ="not" + 2 Negative_266
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $mOpinionNeg ($SEP|$mCoord){1,2} $mOpinionNeg
-- output(1)=not $3\tPositive
-- output(2)=not $5\tPositive
--
create view Ptn__not____2_Negative_266_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____2_Negative_266_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<mOpinionNeg1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mOpinionNeg2.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mOpinionNeg_en mOpinionNeg1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mOpinionNeg_en mOpinionNeg2, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____2_Negative_266_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Positive' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____2_Negative_266_en' as patternName
from Ptn__not____2_Negative_266_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Negative_266_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'Positive' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____2_Negative_266_en' as patternName
from Ptn__not____2_Negative_266_en X
consolidate on X.pattern_val;

create view Ptn__not____2_Negative_266_en_output_all as
(select X.* from Ptn__not____2_Negative_266_en_output1 X)
union all
(select X.* from Ptn__not____2_Negative_266_en_output2 X)
;



--
-- name  ="not" + Positive + Negative_267
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $mOpinionPos ($SEP|$mCoord){1,2} $mOpinionNeg
-- output(1)=not $3\tNegative
-- output(2)=not $5\tPositive
--
create view Ptn__not____Positive___Negative_267_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive___Negative_267_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<mOpinionPos1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mOpinionNeg1.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mOpinionPos_en mOpinionPos1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mOpinionNeg_en mOpinionNeg1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive___Negative_267_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive___Negative_267_en' as patternName
from Ptn__not____Positive___Negative_267_en X
consolidate on X.pattern_val;

create view Ptn__not____Positive___Negative_267_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'Positive' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____Positive___Negative_267_en' as patternName
from Ptn__not____Positive___Negative_267_en X
consolidate on X.pattern_val;

create view Ptn__not____Positive___Negative_267_en_output_all as
(select X.* from Ptn__not____Positive___Negative_267_en_output1 X)
union all
(select X.* from Ptn__not____Positive___Negative_267_en_output2 X)
;



--
-- name  ="not" + Negative + Positive_268
-- value =($mAdvNeg|$mSupportNeg|$mMiscNeg) @{0,1} $mOpinionNeg ($SEP|$mCoord){1,2} $mOpinionPos
-- output(1)=not $3\tPositive
-- output(2)=not $5\tNegative
--
create view Ptn__not____Negative___Positive_268_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn__not____Negative___Positive_268_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mMiscNeg1.concept>) (<Tok1.match>{0,1}) (<mOpinionNeg1.concept>) ((<SEP1.concept>|<mCoord1.concept>){1,2}) (<mOpinionPos1.concept>) 
   return
     group 3 as concept1_1 and
     group 6 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mMiscNeg_en mMiscNeg1, 
      mOpinionNeg_en mOpinionNeg1, 
      SEP_en SEP1, 
      mCoord_en mCoord1, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__not____Negative___Positive_268_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Positive' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Negative___Positive_268_en' as patternName
from Ptn__not____Negative___Positive_268_en X
consolidate on X.pattern_val;

create view Ptn__not____Negative___Positive_268_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn__not____Negative___Positive_268_en' as patternName
from Ptn__not____Negative___Positive_268_en X
consolidate on X.pattern_val;

create view Ptn__not____Negative___Positive_268_en_output_all as
(select X.* from Ptn__not____Negative___Positive_268_en_output1 X)
union all
(select X.* from Ptn__not____Negative___Positive_268_en_output2 X)
;



--
-- name  ="not" + Positive_269
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo|$mPronoun|$mBe){0,5} $Positive
-- output(1)=not $3\tNegative
--
create view Ptn__not____Positive_269_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive_269_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>|<mPronoun1.concept>|<mBe1.concept>){0,5}) (<Positive1.concept>) 
   return
     group 4 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mPronoun_en mPronoun1, 
      mBe_en mBe1, 
      Positive_en Positive1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive_269_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive_269_en' as patternName
from Ptn__not____Positive_269_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Positive_270
-- value =$mSupportNegPart $mSupport $mPronoun $mBe $mOpinionPos
-- output(1)=not $5\tNegative
--
create view Ptn__not____Positive_270_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____Positive_270_en' as patternName
from (
   extract

   pattern
     (<mSupportNegPart1.concept>) (<mSupport1.concept>) (<mPronoun1.concept>) (<mBe1.concept>) (<mOpinionPos1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNegPart_en mSupportNegPart1, 
      mSupport_en mSupport1, 
      mPronoun_en mPronoun1, 
      mBe_en mBe1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn__not____Positive_270_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Positive_270_en' as patternName
from Ptn__not____Positive_270_en X
consolidate on X.pattern_val;



--
-- name  ="not" + PositiveBudget_271
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $PositiveBudget
-- output(1)=not $4\tNegativeBudget
--
create view Ptn__not____PositiveBudget_271_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____PositiveBudget_271_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<PositiveBudget1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      PositiveBudget_en PositiveBudget1

) X
consolidate on X.pattern_val;



create view Ptn__not____PositiveBudget_271_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeBudget' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____PositiveBudget_271_en' as patternName
from Ptn__not____PositiveBudget_271_en X
consolidate on X.pattern_val;



--
-- name  ="not" + PositiveCompetence_272
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $PositiveCompetence
-- output(1)=not $4\tNegativeCompetence
--
create view Ptn__not____PositiveCompetence_272_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____PositiveCompetence_272_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<PositiveCompetence1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      PositiveCompetence_en PositiveCompetence1

) X
consolidate on X.pattern_val;



create view Ptn__not____PositiveCompetence_272_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeCompetence' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____PositiveCompetence_272_en' as patternName
from Ptn__not____PositiveCompetence_272_en X
consolidate on X.pattern_val;



--
-- name  ="not" + PositiveFeeling_273
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $PositiveFeeling
-- output(1)=not $4\tNegativeFeeling
--
create view Ptn__not____PositiveFeeling_273_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____PositiveFeeling_273_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<PositiveFeeling1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      PositiveFeeling_en PositiveFeeling1

) X
consolidate on X.pattern_val;



create view Ptn__not____PositiveFeeling_273_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeFeeling' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____PositiveFeeling_273_en' as patternName
from Ptn__not____PositiveFeeling_273_en X
consolidate on X.pattern_val;



--
-- name  ="not" + PositiveFunctioning_274
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $PositiveFunctioning
-- output(1)=not $4\tNegativeFunctioning
--
create view Ptn__not____PositiveFunctioning_274_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____PositiveFunctioning_274_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<PositiveFunctioning1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      PositiveFunctioning_en PositiveFunctioning1

) X
consolidate on X.pattern_val;



create view Ptn__not____PositiveFunctioning_274_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'NegativeFunctioning' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____PositiveFunctioning_274_en' as patternName
from Ptn__not____PositiveFunctioning_274_en X
consolidate on X.pattern_val;



--
-- name  ="must" + "not" + Negative_275
-- value =must $mAdvNeg $mBe $mEmpty{0,2} $mOpinionNeg
-- output(1)=$5\t#5
--
create view Ptn__must_____not____Negative_275_en as
select
   X.concept1_1 as concept1_1,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__must_____not____Negative_275_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type5,

   pattern
     ('must') (<mAdvNeg1.concept>) (<mBe1.concept>) (<mEmpty1.concept>{0,2}) (<mOpinionNeg1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mBe_en mBe1, 
      mEmpty_en mEmpty1, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn__must_____not____Negative_275_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__must_____not____Negative_275_en' as patternName
from Ptn__must_____not____Negative_275_en X
consolidate on X.pattern_val;



--
-- name  ="not" + Negative_276
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} ($Negative|$Contextual)
-- output(1)=not $4\tPositive
--
create view Ptn__not____Negative_276_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____Negative_276_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<PtnMerge_Contextual_Negative_en1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_Negative_en PtnMerge_Contextual_Negative_en1

) X
consolidate on X.pattern_val;



create view Ptn__not____Negative_276_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Positive' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____Negative_276_en' as patternName
from Ptn__not____Negative_276_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeAttitude_277
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $NegativeAttitude
-- output(1)=not $4\tPositiveAttitude
--
create view Ptn__not____NegativeAttitude_277_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeAttitude_277_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<NegativeAttitude1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      NegativeAttitude_en NegativeAttitude1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeAttitude_277_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'PositiveAttitude' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeAttitude_277_en' as patternName
from Ptn__not____NegativeAttitude_277_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeBudget_278
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $NegativeBudget
-- output(1)=not $4\tPositiveBudget
--
create view Ptn__not____NegativeBudget_278_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeBudget_278_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<NegativeBudget1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      NegativeBudget_en NegativeBudget1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeBudget_278_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'PositiveBudget' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeBudget_278_en' as patternName
from Ptn__not____NegativeBudget_278_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeCompetence_279
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $NegativeCompetence
-- output(1)=not $4\tPositiveCompetence
--
create view Ptn__not____NegativeCompetence_279_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeCompetence_279_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<NegativeCompetence1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      NegativeCompetence_en NegativeCompetence1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeCompetence_279_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'PositiveCompetence' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeCompetence_279_en' as patternName
from Ptn__not____NegativeCompetence_279_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeFeeling_280
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $NegativeFeeling
-- output(1)=not $4\tPositiveFeeling
--
create view Ptn__not____NegativeFeeling_280_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeFeeling_280_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<NegativeFeeling1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      NegativeFeeling_en NegativeFeeling1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeFeeling_280_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'PositiveFeeling' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeFeeling_280_en' as patternName
from Ptn__not____NegativeFeeling_280_en X
consolidate on X.pattern_val;



--
-- name  ="not" + NegativeFunctioning_281
-- value =($mAdvNeg|$mSupportNeg|$mSupportNegPart|$mMiscNeg) ($mSupport|$mAdverb|$mToo)? $mEmpty{0,5} $NegativeFunctioning
-- output(1)=not $4\tPositiveFunctioning
--
create view Ptn__not____NegativeFunctioning_281_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__not____NegativeFunctioning_281_en' as patternName
from (
   extract

   pattern
     (<mAdvNeg1.concept>|<mSupportNeg1.concept>|<mSupportNegPart1.concept>|<mMiscNeg1.concept>) ((<mSupport1.concept>|<mAdverb1.concept>|<mToo1.concept>)?) (<mEmpty1.concept>{0,5}) (<NegativeFunctioning1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mAdvNeg_en mAdvNeg1, 
      mSupportNeg_en mSupportNeg1, 
      mSupportNegPart_en mSupportNegPart1, 
      mMiscNeg_en mMiscNeg1, 
      mSupport_en mSupport1, 
      mAdverb_en mAdverb1, 
      mToo_en mToo1, 
      mEmpty_en mEmpty1, 
      NegativeFunctioning_en NegativeFunctioning1

) X
consolidate on X.pattern_val;



create view Ptn__not____NegativeFunctioning_281_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'PositiveFunctioning' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__not____NegativeFunctioning_281_en' as patternName
from Ptn__not____NegativeFunctioning_281_en X
consolidate on X.pattern_val;



--
-- name  ="should not" + Negative_282
-- value =(($mShould $mAdvNeg)|mustn't|shouldn't|couldn't) @{0,2} $mOpinionNeg
-- output(1)=$3\t#3
--
create view Ptn__should_not____Negative_282_en as
select
   X.concept1_1 as concept1_1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__should_not____Negative_282_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type3,

   pattern
     ((<mShould1.concept> <mAdvNeg1.concept>)|'mustn\'t'|'shouldn\'t'|'couldn\'t') (<Tok1.match>{0,2}) (<mOpinionNeg1.concept>) 
   return
     group 4 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mAdvNeg_en mAdvNeg1, 
      mOpinionNeg_en mOpinionNeg1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__should_not____Negative_282_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__should_not____Negative_282_en' as patternName
from Ptn__should_not____Negative_282_en X
consolidate on X.pattern_val;



--
-- name  ="too" + Positive/Contextual_283
-- value =$mToo @{0,1} ($mOpinionPos|$Contextual)
-- output(1)=too $3\tNegative
--
create view Ptn__too____Positive_Contextual_283_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__too____Positive_Contextual_283_en' as patternName
from (
   extract

   pattern
     (<mToo1.concept>) (<Tok1.match>{0,1}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) 
   return
     group 3 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mToo_en mToo1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__too____Positive_Contextual_283_en_output_all as
select
   udf.addWordLeft('too', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__too____Positive_Contextual_283_en' as patternName
from Ptn__too____Positive_Contextual_283_en X
consolidate on X.pattern_val;



--
-- name  ="couldn't" + "more" + Positive/Contextual_284
-- value =$mCouldNot $mEmpty{1,6} (any|more) ($mOpinionPos|$mOpinionNeg|$Contextual)
-- output(1)=$4\t#4
--
create view Ptn__couldn_t_____more____Positive_Contextual_284_en as
select
   X.concept1_1 as concept1_1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn__couldn_t_____more____Positive_Contextual_284_en' as patternName
from (
   extract
   PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.typeName as type4,

   pattern
     (<mCouldNot1.concept>) (<mEmpty1.concept>{1,6}) ('any'|'more') (<PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 4 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mCouldNot_en mCouldNot1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en PtnMerge_Contextual_mOpinionNeg_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn__couldn_t_____more____Positive_Contextual_284_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__couldn_t_____more____Positive_Contextual_284_en' as patternName
from Ptn__couldn_t_____more____Positive_Contextual_284_en X
consolidate on X.pattern_val;



--
-- name  ="the more" + Positive_285
-- value =the more $mOpinionPos
-- output(1)=$3\t#3
--
create view Ptn__the_more____Positive_285_en as
select
   X.concept1_1 as concept1_1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__the_more____Positive_285_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type3,

   pattern
     ('the') ('more') (<mOpinionPos1.concept>) 
   return
     group 3 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn__the_more____Positive_285_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__the_more____Positive_285_en' as patternName
from Ptn__the_more____Positive_285_en X
consolidate on X.pattern_val;



--
-- name  =desire + "more" + 2 Positive_286
-- value =$mShould $mEmpty{1,5} more $mOpinionPos $mCoord{1,2} $mEmpty{0,3} more? $mOpinionPos
-- output(1)=not $4\tNegative
-- output(2)=not $8\tNegative
--
create view Ptn_desire____more____2_Positive_286_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn_desire____more____2_Positive_286_en' as patternName
from (
   extract

   pattern
     (<mShould1.concept>) (<mEmpty1.concept>{1,5}) ('more') (<mOpinionPos1.concept>) (<mCoord1.concept>{1,2}) (<mEmpty2.concept>{0,3}) ('more'?) (<mOpinionPos2.concept>) 
   return
     group 4 as concept1_1 and
     group 8 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty2, 
      mOpinionPos_en mOpinionPos2

) X
consolidate on X.pattern_val;



create view Ptn_desire____more____2_Positive_286_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire____more____2_Positive_286_en' as patternName
from Ptn_desire____more____2_Positive_286_en X
consolidate on X.pattern_val;

create view Ptn_desire____more____2_Positive_286_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_desire____more____2_Positive_286_en' as patternName
from Ptn_desire____more____2_Positive_286_en X
consolidate on X.pattern_val;

create view Ptn_desire____more____2_Positive_286_en_output_all as
(select X.* from Ptn_desire____more____2_Positive_286_en_output1 X)
union all
(select X.* from Ptn_desire____more____2_Positive_286_en_output2 X)
;



--
-- name  =desire + "more" + Positive_287
-- value =$mShould $mEmpty{0,5} @{0,1} more $mOpinionPos
-- output(1)=not $5\tNegative
--
create view Ptn_desire____more____Positive_287_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn_desire____more____Positive_287_en' as patternName
from (
   extract

   pattern
     (<mShould1.concept>) (<mEmpty1.concept>{0,5}) (<Tok1.match>{0,1}) ('more') (<mOpinionPos1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire____more____Positive_287_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire____more____Positive_287_en' as patternName
from Ptn_desire____more____Positive_287_en X
consolidate on X.pattern_val;



--
-- name  =desire + 2 Positive/Contextual + Topic_288
-- value =$mShould ($mBe|$mHave){1} ($mOpinionPos|$Contextual) $mCoord ($mBe|$mHave){0,2} ($mOpinionPos|$Contextual) $mPrep $mDet? $mTopic
-- output(1)=$9\t#9\tnot $3\tNegative
-- output(2)=$9\t#9\tnot $6\tNegative
--
create view Ptn_desire___2_Positive_Contextual___Topic_288_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.concept2_1 as concept2_1,
   X.concept2_2 as concept2_2,
   X.type9 as type9,
   X.pattern_val as pattern_val,
   'Ptn_desire___2_Positive_Contextual___Topic_288_en' as patternName
from (
   extract
   mTopic1.typeName as type9,

   pattern
     (<mShould1.concept>) ((<mBe1.concept>|<mHave1.concept>){1, 1}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mCoord1.concept>) ((<mBe2.concept>|<mHave2.concept>){0,2}) (<PtnMerge_Contextual_mOpinionPos_en2.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 11 as concept1_1 and
     group 4 as concept1_2 and
     group 11 as concept2_1 and
     group 8 as concept2_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mCoord_en mCoord1, 
      mBe_en mBe2, 
      mHave_en mHave2, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en2, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_desire___2_Positive_Contextual___Topic_288_en_output1 as
select
   X.concept1_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___2_Positive_Contextual___Topic_288_en' as patternName
from Ptn_desire___2_Positive_Contextual___Topic_288_en X
consolidate on X.pattern_val;

create view Ptn_desire___2_Positive_Contextual___Topic_288_en_output2 as
select
   X.concept2_1 as concept1,
   X.type9 as type1,
   udf.addWordLeft('not', X.concept2_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_desire___2_Positive_Contextual___Topic_288_en' as patternName
from Ptn_desire___2_Positive_Contextual___Topic_288_en X
consolidate on X.pattern_val;

create view Ptn_desire___2_Positive_Contextual___Topic_288_en_output_all as
(select X.* from Ptn_desire___2_Positive_Contextual___Topic_288_en_output1 X)
union all
(select X.* from Ptn_desire___2_Positive_Contextual___Topic_288_en_output2 X)
;



--
-- name  =desire + 2 Positive_289
-- value =$mShould ($mBe|$mHave){1,2} $mOpinionPos $mCoord $mEmpty{0,2} $mOpinionPos
-- output(1)=not $3\tNegative
-- output(2)=not $6\tNegative
--
create view Ptn_desire___2_Positive_289_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.pattern_val as pattern_val,
   'Ptn_desire___2_Positive_289_en' as patternName
from (
   extract

   pattern
     (<mShould1.concept>) ((<mBe1.concept>|<mHave1.concept>){1,2}) (<mOpinionPos1.concept>) (<mCoord1.concept>) (<mEmpty1.concept>{0,2}) (<mOpinionPos2.concept>) 
   return
     group 4 as concept1_1 and
     group 7 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionPos_en mOpinionPos1, 
      mCoord_en mCoord1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos2

) X
consolidate on X.pattern_val;



create view Ptn_desire___2_Positive_289_en_output1 as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___2_Positive_289_en' as patternName
from Ptn_desire___2_Positive_289_en X
consolidate on X.pattern_val;

create view Ptn_desire___2_Positive_289_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_desire___2_Positive_289_en' as patternName
from Ptn_desire___2_Positive_289_en X
consolidate on X.pattern_val;

create view Ptn_desire___2_Positive_289_en_output_all as
(select X.* from Ptn_desire___2_Positive_289_en_output1 X)
union all
(select X.* from Ptn_desire___2_Positive_289_en_output2 X)
;



--
-- name  =desire + Pos + Positive/Contextual + Topic_290
-- value =$mShould $mEmpty{0,3} ($mOpinionPos|$Contextual) $mPrep $mDet{0,2} $mTopic
-- output(1)=$6\t#6\tnot $3\tNegative
--
create view Ptn_desire___Pos___Positive_Contextual___Topic_290_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_desire___Pos___Positive_Contextual___Topic_290_en' as patternName
from (
   extract
   mTopic1.typeName as type6,

   pattern
     (<mShould1.concept>) (<mEmpty1.concept>{0,3}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) (<mPrep1.concept>) (<mDet1.concept>{0,2}) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Pos___Positive_Contextual___Topic_290_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Pos___Positive_Contextual___Topic_290_en' as patternName
from Ptn_desire___Pos___Positive_Contextual___Topic_290_en X
consolidate on X.pattern_val;



--
-- name  =desire + Positive_291
-- value =$mShould $mEmpty{0,3} @{0,1} $mOpinionPos
-- output(1)=not $4\tNegative
--
create view Ptn_desire___Positive_291_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn_desire___Positive_291_en' as patternName
from (
   extract

   pattern
     (<mShould1.concept>) (<mEmpty1.concept>{0,3}) (<Tok1.match>{0,1}) (<mOpinionPos1.concept>) 
   return
     group 4 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Positive_291_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Positive_291_en' as patternName
from Ptn_desire___Positive_291_en X
consolidate on X.pattern_val;



--
-- name  =Negative/Contextual + Positive_292
-- value =($Contextual|$mOpinionNeg) $mOpinionPos
-- output(1)=not $2\tNegative
--
create view Ptn_Negative_Contextual___Positive_292_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn_Negative_Contextual___Positive_292_en' as patternName
from (
   extract

   pattern
     (<Contextual1.concept>|<mOpinionNeg1.concept>) (<mOpinionPos1.concept>) 
   return
     group 2 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Contextual_en Contextual1, 
      mOpinionNeg_en mOpinionNeg1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_Negative_Contextual___Positive_292_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative_Contextual___Positive_292_en' as patternName
from Ptn_Negative_Contextual___Positive_292_en X
consolidate on X.pattern_val;



--
-- name  =Negative + Positive_293
-- value =$mOpinionNeg ($mBe|$mHave){1,2} $mOpinionPos
-- output(1)=$1 $3\tPositive
--
create view Ptn_Negative___Positive_293_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.pattern_val as pattern_val,
   'Ptn_Negative___Positive_293_en' as patternName
from (
   extract

   pattern
     (<mOpinionNeg1.concept>) ((<mBe1.concept>|<mHave1.concept>){1,2}) (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mBe_en mBe1, 
      mHave_en mHave1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_Negative___Positive_293_en_output_all as
select
udf.addSpanRight(X.concept1_1, X.concept1_2) as concept1,
   'Positive' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative___Positive_293_en' as patternName
from Ptn_Negative___Positive_293_en X
consolidate on X.pattern_val;



--
-- name  =Positive + "or" + Negative_294
-- value =$mOpinionPos or $mOpinionNeg
-- output(1)=$1\t#1
-- output(2)=not $3\tPositive
--
create view Ptn_Positive____or____Negative_294_en as
select
   X.concept1_1 as concept1_1,
   X.concept2_1 as concept2_1,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_Positive____or____Negative_294_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type1,

   pattern
     (<mOpinionPos1.concept>) ('or') (<mOpinionNeg1.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept2_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn_Positive____or____Negative_294_en_output1 as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Positive____or____Negative_294_en' as patternName
from Ptn_Positive____or____Negative_294_en X
consolidate on X.pattern_val;

create view Ptn_Positive____or____Negative_294_en_output2 as
select
   udf.addWordLeft('not', X.concept2_1) as concept1,
   'Positive' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '2' as outputRank,
   'Ptn_Positive____or____Negative_294_en' as patternName
from Ptn_Positive____or____Negative_294_en X
consolidate on X.pattern_val;

create view Ptn_Positive____or____Negative_294_en_output_all as
(select X.* from Ptn_Positive____or____Negative_294_en_output1 X)
union all
(select X.* from Ptn_Positive____or____Negative_294_en_output2 X)
;



--
-- name  =Negative + '"to" + Positive_295
-- value =$mOpinionNeg to $mOpinionPos
-- output(1)=not $3\t#1
--
create view Ptn_Negative_____to____Positive_295_en as
select
   X.concept1_1 as concept1_1,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_Negative_____to____Positive_295_en' as patternName
from (
   extract
   mOpinionNeg1.typeName as type1,

   pattern
     (<mOpinionNeg1.concept>) ('to') (<mOpinionPos1.concept>) 
   return
     group 3 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionNeg_en mOpinionNeg1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_Negative_____to____Positive_295_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Negative_____to____Positive_295_en' as patternName
from Ptn_Negative_____to____Positive_295_en X
consolidate on X.pattern_val;



--
-- name  =Uncertain + Negative_296
-- value =(nothing|$Uncertain) $NegativeFunctioning
-- output(1)=not $2\tPositiveFunctioning
--
create view Ptn_Uncertain___Negative_296_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn_Uncertain___Negative_296_en' as patternName
from (
   extract

   pattern
     ('nothing'|<Uncertain1.concept>) (<NegativeFunctioning1.concept>) 
   return
     group 2 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Uncertain_en Uncertain1, 
      NegativeFunctioning_en NegativeFunctioning1

) X
consolidate on X.pattern_val;



create view Ptn_Uncertain___Negative_296_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'PositiveFunctioning' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Uncertain___Negative_296_en' as patternName
from Ptn_Uncertain___Negative_296_en X
consolidate on X.pattern_val;



--
-- name  =Positive + Negative_297
-- value =$mOpinionPos $mPrep $mOpinionNeg
-- output(1)=not $3\t#1
--
create view Ptn_Positive___Negative_297_en as
select
   X.concept1_1 as concept1_1,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_Positive___Negative_297_en' as patternName
from (
   extract
   mOpinionPos1.typeName as type1,

   pattern
     (<mOpinionPos1.concept>) (<mPrep1.concept>) (<mOpinionNeg1.concept>) 
   return
     group 3 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mOpinionPos_en mOpinionPos1, 
      mPrep_en mPrep1, 
      mOpinionNeg_en mOpinionNeg1

) X
consolidate on X.pattern_val;



create view Ptn_Positive___Negative_297_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Positive___Negative_297_en' as patternName
from Ptn_Positive___Negative_297_en X
consolidate on X.pattern_val;



--
-- name  =Uncertain + Positive_298
-- value =$Uncertain $mEmpty{0,3} $mOpinionPos
-- output(1)=not $3\tNegative
--
create view Ptn_Uncertain___Positive_298_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn_Uncertain___Positive_298_en' as patternName
from (
   extract

   pattern
     (<Uncertain1.concept>) (<mEmpty1.concept>{0,3}) (<mOpinionPos1.concept>) 
   return
     group 3 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Uncertain_en Uncertain1, 
      mEmpty_en mEmpty1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_Uncertain___Positive_298_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Uncertain___Positive_298_en' as patternName
from Ptn_Uncertain___Positive_298_en X
consolidate on X.pattern_val;



--
-- name  =Uncertain + "but" + opinion + topic_299
-- value =(nothing|$Uncertain) but ($mOpinionPos|$mOpinionNeg) $mPrep $mDet? $mTopic
-- output(1)=$6\t#6\t$3\t#3
--
create view Ptn_Uncertain____but____opinion___topic_299_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_Uncertain____but____opinion___topic_299_en' as patternName
from (
   extract
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type3,
   mTopic1.typeName as type6,

   pattern
     ('nothing'|<Uncertain1.concept>) ('but') (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) (<mPrep1.concept>) (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 6 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Uncertain_en Uncertain1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_Uncertain____but____opinion___topic_299_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Uncertain____but____opinion___topic_299_en' as patternName
from Ptn_Uncertain____but____opinion___topic_299_en X
consolidate on X.pattern_val;



--
-- name  =Uncertain + "but" + opinion_300
-- value =(nothing|$Uncertain) here? $SEP? but $mAdverb? ($mOpinionPos|$mOpinionNeg)
-- output(1)=$6\t#6
--
create view Ptn_Uncertain____but____opinion_300_en as
select
   X.concept1_1 as concept1_1,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn_Uncertain____but____opinion_300_en' as patternName
from (
   extract
   PtnMerge_mOpinionNeg_mOpinionPos_en1.typeName as type6,

   pattern
     ('nothing'|<Uncertain1.concept>) ('here'?) (<SEP1.concept>?) ('but') (<mAdverb1.concept>?) (<PtnMerge_mOpinionNeg_mOpinionPos_en1.concept>) 
   return
     group 6 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      Uncertain_en Uncertain1, 
      SEP_en SEP1, 
      mAdverb_en mAdverb1, 
      PtnMerge_mOpinionNeg_mOpinionPos_en PtnMerge_mOpinionNeg_mOpinionPos_en1

) X
consolidate on X.pattern_val;



create view Ptn_Uncertain____but____opinion_300_en_output_all as
select
   X.concept1_1 as concept1,
   X.type6 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Uncertain____but____opinion_300_en' as patternName
from Ptn_Uncertain____but____opinion_300_en X
consolidate on X.pattern_val;



--
-- name  =desire + Contextual + topic_301
-- value =$mShould $mEmpty{0,5} @{0,1} $Contextual $mTopic
-- output(1)=$5\t#5\tnot $4\tNegative
--
create view Ptn_desire___Contextual___topic_301_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn_desire___Contextual___topic_301_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     (<mShould1.concept>) (<mEmpty1.concept>{0,5}) (<Tok1.match>{0,1}) (<Contextual1.concept>) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 4 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      Contextual_en Contextual1, 
      mTopic_en mTopic1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Contextual___topic_301_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Contextual___topic_301_en' as patternName
from Ptn_desire___Contextual___topic_301_en X
consolidate on X.pattern_val;



--
-- name  =desire + Contextual_302
-- value =$mShould $mEmpty{0,5} @{0,1} $Contextual
-- output(1)=not $4\tNegative
--
create view Ptn_desire___Contextual_302_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn_desire___Contextual_302_en' as patternName
from (
   extract

   pattern
     (<mShould1.concept>) (<mEmpty1.concept>{0,5}) (<Tok1.match>{0,1}) (<Contextual1.concept>) 
   return
     group 4 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mShould_en mShould1, 
      mEmpty_en mEmpty1, 
      Contextual_en Contextual1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_desire___Contextual_302_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_desire___Contextual_302_en' as patternName
from Ptn_desire___Contextual_302_en X
consolidate on X.pattern_val;



--
-- name  =topic + desire + "more" + Positive/Contextual_303
-- value =$mTopic $mSupport $mPronoun $mShould $mPronoun $mBe more $mOpinionPos
-- output(1)=$1\t#1\tnot $8\tNegative
--
create view Ptn_topic___desire____more____Positive_Contextual_303_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic___desire____more____Positive_Contextual_303_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) (<mSupport1.concept>) (<mPronoun1.concept>) (<mShould1.concept>) (<mPronoun2.concept>) (<mBe1.concept>) ('more') (<mOpinionPos1.concept>) 
   return
     group 1 as concept1_1 and
     group 8 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mSupport_en mSupport1, 
      mPronoun_en mPronoun1, 
      mShould_en mShould1, 
      mPronoun_en mPronoun2, 
      mBe_en mBe1, 
      mOpinionPos_en mOpinionPos1

) X
consolidate on X.pattern_val;



create view Ptn_topic___desire____more____Positive_Contextual_303_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   udf.addWordLeft('not', X.concept1_2) as concept2,
   'Negative' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___desire____more____Positive_Contextual_303_en' as patternName
from Ptn_topic___desire____more____Positive_Contextual_303_en X
consolidate on X.pattern_val;



--
-- name  ="more/less" + opinion_304
-- value =(more|less) @{0,1} ($mOpinionPos|$Contextual)
-- output(1)=not $3\tNegative
--
create view Ptn__more_less____opinion_304_en as
select
   X.concept1_1 as concept1_1,
   X.pattern_val as pattern_val,
   'Ptn__more_less____opinion_304_en' as patternName
from (
   extract

   pattern
     ('more'|'less') (<Tok1.match>{0,1}) (<PtnMerge_Contextual_mOpinionPos_en1.concept>) 
   return
     group 3 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_Contextual_mOpinionPos_en PtnMerge_Contextual_mOpinionPos_en1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn__more_less____opinion_304_en_output_all as
select
   udf.addWordLeft('not', X.concept1_1) as concept1,
   'Negative' as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more_less____opinion_304_en' as patternName
from Ptn__more_less____opinion_304_en X
consolidate on X.pattern_val;



--
-- name  =opinion_305
-- value =($mOpinion|$mPosFeelingEmoticon|$mNegFeelingEmoticon)
-- output(1)=$1\t#1
--
create view Ptn_opinion_305_en as
select
   X.concept1_1 as concept1_1,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_opinion_305_en' as patternName
from (
   extract
   PtnMerge_mNegFeelingEmoticon_mOpinion_mPosFeelingEmoticon_en1.typeName as type1,

   pattern
     (<PtnMerge_mNegFeelingEmoticon_mOpinion_mPosFeelingEmoticon_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_mNegFeelingEmoticon_mOpinion_mPosFeelingEmoticon_en PtnMerge_mNegFeelingEmoticon_mOpinion_mPosFeelingEmoticon_en1

) X
consolidate on X.pattern_val;



create view Ptn_opinion_305_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_opinion_305_en' as patternName
from Ptn_opinion_305_en X
consolidate on X.pattern_val;





--
-- name  ="more/less" + topic_307
-- value =(more|less) ($mPrep|$mDet){0,3} $mTopic
-- output(1)=$3\t#3\t$1\tContextual
--
create view Ptn__more_less____topic_307_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn__more_less____topic_307_en' as patternName
from (
   extract
   mTopic1.typeName as type3,

   pattern
     (<PtnMerge_less_more_en1.concept>) ((<mPrep1.concept>|<mDet1.concept>){0,3}) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 1 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      PtnMerge_less_more_en PtnMerge_less_more_en1, 
      mPrep_en mPrep1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__more_less____topic_307_en_output_all as
select
   X.concept1_1 as concept1,
   X.type3 as type1,
   X.concept1_2 as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__more_less____topic_307_en' as patternName
from Ptn__more_less____topic_307_en X
consolidate on X.pattern_val;



--
-- name  ="has" + topic + topic_308
-- value =$mHave (all of?|every) $mDet? $mTopic $mDet? $mTopic ($mShould $mHave)
-- output(1)=$4\t#4\tmeets needs\tPositive\t$6\t#6
--
create view Ptn__has____topic___topic_308_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type4 as type4,
   X.type6 as type6,
   X.pattern_val as pattern_val,
   'Ptn__has____topic___topic_308_en' as patternName
from (
   extract
   mTopic1.typeName as type4,
   mTopic2.typeName as type6,

   pattern
     (<mHave1.concept>) ('all''of'?|'every') (<mDet1.concept>?) (<mTopic1.concept>) (<mDet2.concept>?) (<mTopic2.concept>) (<mShould1.concept> <mHave2.concept>) 
   return
     group 4 as concept1_1 and
     group 6 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mHave_en mHave1, 
      mDet_en mDet1, 
      mTopic_en mTopic1, 
      mDet_en mDet2, 
      mTopic_en mTopic2, 
      mShould_en mShould1, 
      mHave_en mHave2

) X
consolidate on X.pattern_val;



create view Ptn__has____topic___topic_308_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   'meets needs' as concept2,
   'Positive' as type2,
   X.concept1_2 as concept3,
   X.type6 as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__has____topic___topic_308_en' as patternName
from Ptn__has____topic___topic_308_en X
consolidate on X.pattern_val;



--
-- name  ="has" + topic_309
-- value =$mHave (all of?|every) $mDet? $mTopic
-- output(1)=$4\t#4\tmeets needs\tPositive
--
create view Ptn__has____topic_309_en as
select
   X.concept1_1 as concept1_1,
   X.type4 as type4,
   X.pattern_val as pattern_val,
   'Ptn__has____topic_309_en' as patternName
from (
   extract
   mTopic1.typeName as type4,

   pattern
     (<mHave1.concept>) ('all''of'?|'every') (<mDet1.concept>?) (<mTopic1.concept>) 
   return
     group 4 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mHave_en mHave1, 
      mDet_en mDet1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__has____topic_309_en_output_all as
select
   X.concept1_1 as concept1,
   X.type4 as type1,
   'meets needs' as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__has____topic_309_en' as patternName
from Ptn__has____topic_309_en X
consolidate on X.pattern_val;



--
-- name  =topic + nonlinguistic entity_310
-- value =$mTopic $mEmpty ($Percent|$Currency)
-- output(1)=$1\t#1\t$3\t#3
--
create view Ptn_topic___nonlinguistic_entity_310_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_topic___nonlinguistic_entity_310_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_Currency_Percent_en1.typeName as type3,

   pattern
     (<mTopic1.concept>) (<mEmpty1.concept>) (<PtnMerge_Currency_Percent_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      mEmpty_en mEmpty1, 
      PtnMerge_Currency_Percent_en PtnMerge_Currency_Percent_en1

) X
consolidate on X.pattern_val;



create view Ptn_topic___nonlinguistic_entity_310_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___nonlinguistic_entity_310_en' as patternName
from Ptn_topic___nonlinguistic_entity_310_en X
consolidate on X.pattern_val;



--
-- name  ="super" + topic_311
-- value =super $mTopic
-- output(1)=$2\t#2\texcellent\tPositive
--
create view Ptn__super____topic_311_en as
select
   X.concept1_1 as concept1_1,
   X.type2 as type2,
   X.pattern_val as pattern_val,
   'Ptn__super____topic_311_en' as patternName
from (
   extract
   mTopic1.typeName as type2,

   pattern
     ('super') (<mTopic1.concept>) 
   return
     group 2 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__super____topic_311_en_output_all as
select
   X.concept1_1 as concept1,
   X.type2 as type1,
   'excellent' as concept2,
   'Positive' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__super____topic_311_en' as patternName
from Ptn__super____topic_311_en X
consolidate on X.pattern_val;



--
-- name  =topic + emoticon_312
-- value =$mTopic @{0,1} ($NegativeFeeling_Emoticon|$PositiveFeeling_Emoticon)
-- output(1)=$1\t#1\t$3\t#3
--
create view Ptn_topic___emoticon_312_en as
select
   X.concept1_1 as concept1_1,
   X.concept1_2 as concept1_2,
   X.type1 as type1,
   X.type3 as type3,
   X.pattern_val as pattern_val,
   'Ptn_topic___emoticon_312_en' as patternName
from (
   extract
   mTopic1.typeName as type1,
   PtnMerge_NegativeFeeling_Emoticon_PositiveFeeling_Emoticon_en1.typeName as type3,

   pattern
     (<mTopic1.concept>) (<Tok1.match>{0,1}) (<PtnMerge_NegativeFeeling_Emoticon_PositiveFeeling_Emoticon_en1.concept>) 
   return
     group 1 as concept1_1 and
     group 3 as concept1_2 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1, 
      PtnMerge_NegativeFeeling_Emoticon_PositiveFeeling_Emoticon_en PtnMerge_NegativeFeeling_Emoticon_PositiveFeeling_Emoticon_en1, 
      Tok Tok1

) X
consolidate on X.pattern_val;



create view Ptn_topic___emoticon_312_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   X.concept1_2 as concept2,
   X.type3 as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic___emoticon_312_en' as patternName
from Ptn_topic___emoticon_312_en X
consolidate on X.pattern_val;



--
-- name  ="why don't you have" + topic_313
-- value =why $mSupportNegPart $mPronoun $mHave $mTopic
-- output(1)=$5\t#5\tno\tContextual
--
create view Ptn__why_don_t_you_have____topic_313_en as
select
   X.concept1_1 as concept1_1,
   X.type5 as type5,
   X.pattern_val as pattern_val,
   'Ptn__why_don_t_you_have____topic_313_en' as patternName
from (
   extract
   mTopic1.typeName as type5,

   pattern
     ('why') (<mSupportNegPart1.concept>) (<mPronoun1.concept>) (<mHave1.concept>) (<mTopic1.concept>) 
   return
     group 5 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mSupportNegPart_en mSupportNegPart1, 
      mPronoun_en mPronoun1, 
      mHave_en mHave1, 
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn__why_don_t_you_have____topic_313_en_output_all as
select
   X.concept1_1 as concept1,
   X.type5 as type1,
   'no' as concept2,
   'Contextual' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn__why_don_t_you_have____topic_313_en' as patternName
from Ptn__why_don_t_you_have____topic_313_en X
consolidate on X.pattern_val;



--
-- name  =topic_314
-- value =$mTopic
-- output(1)=$1\t#1
--
create view Ptn_topic_314_en as
select
   X.concept1_1 as concept1_1,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_topic_314_en' as patternName
from (
   extract
   mTopic1.typeName as type1,

   pattern
     (<mTopic1.concept>) 
   return
     group 1 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mTopic_en mTopic1

) X
consolidate on X.pattern_val;



create view Ptn_topic_314_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_topic_314_en' as patternName
from Ptn_topic_314_en X
consolidate on X.pattern_val;



--
-- name  =Nonlinguistic Entity_315
-- value =$mNonLingEntities
-- output(1)=$1\t#1
--
create view Ptn_Nonlinguistic_Entity_315_en as
select
   X.concept1_1 as concept1_1,
   X.type1 as type1,
   X.pattern_val as pattern_val,
   'Ptn_Nonlinguistic_Entity_315_en' as patternName
from (
   extract
   mNonLingEntities1.typeName as type1,

   pattern
     (<mNonLingEntities1.concept>) 
   return
     group 1 as concept1_1 and
     group 0 as pattern_val
   with inline_match
   on Sentences.sentence
   from
      mNonLingEntities_en mNonLingEntities1

) X
consolidate on X.pattern_val;



create view Ptn_Nonlinguistic_Entity_315_en_output_all as
select
   X.concept1_1 as concept1,
   X.type1 as type1,
   'Null' as concept2, 'Null' as type2,
   'Null' as concept3, 'Null' as type3,
   'Null' as concept4, 'Null' as type4,
   'Null' as concept5, 'Null' as type5,
   'Null' as concept6, 'Null' as type6,
   X.pattern_val as pattern_val,
   '1' as outputRank,
   'Ptn_Nonlinguistic_Entity_315_en' as patternName
from Ptn_Nonlinguistic_Entity_315_en X
consolidate on X.pattern_val;



create view pattern_outputs_union_unconsolidated as
(select 1 as priorityLevel, X.* from Ptn__not____Positive___2_topics_2_en_output_all X)
union all
(select 2 as priorityLevel, X.* from Ptn__not____Negative___topic___topic___opinion_3_en_output_all X)
union all
(select 3 as priorityLevel, X.* from Ptn__not____Negative___2_topics_6_en_output_all X)
union all
(select 4 as priorityLevel, X.* from Ptn__no____2_topics_7_en_output_all X)
union all
(select 5 as priorityLevel, X.* from Ptn__not____2_Positive_8_en_output_all X)
union all
(select 6 as priorityLevel, X.* from Ptn_desire____not____Negative___topic_9_en_output_all X)
union all
(select 7 as priorityLevel, X.* from Ptn__not____Negative___topic_10_en_output_all X)
union all
(select 8 as priorityLevel, X.* from Ptn__not____2_Negative___topic_11_en_output_all X)
union all
(select 9 as priorityLevel, X.* from Ptn__not____2_Negative___topic_12_en_output_all X)
union all
(select 10 as priorityLevel, X.* from Ptn__not____2_Negative___topic_13_en_output_all X)
union all
(select 11 as priorityLevel, X.* from Ptn__not_____such____opinion___topic_14_en_output_all X)
union all
(select 12 as priorityLevel, X.* from Ptn__not____Negative___topic_15_en_output_all X)
union all
(select 13 as priorityLevel, X.* from Ptn__not____NegativeAttitude___topic_16_en_output_all X)
union all
(select 14 as priorityLevel, X.* from Ptn__not____NegativeBudget___topic_17_en_output_all X)
union all
(select 15 as priorityLevel, X.* from Ptn__not____NegativeCompetence___topic_18_en_output_all X)
union all
(select 16 as priorityLevel, X.* from Ptn__not____NegativeFeeling___topic_19_en_output_all X)
union all
(select 17 as priorityLevel, X.* from Ptn__not____NegativeFunctioning___topic_20_en_output_all X)
union all
(select 18 as priorityLevel, X.* from Ptn__no____Negative___comma_21_en_output_all X)
union all
(select 19 as priorityLevel, X.* from Ptn__not____Positive___topic_22_en_output_all X)
union all
(select 20 as priorityLevel, X.* from Ptn__no____topic___Negative_23_en_output_all X)
union all
(select 21 as priorityLevel, X.* from Ptn__no____topic___Negative_24_en_output_all X)
union all
(select 22 as priorityLevel, X.* from Ptn__no____topic___Negative_25_en_output_all X)
union all
(select 23 as priorityLevel, X.* from Ptn__no____topic___Negative_26_en_output_all X)
union all
(select 24 as priorityLevel, X.* from Ptn__no____topic___Negative_27_en_output_all X)
union all
(select 25 as priorityLevel, X.* from Ptn__no____topic___Negative_28_en_output_all X)
union all
(select 26 as priorityLevel, X.* from Ptn__not____Negative_29_en_output_all X)
union all
(select 27 as priorityLevel, X.* from Ptn__no____topic_30_en_output_all X)
union all
(select 28 as priorityLevel, X.* from Ptn__not____Positive___topic_31_en_output_all X)
union all
(select 29 as priorityLevel, X.* from Ptn__not____Positive___topic_32_en_output_all X)
union all
(select 30 as priorityLevel, X.* from Ptn__not____Positive___topic_33_en_output_all X)
union all
(select 31 as priorityLevel, X.* from Ptn__not____Positive___topic_34_en_output_all X)
union all
(select 32 as priorityLevel, X.* from Ptn__not____Positive___topic_35_en_output_all X)
union all
(select 33 as priorityLevel, X.* from Ptn_2_topics____not____Positive_36_en_output_all X)
union all
(select 34 as priorityLevel, X.* from Ptn__not____Positive___topic_37_en_output_all X)
union all
(select 35 as priorityLevel, X.* from Ptn__not____topic___Positive_38_en_output_all X)
union all
(select 36 as priorityLevel, X.* from Ptn__not____topic___Negative_39_en_output_all X)
union all
(select 37 as priorityLevel, X.* from Ptn__not____Negative___topic_40_en_output_all X)
union all
(select 38 as priorityLevel, X.* from Ptn__not____Positive___topic_41_en_output_all X)
union all
(select 39 as priorityLevel, X.* from Ptn__not____Negative___topic_42_en_output_all X)
union all
(select 40 as priorityLevel, X.* from Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en_output_all X)
union all
(select 41 as priorityLevel, X.* from Ptn_topic____not_too____2_Positive_Contextual_44_en_output_all X)
union all
(select 42 as priorityLevel, X.* from Ptn_topic____not__Positive___Negative_45_en_output_all X)
union all
(select 43 as priorityLevel, X.* from Ptn_topic____too____2_Positive_Contextual_46_en_output_all X)
union all
(select 44 as priorityLevel, X.* from Ptn_topic____not____Positive___topic_Negative_49_en_output_all X)
union all
(select 45 as priorityLevel, X.* from Ptn_topic___Negative___Negative___prep___topic_50_en_output_all X)
union all
(select 46 as priorityLevel, X.* from Ptn_topic___Negative___Negative_51_en_output_all X)
union all
(select 47 as priorityLevel, X.* from Ptn_Negative____not____Positive_52_en_output_all X)
union all
(select 48 as priorityLevel, X.* from Ptn_topic____not____Negative_53_en_output_all X)
union all
(select 49 as priorityLevel, X.* from Ptn_topic____not____NegativeAttitude_54_en_output_all X)
union all
(select 50 as priorityLevel, X.* from Ptn_topic____not____NegativeBudget_55_en_output_all X)
union all
(select 51 as priorityLevel, X.* from Ptn_topic____not____NegativeCompetence_56_en_output_all X)
union all
(select 52 as priorityLevel, X.* from Ptn_topic____not____NegativeFeeling_57_en_output_all X)
union all
(select 53 as priorityLevel, X.* from Ptn_topic____not____NegativeFunctioning_58_en_output_all X)
union all
(select 54 as priorityLevel, X.* from Ptn_topic____not____Positive_59_en_output_all X)
union all
(select 55 as priorityLevel, X.* from Ptn_topic____not____PositiveAttitude_60_en_output_all X)
union all
(select 56 as priorityLevel, X.* from Ptn_topic____not____PositiveBudget_61_en_output_all X)
union all
(select 57 as priorityLevel, X.* from Ptn_topic____not____PositiveCompetence_62_en_output_all X)
union all
(select 58 as priorityLevel, X.* from Ptn_topic____not____PositiveFeeling_63_en_output_all X)
union all
(select 59 as priorityLevel, X.* from Ptn_topic____not____PositiveFunctioning_64_en_output_all X)
union all
(select 60 as priorityLevel, X.* from Ptn_Positive___topic___Negative_65_en_output_all X)
union all
(select 61 as priorityLevel, X.* from Ptn_2_topics____Opinion____more____Positive_69_en_output_all X)
union all
(select 62 as priorityLevel, X.* from Ptn_2_topics____more____Positive_71_en_output_all X)
union all
(select 63 as priorityLevel, X.* from Ptn_2_topics___2_opinions_72_en_output_all X)
union all
(select 64 as priorityLevel, X.* from Ptn_2_topics____less____Negative_73_en_output_all X)
union all
(select 65 as priorityLevel, X.* from Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en_output_all X)
union all
(select 66 as priorityLevel, X.* from Ptn_topic___desire___opinion____and_____more____Positive_75_en_output_all X)
union all
(select 67 as priorityLevel, X.* from Ptn_topic___desire____more____Positive____and____Positive_76_en_output_all X)
union all
(select 68 as priorityLevel, X.* from Ptn_topic___desire___opinion____and_____less____Negative_77_en_output_all X)
union all
(select 69 as priorityLevel, X.* from Ptn_topic___desire____more____Positive_78_en_output_all X)
union all
(select 70 as priorityLevel, X.* from Ptn_topic___desire____more____Positive_79_en_output_all X)
union all
(select 71 as priorityLevel, X.* from Ptn_topic___desire____more____Positive_80_en_output_all X)
union all
(select 72 as priorityLevel, X.* from Ptn_topic___desire____more____Positive_81_en_output_all X)
union all
(select 73 as priorityLevel, X.* from Ptn_topic___desire____more____Positive_82_en_output_all X)
union all
(select 74 as priorityLevel, X.* from Ptn_topic___desire____more____Positive_83_en_output_all X)
union all
(select 75 as priorityLevel, X.* from Ptn_topic___desire____less____Negative_84_en_output_all X)
union all
(select 76 as priorityLevel, X.* from Ptn_topic____less____Positive____than____2_topics_87_en_output_all X)
union all
(select 77 as priorityLevel, X.* from Ptn_topic____less____Negative____than____2_topics_89_en_output_all X)
union all
(select 78 as priorityLevel, X.* from Ptn_topic___opinion____than____2_topics_91_en_output_all X)
union all
(select 79 as priorityLevel, X.* from Ptn_topic____more____opinion____than____topic_92_en_output_all X)
union all
(select 80 as priorityLevel, X.* from Ptn_topic____less____Positive____than____topic_93_en_output_all X)
union all
(select 81 as priorityLevel, X.* from Ptn_topic____not_as____Positive____as____topic_94_en_output_all X)
union all
(select 82 as priorityLevel, X.* from Ptn_topic____not_as____Positive____as__95_en_output_all X)
union all
(select 83 as priorityLevel, X.* from Ptn_topic____less____Negative____than____topic_96_en_output_all X)
union all
(select 84 as priorityLevel, X.* from Ptn_topic____not_as____Negative____as____topic_97_en_output_all X)
union all
(select 85 as priorityLevel, X.* from Ptn_topic___opinion____than____topic_98_en_output_all X)
union all
(select 86 as priorityLevel, X.* from Ptn__more____Positive____than____2_topics_99_en_output_all X)
union all
(select 87 as priorityLevel, X.* from Ptn__not_as____Positive____as____2_topics_100_en_output_all X)
union all
(select 88 as priorityLevel, X.* from Ptn__less____Positive____than____2_topics_101_en_output_all X)
union all
(select 89 as priorityLevel, X.* from Ptn__not_as____Negative____as____2_topics_102_en_output_all X)
union all
(select 90 as priorityLevel, X.* from Ptn__less____Negative____than____2_topics_103_en_output_all X)
union all
(select 91 as priorityLevel, X.* from Ptn_opinion____than____2_topics_104_en_output_all X)
union all
(select 92 as priorityLevel, X.* from Ptn__more____Positive____than____topic_105_en_output_all X)
union all
(select 93 as priorityLevel, X.* from Ptn__less____Positive____than____topic_106_en_output_all X)
union all
(select 94 as priorityLevel, X.* from Ptn__not_as____Positive____as____topic_107_en_output_all X)
union all
(select 95 as priorityLevel, X.* from Ptn__less____Negative____than____topic_108_en_output_all X)
union all
(select 96 as priorityLevel, X.* from Ptn__not_as____Negative____as____topic_109_en_output_all X)
union all
(select 97 as priorityLevel, X.* from Ptn_opinion____than____topic_110_en_output_all X)
union all
(select 98 as priorityLevel, X.* from Ptn_Negative___Positive___topic_111_en_output_all X)
union all
(select 99 as priorityLevel, X.* from Ptn_topic____not_____less_more____opinion_112_en_output_all X)
union all
(select 100 as priorityLevel, X.* from Ptn_topic____not____Contextual_113_en_output_all X)
union all
(select 101 as priorityLevel, X.* from Ptn_3_topics___opinion_114_en_output_all X)
union all
(select 102 as priorityLevel, X.* from Ptn_topic___topic___2_opinions_115_en_output_all X)
union all
(select 103 as priorityLevel, X.* from Ptn_2_topics___Positive___NegativeEmoticon_117_en_output_all X)
union all
(select 104 as priorityLevel, X.* from Ptn_topic___Positive___NegativeEmoticon_118_en_output_all X)
union all
(select 105 as priorityLevel, X.* from Ptn_2_topics___opinion_119_en_output_all X)
union all
(select 106 as priorityLevel, X.* from Ptn_topic___4_opinions_120_en_output_all X)
union all
(select 107 as priorityLevel, X.* from Ptn_topic___3_opinions_121_en_output_all X)
union all
(select 108 as priorityLevel, X.* from Ptn_topic___2_opinions___topic_122_en_output_all X)
union all
(select 109 as priorityLevel, X.* from Ptn_topic___opinion___topic___opinion_123_en_output_all X)
union all
(select 110 as priorityLevel, X.* from Ptn_topic___opinion____not____Positive_Contextual_124_en_output_all X)
union all
(select 111 as priorityLevel, X.* from Ptn_topic___opinion____too____Positive_Contextual_125_en_output_all X)
union all
(select 112 as priorityLevel, X.* from Ptn_topic___opinion____too____Negative_126_en_output_all X)
union all
(select 113 as priorityLevel, X.* from Ptn_topic_Negative___opinion____not____Positive_127_en_output_all X)
union all
(select 114 as priorityLevel, X.* from Ptn_topic___opinion____not____Negative_128_en_output_all X)
union all
(select 115 as priorityLevel, X.* from Ptn_topic___opinion____no____Negative_129_en_output_all X)
union all
(select 116 as priorityLevel, X.* from Ptn_topic____too____opinion___opinion_130_en_output_all X)
union all
(select 117 as priorityLevel, X.* from Ptn_topic___2_opinions_131_en_output_all X)
union all
(select 118 as priorityLevel, X.* from Ptn_topic____has____2_opinion___topic_132_en_output_all X)
union all
(select 119 as priorityLevel, X.* from Ptn_topic____has____opinion___topic____than__133_en_output_all X)
union all
(select 120 as priorityLevel, X.* from Ptn_topic____has____opinion___topic_134_en_output_all X)
union all
(select 121 as priorityLevel, X.* from Ptn_topic___topic___Negative_135_en_output_all X)
union all
(select 122 as priorityLevel, X.* from Ptn_topic____more____Positive___topic_136_en_output_all X)
union all
(select 123 as priorityLevel, X.* from Ptn_topic____more____Positive_137_en_output_all X)
union all
(select 124 as priorityLevel, X.* from Ptn_topic____less____Negative_138_en_output_all X)
union all
(select 125 as priorityLevel, X.* from Ptn_topic___desire___opinion___2_topics_139_en_output_all X)
union all
(select 126 as priorityLevel, X.* from Ptn_topic___desire___opinion___topic_140_en_output_all X)
union all
(select 127 as priorityLevel, X.* from Ptn__seems_like____Positive___topic_141_en_output_all X)
union all
(select 128 as priorityLevel, X.* from Ptn_desire___Positive__2__topics_142_en_output_all X)
union all
(select 129 as priorityLevel, X.* from Ptn_desire___opinion___topic_143_en_output_all X)
union all
(select 130 as priorityLevel, X.* from Ptn_desire___topic___opinion___topic_144_en_output_all X)
union all
(select 131 as priorityLevel, X.* from Ptn_topic___desire_be___Positive_Contextual___topic_145_en_output_all X)
union all
(select 132 as priorityLevel, X.* from Ptn_topic___desire___Positive_Contextual___topic_146_en_output_all X)
union all
(select 133 as priorityLevel, X.* from Ptn_topic___desire___Positive_Contextual_147_en_output_all X)
union all
(select 134 as priorityLevel, X.* from Ptn_desire____more____Positive___topic_148_en_output_all X)
union all
(select 135 as priorityLevel, X.* from Ptn_desire___Positive____to____Positive___topic_149_en_output_all X)
union all
(select 136 as priorityLevel, X.* from Ptn_desire___Positive___topic___opinion_150_en_output_all X)
union all
(select 137 as priorityLevel, X.* from Ptn_desire___Positive___topic_151_en_output_all X)
union all
(select 138 as priorityLevel, X.* from Ptn_desire____more____2_topics_152_en_output_all X)
union all
(select 139 as priorityLevel, X.* from Ptn_desire____more____topic_153_en_output_all X)
union all
(select 140 as priorityLevel, X.* from Ptn_desire___Positive_Contextual___topic_154_en_output_all X)
union all
(select 141 as priorityLevel, X.* from Ptn_desire___2_topics_155_en_output_all X)
union all
(select 142 as priorityLevel, X.* from Ptn_desire___Negative___topic_156_en_output_all X)
union all
(select 143 as priorityLevel, X.* from Ptn_desire___topic___positive_157_en_output_all X)
union all
(select 144 as priorityLevel, X.* from Ptn_desire___topic_158_en_output_all X)
union all
(select 145 as priorityLevel, X.* from Ptn_topic___Contextual___topic_159_en_output_all X)
union all
(select 146 as priorityLevel, X.* from Ptn_topic___opinion___topic_160_en_output_all X)
union all
(select 147 as priorityLevel, X.* from Ptn_topic___opinion___topic_161_en_output_all X)
union all
(select 148 as priorityLevel, X.* from Ptn_2_topics___emoticon_162_en_output_all X)
union all
(select 149 as priorityLevel, X.* from Ptn_topic___opinion____compared_to____2_topic_163_en_output_all X)
union all
(select 150 as priorityLevel, X.* from Ptn_topic___opinion____compared_to____topic_164_en_output_all X)
union all
(select 151 as priorityLevel, X.* from Ptn_topic___prep___topic____too____Positive_Contextual_165_en_output_all X)
union all
(select 152 as priorityLevel, X.* from Ptn_topic____too____Positive_Contextual_166_en_output_all X)
union all
(select 153 as priorityLevel, X.* from Ptn_topic___opinion___topic_167_en_output_all X)
union all
(select 154 as priorityLevel, X.* from Ptn__less____Negative____more____Positive___topic_169_en_output_all X)
union all
(select 155 as priorityLevel, X.* from Ptn__more____Positive____less____Negative___topic_170_en_output_all X)
union all
(select 156 as priorityLevel, X.* from Ptn__more____Contextual____less____Contextual___topic_171_en_output_all X)
union all
(select 157 as priorityLevel, X.* from Ptn_3_opinions___topic_172_en_output_all X)
union all
(select 158 as priorityLevel, X.* from Ptn_2_opinions___topic_173_en_output_all X)
union all
(select 159 as priorityLevel, X.* from Ptn__get____topic___Positive___prep_topic_174_en_output_all X)
union all
(select 160 as priorityLevel, X.* from Ptn__get____topic___Positive_175_en_output_all X)
union all
(select 161 as priorityLevel, X.* from Ptn_topic_opinion____comma__176_en_output_all X)
union all
(select 162 as priorityLevel, X.* from Ptn_topic___desire____more____topic_177_en_output_all X)
union all
(select 163 as priorityLevel, X.* from Ptn_topic____more____Positive_Contextual_178_en_output_all X)
union all
(select 164 as priorityLevel, X.* from Ptn_topic____less____Negative_179_en_output_all X)
union all
(select 165 as priorityLevel, X.* from Ptn_topic____no____Positive_180_en_output_all X)
union all
(select 166 as priorityLevel, X.* from Ptn_topic____in_of_on____topic____not____Contextual_182_en_output_all X)
union all
(select 167 as priorityLevel, X.* from Ptn_topic____in_of_on____topic___opinion_183_en_output_all X)
union all
(select 168 as priorityLevel, X.* from Ptn_topic___prep___topic___2_opinions_184_en_output_all X)
union all
(select 169 as priorityLevel, X.* from Ptn_topic___prep___topic___opinion_185_en_output_all X)
union all
(select 170 as priorityLevel, X.* from Ptn_topic___opinion____than__186_en_output_all X)
union all
(select 171 as priorityLevel, X.* from Ptn_topic___opinion___topic_187_en_output_all X)
union all
(select 172 as priorityLevel, X.* from Ptn_topic___opinion___topic_188_en_output_all X)
union all
(select 173 as priorityLevel, X.* from Ptn_topic___opinion_189_en_output_all X)
union all
(select 174 as priorityLevel, X.* from Ptn_opinion___3_topics_196_en_output_all X)
union all
(select 175 as priorityLevel, X.* from Ptn_opinion___topic___topic____not____Positive_197_en_output_all X)
union all
(select 176 as priorityLevel, X.* from Ptn_opinions___topic___topic___Negative_198_en_output_all X)
union all
(select 177 as priorityLevel, X.* from Ptn_opinion___topic___topic___opinion_199_en_output_all X)
union all
(select 178 as priorityLevel, X.* from Ptn_opinion___2_topics_200_en_output_all X)
union all
(select 179 as priorityLevel, X.* from Ptn_opinion___3_topics_203_en_output_all X)
union all
(select 180 as priorityLevel, X.* from Ptn_Uncertain___topic___opinion_205_en_output_all X)
union all
(select 181 as priorityLevel, X.* from Ptn_Uncertain____but__topic_206_en_output_all X)
union all
(select 182 as priorityLevel, X.* from Ptn_Uncertain___topic_207_en_output_all X)
union all
(select 183 as priorityLevel, X.* from Ptn_topic___Uncertain_208_en_output_all X)
union all
(select 184 as priorityLevel, X.* from Ptn__more____Positive___2_topics_209_en_output_all X)
union all
(select 185 as priorityLevel, X.* from Ptn__less____Negative___topic___wish_210_en_output_all X)
union all
(select 186 as priorityLevel, X.* from Ptn__less____Negative___topic_211_en_output_all X)
union all
(select 187 as priorityLevel, X.* from Ptn__never____2_Positive___topic_214_en_output_all X)
union all
(select 188 as priorityLevel, X.* from Ptn__never____Positive___topic_215_en_output_all X)
union all
(select 189 as priorityLevel, X.* from Ptn__more____Positive___Positive___topic_216_en_output_all X)
union all
(select 190 as priorityLevel, X.* from Ptn__more____Positive___topic_217_en_output_all X)
union all
(select 191 as priorityLevel, X.* from Ptn_opinion___topic___topic_218_en_output_all X)
union all
(select 192 as priorityLevel, X.* from Ptn_opinion___topic___opinion___topic_219_en_output_all X)
union all
(select 193 as priorityLevel, X.* from Ptn_opinion___2_topics_220_en_output_all X)
union all
(select 194 as priorityLevel, X.* from Ptn_opinion___topic____are____topic_221_en_output_all X)
union all
(select 195 as priorityLevel, X.* from Ptn__nothing_____but____opinion_222_en_output_all X)
union all
(select 196 as priorityLevel, X.* from Ptn_opinion___topic____with____topic_223_en_output_all X)
union all
(select 197 as priorityLevel, X.* from Ptn_opinion____and____topic___opinion_224_en_output_all X)
union all
(select 198 as priorityLevel, X.* from Ptn_Positive____with____Negative___topic_225_en_output_all X)
union all
(select 199 as priorityLevel, X.* from Ptn_opinion____and_with____opinion___topic_226_en_output_all X)
union all
(select 200 as priorityLevel, X.* from Ptn_2_Negative___topic_227_en_output_all X)
union all
(select 201 as priorityLevel, X.* from Ptn_2_opinions___topic___prep___topic_228_en_output_all X)
union all
(select 202 as priorityLevel, X.* from Ptn_2_opinions___topic_229_en_output_all X)
union all
(select 203 as priorityLevel, X.* from Ptn_opinion___topic___opinion___topic_230_en_output_all X)
union all
(select 204 as priorityLevel, X.* from Ptn_Negative___topic___Neg_Contextual_231_en_output_all X)
union all
(select 205 as priorityLevel, X.* from Ptn_Negative___Negative___topic_232_en_output_all X)
union all
(select 206 as priorityLevel, X.* from Ptn_Positive_Contextual___topic___desire___Positive_233_en_output_all X)
union all
(select 207 as priorityLevel, X.* from Ptn_Negative___2_Positive___topic_234_en_output_all X)
union all
(select 208 as priorityLevel, X.* from Ptn_Negative___Negative___topic_235_en_output_all X)
union all
(select 209 as priorityLevel, X.* from Ptn_Contextual___Positive___topic_236_en_output_all X)
union all
(select 210 as priorityLevel, X.* from Ptn_opinion____no____topic_237_en_output_all X)
union all
(select 211 as priorityLevel, X.* from Ptn_Contextual___topic____too____opinion_238_en_output_all X)
union all
(select 212 as priorityLevel, X.* from Ptn_topic____lack____Positive_239_en_output_all X)
union all
(select 213 as priorityLevel, X.* from Ptn__less_more____2_topics_240_en_output_all X)
union all
(select 214 as priorityLevel, X.* from Ptn__more____topic___Positive_241_en_output_all X)
union all
(select 215 as priorityLevel, X.* from Ptn_topic____more____topic_242_en_output_all X)
union all
(select 216 as priorityLevel, X.* from Ptn_topic____more__243_en_output_all X)
union all
(select 217 as priorityLevel, X.* from Ptn_desire___Positive_Contextual___topic_244_en_output_all X)
union all
(select 218 as priorityLevel, X.* from Ptn_Negative___desire___Positive___topic_245_en_output_all X)
union all
(select 219 as priorityLevel, X.* from Ptn_Negative___topic___Positive_246_en_output_all X)
union all
(select 220 as priorityLevel, X.* from Ptn_Positive___topic____more_than____topic_247_en_output_all X)
union all
(select 221 as priorityLevel, X.* from Ptn_Positive___topic____less_than____topic_248_en_output_all X)
union all
(select 222 as priorityLevel, X.* from Ptn_Negative___topic____more_than____topic_249_en_output_all X)
union all
(select 223 as priorityLevel, X.* from Ptn_Negative___topic____less_than____topic_250_en_output_all X)
union all
(select 224 as priorityLevel, X.* from Ptn_Contextual___Topic___opinion_251_en_output_all X)
union all
(select 225 as priorityLevel, X.* from Ptn_opinion___topic____than_expected__252_en_output_all X)
union all
(select 226 as priorityLevel, X.* from Ptn_negative___pos_cont___topic_253_en_output_all X)
union all
(select 227 as priorityLevel, X.* from Ptn_negative___negative___topic_254_en_output_all X)
union all
(select 228 as priorityLevel, X.* from Ptn_contextual___topic____than____topic_255_en_output_all X)
union all
(select 229 as priorityLevel, X.* from Ptn_opinion___topic____except____topic_256_en_output_all X)
union all
(select 230 as priorityLevel, X.* from Ptn_opinion___topic___NP_257_en_output_all X)
union all
(select 231 as priorityLevel, X.* from Ptn_opinion___topic_258_en_output_all X)
union all
(select 232 as priorityLevel, X.* from Ptn__not____2_Positive_259_en_output_all X)
union all
(select 233 as priorityLevel, X.* from Ptn__not____2_Positive_260_en_output_all X)
union all
(select 234 as priorityLevel, X.* from Ptn__not____2_Positive_261_en_output_all X)
union all
(select 235 as priorityLevel, X.* from Ptn__not____2_Positive_262_en_output_all X)
union all
(select 236 as priorityLevel, X.* from Ptn__not____2_Positive_263_en_output_all X)
union all
(select 237 as priorityLevel, X.* from Ptn__not____2_Positive_264_en_output_all X)
union all
(select 238 as priorityLevel, X.* from Ptn__not____PositiveAttitude_265_en_output_all X)
union all
(select 239 as priorityLevel, X.* from Ptn__not____2_Negative_266_en_output_all X)
union all
(select 240 as priorityLevel, X.* from Ptn__not____Positive___Negative_267_en_output_all X)
union all
(select 241 as priorityLevel, X.* from Ptn__not____Negative___Positive_268_en_output_all X)
union all
(select 242 as priorityLevel, X.* from Ptn__not____Positive_269_en_output_all X)
union all
(select 243 as priorityLevel, X.* from Ptn__not____Positive_270_en_output_all X)
union all
(select 244 as priorityLevel, X.* from Ptn__not____PositiveBudget_271_en_output_all X)
union all
(select 245 as priorityLevel, X.* from Ptn__not____PositiveCompetence_272_en_output_all X)
union all
(select 246 as priorityLevel, X.* from Ptn__not____PositiveFeeling_273_en_output_all X)
union all
(select 247 as priorityLevel, X.* from Ptn__not____PositiveFunctioning_274_en_output_all X)
union all
(select 248 as priorityLevel, X.* from Ptn__must_____not____Negative_275_en_output_all X)
union all
(select 249 as priorityLevel, X.* from Ptn__not____Negative_276_en_output_all X)
union all
(select 250 as priorityLevel, X.* from Ptn__not____NegativeAttitude_277_en_output_all X)
union all
(select 251 as priorityLevel, X.* from Ptn__not____NegativeBudget_278_en_output_all X)
union all
(select 252 as priorityLevel, X.* from Ptn__not____NegativeCompetence_279_en_output_all X)
union all
(select 253 as priorityLevel, X.* from Ptn__not____NegativeFeeling_280_en_output_all X)
union all
(select 254 as priorityLevel, X.* from Ptn__not____NegativeFunctioning_281_en_output_all X)
union all
(select 255 as priorityLevel, X.* from Ptn__should_not____Negative_282_en_output_all X)
union all
(select 256 as priorityLevel, X.* from Ptn__too____Positive_Contextual_283_en_output_all X)
union all
(select 257 as priorityLevel, X.* from Ptn__couldn_t_____more____Positive_Contextual_284_en_output_all X)
union all
(select 258 as priorityLevel, X.* from Ptn__the_more____Positive_285_en_output_all X)
union all
(select 259 as priorityLevel, X.* from Ptn_desire____more____2_Positive_286_en_output_all X)
union all
(select 260 as priorityLevel, X.* from Ptn_desire____more____Positive_287_en_output_all X)
union all
(select 261 as priorityLevel, X.* from Ptn_desire___2_Positive_Contextual___Topic_288_en_output_all X)
union all
(select 262 as priorityLevel, X.* from Ptn_desire___2_Positive_289_en_output_all X)
union all
(select 263 as priorityLevel, X.* from Ptn_desire___Pos___Positive_Contextual___Topic_290_en_output_all X)
union all
(select 264 as priorityLevel, X.* from Ptn_desire___Positive_291_en_output_all X)
union all
(select 265 as priorityLevel, X.* from Ptn_Negative_Contextual___Positive_292_en_output_all X)
union all
(select 266 as priorityLevel, X.* from Ptn_Negative___Positive_293_en_output_all X)
union all
(select 267 as priorityLevel, X.* from Ptn_Positive____or____Negative_294_en_output_all X)
union all
(select 268 as priorityLevel, X.* from Ptn_Negative_____to____Positive_295_en_output_all X)
union all
(select 269 as priorityLevel, X.* from Ptn_Uncertain___Negative_296_en_output_all X)
union all
(select 270 as priorityLevel, X.* from Ptn_Positive___Negative_297_en_output_all X)
union all
(select 271 as priorityLevel, X.* from Ptn_Uncertain___Positive_298_en_output_all X)
union all
(select 272 as priorityLevel, X.* from Ptn_Uncertain____but____opinion___topic_299_en_output_all X)
union all
(select 273 as priorityLevel, X.* from Ptn_Uncertain____but____opinion_300_en_output_all X)
union all
(select 274 as priorityLevel, X.* from Ptn_desire___Contextual___topic_301_en_output_all X)
union all
(select 275 as priorityLevel, X.* from Ptn_desire___Contextual_302_en_output_all X)
union all
(select 276 as priorityLevel, X.* from Ptn_topic___desire____more____Positive_Contextual_303_en_output_all X)
union all
(select 277 as priorityLevel, X.* from Ptn__more_less____opinion_304_en_output_all X)
union all
(select 278 as priorityLevel, X.* from Ptn_opinion_305_en_output_all X)
union all
(select 279 as priorityLevel, X.* from Ptn__more_less____topic_307_en_output_all X)
union all
(select 280 as priorityLevel, X.* from Ptn__has____topic___topic_308_en_output_all X)
union all
(select 281 as priorityLevel, X.* from Ptn__has____topic_309_en_output_all X)
union all
(select 282 as priorityLevel, X.* from Ptn_topic___nonlinguistic_entity_310_en_output_all X)
union all
(select 283 as priorityLevel, X.* from Ptn__super____topic_311_en_output_all X)
union all
(select 284 as priorityLevel, X.* from Ptn_topic___emoticon_312_en_output_all X)
union all
(select 285 as priorityLevel, X.* from Ptn__why_don_t_you_have____topic_313_en_output_all X)
union all
(select 286 as priorityLevel, X.* from Ptn_topic_314_en_output_all X)
union all
(select 287 as priorityLevel, X.* from Ptn_Nonlinguistic_Entity_315_en_output_all X)
;
create view patterns_union_unconsolidated as
(select 1 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___2_topics_2_en X)
union all
(select 2 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Negative___topic___topic___opinion_3_en X)
union all
(select 3 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Negative___2_topics_6_en X)
union all
(select 4 as priorityLevel, X.pattern_val, X.patternName from Ptn__no____2_topics_7_en X)
union all
(select 5 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Positive_8_en X)
union all
(select 6 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire____not____Negative___topic_9_en X)
union all
(select 7 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Negative___topic_10_en X)
union all
(select 8 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Negative___topic_11_en X)
union all
(select 9 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Negative___topic_12_en X)
union all
(select 10 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Negative___topic_13_en X)
union all
(select 11 as priorityLevel, X.pattern_val, X.patternName from Ptn__not_____such____opinion___topic_14_en X)
union all
(select 12 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Negative___topic_15_en X)
union all
(select 13 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeAttitude___topic_16_en X)
union all
(select 14 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeBudget___topic_17_en X)
union all
(select 15 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeCompetence___topic_18_en X)
union all
(select 16 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeFeeling___topic_19_en X)
union all
(select 17 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeFunctioning___topic_20_en X)
union all
(select 18 as priorityLevel, X.pattern_val, X.patternName from Ptn__no____Negative___comma_21_en X)
union all
(select 19 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___topic_22_en X)
union all
(select 20 as priorityLevel, X.pattern_val, X.patternName from Ptn__no____topic___Negative_23_en X)
union all
(select 21 as priorityLevel, X.pattern_val, X.patternName from Ptn__no____topic___Negative_24_en X)
union all
(select 22 as priorityLevel, X.pattern_val, X.patternName from Ptn__no____topic___Negative_25_en X)
union all
(select 23 as priorityLevel, X.pattern_val, X.patternName from Ptn__no____topic___Negative_26_en X)
union all
(select 24 as priorityLevel, X.pattern_val, X.patternName from Ptn__no____topic___Negative_27_en X)
union all
(select 25 as priorityLevel, X.pattern_val, X.patternName from Ptn__no____topic___Negative_28_en X)
union all
(select 26 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Negative_29_en X)
union all
(select 27 as priorityLevel, X.pattern_val, X.patternName from Ptn__no____topic_30_en X)
union all
(select 28 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___topic_31_en X)
union all
(select 29 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___topic_32_en X)
union all
(select 30 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___topic_33_en X)
union all
(select 31 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___topic_34_en X)
union all
(select 32 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___topic_35_en X)
union all
(select 33 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_topics____not____Positive_36_en X)
union all
(select 34 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___topic_37_en X)
union all
(select 35 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____topic___Positive_38_en X)
union all
(select 36 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____topic___Negative_39_en X)
union all
(select 37 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Negative___topic_40_en X)
union all
(select 38 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___topic_41_en X)
union all
(select 39 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Negative___topic_42_en X)
union all
(select 40 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not_too___Positive___Negative___Positive_Contextual_43_en X)
union all
(select 41 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not_too____2_Positive_Contextual_44_en X)
union all
(select 42 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not__Positive___Negative_45_en X)
union all
(select 43 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____too____2_Positive_Contextual_46_en X)
union all
(select 44 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____Positive___topic_Negative_49_en X)
union all
(select 45 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___Negative___Negative___prep___topic_50_en X)
union all
(select 46 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___Negative___Negative_51_en X)
union all
(select 47 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative____not____Positive_52_en X)
union all
(select 48 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____Negative_53_en X)
union all
(select 49 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____NegativeAttitude_54_en X)
union all
(select 50 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____NegativeBudget_55_en X)
union all
(select 51 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____NegativeCompetence_56_en X)
union all
(select 52 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____NegativeFeeling_57_en X)
union all
(select 53 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____NegativeFunctioning_58_en X)
union all
(select 54 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____Positive_59_en X)
union all
(select 55 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____PositiveAttitude_60_en X)
union all
(select 56 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____PositiveBudget_61_en X)
union all
(select 57 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____PositiveCompetence_62_en X)
union all
(select 58 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____PositiveFeeling_63_en X)
union all
(select 59 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____PositiveFunctioning_64_en X)
union all
(select 60 as priorityLevel, X.pattern_val, X.patternName from Ptn_Positive___topic___Negative_65_en X)
union all
(select 61 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_topics____Opinion____more____Positive_69_en X)
union all
(select 62 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_topics____more____Positive_71_en X)
union all
(select 63 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_topics___2_opinions_72_en X)
union all
(select 64 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_topics____less____Negative_73_en X)
union all
(select 65 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire_____more____Positive____and_____more____Positive_74_en X)
union all
(select 66 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire___opinion____and_____more____Positive_75_en X)
union all
(select 67 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____more____Positive____and____Positive_76_en X)
union all
(select 68 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire___opinion____and_____less____Negative_77_en X)
union all
(select 69 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____more____Positive_78_en X)
union all
(select 70 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____more____Positive_79_en X)
union all
(select 71 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____more____Positive_80_en X)
union all
(select 72 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____more____Positive_81_en X)
union all
(select 73 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____more____Positive_82_en X)
union all
(select 74 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____more____Positive_83_en X)
union all
(select 75 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____less____Negative_84_en X)
union all
(select 76 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____less____Positive____than____2_topics_87_en X)
union all
(select 77 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____less____Negative____than____2_topics_89_en X)
union all
(select 78 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____than____2_topics_91_en X)
union all
(select 79 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____more____opinion____than____topic_92_en X)
union all
(select 80 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____less____Positive____than____topic_93_en X)
union all
(select 81 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not_as____Positive____as____topic_94_en X)
union all
(select 82 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not_as____Positive____as__95_en X)
union all
(select 83 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____less____Negative____than____topic_96_en X)
union all
(select 84 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not_as____Negative____as____topic_97_en X)
union all
(select 85 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____than____topic_98_en X)
union all
(select 86 as priorityLevel, X.pattern_val, X.patternName from Ptn__more____Positive____than____2_topics_99_en X)
union all
(select 87 as priorityLevel, X.pattern_val, X.patternName from Ptn__not_as____Positive____as____2_topics_100_en X)
union all
(select 88 as priorityLevel, X.pattern_val, X.patternName from Ptn__less____Positive____than____2_topics_101_en X)
union all
(select 89 as priorityLevel, X.pattern_val, X.patternName from Ptn__not_as____Negative____as____2_topics_102_en X)
union all
(select 90 as priorityLevel, X.pattern_val, X.patternName from Ptn__less____Negative____than____2_topics_103_en X)
union all
(select 91 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion____than____2_topics_104_en X)
union all
(select 92 as priorityLevel, X.pattern_val, X.patternName from Ptn__more____Positive____than____topic_105_en X)
union all
(select 93 as priorityLevel, X.pattern_val, X.patternName from Ptn__less____Positive____than____topic_106_en X)
union all
(select 94 as priorityLevel, X.pattern_val, X.patternName from Ptn__not_as____Positive____as____topic_107_en X)
union all
(select 95 as priorityLevel, X.pattern_val, X.patternName from Ptn__less____Negative____than____topic_108_en X)
union all
(select 96 as priorityLevel, X.pattern_val, X.patternName from Ptn__not_as____Negative____as____topic_109_en X)
union all
(select 97 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion____than____topic_110_en X)
union all
(select 98 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___Positive___topic_111_en X)
union all
(select 99 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not_____less_more____opinion_112_en X)
union all
(select 100 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____not____Contextual_113_en X)
union all
(select 101 as priorityLevel, X.pattern_val, X.patternName from Ptn_3_topics___opinion_114_en X)
union all
(select 102 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___topic___2_opinions_115_en X)
union all
(select 103 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_topics___Positive___NegativeEmoticon_117_en X)
union all
(select 104 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___Positive___NegativeEmoticon_118_en X)
union all
(select 105 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_topics___opinion_119_en X)
union all
(select 106 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___4_opinions_120_en X)
union all
(select 107 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___3_opinions_121_en X)
union all
(select 108 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___2_opinions___topic_122_en X)
union all
(select 109 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion___topic___opinion_123_en X)
union all
(select 110 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____not____Positive_Contextual_124_en X)
union all
(select 111 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____too____Positive_Contextual_125_en X)
union all
(select 112 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____too____Negative_126_en X)
union all
(select 113 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic_Negative___opinion____not____Positive_127_en X)
union all
(select 114 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____not____Negative_128_en X)
union all
(select 115 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____no____Negative_129_en X)
union all
(select 116 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____too____opinion___opinion_130_en X)
union all
(select 117 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___2_opinions_131_en X)
union all
(select 118 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____has____2_opinion___topic_132_en X)
union all
(select 119 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____has____opinion___topic____than__133_en X)
union all
(select 120 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____has____opinion___topic_134_en X)
union all
(select 121 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___topic___Negative_135_en X)
union all
(select 122 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____more____Positive___topic_136_en X)
union all
(select 123 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____more____Positive_137_en X)
union all
(select 124 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____less____Negative_138_en X)
union all
(select 125 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire___opinion___2_topics_139_en X)
union all
(select 126 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire___opinion___topic_140_en X)
union all
(select 127 as priorityLevel, X.pattern_val, X.patternName from Ptn__seems_like____Positive___topic_141_en X)
union all
(select 128 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Positive__2__topics_142_en X)
union all
(select 129 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___opinion___topic_143_en X)
union all
(select 130 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___topic___opinion___topic_144_en X)
union all
(select 131 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire_be___Positive_Contextual___topic_145_en X)
union all
(select 132 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire___Positive_Contextual___topic_146_en X)
union all
(select 133 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire___Positive_Contextual_147_en X)
union all
(select 134 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire____more____Positive___topic_148_en X)
union all
(select 135 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Positive____to____Positive___topic_149_en X)
union all
(select 136 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Positive___topic___opinion_150_en X)
union all
(select 137 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Positive___topic_151_en X)
union all
(select 138 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire____more____2_topics_152_en X)
union all
(select 139 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire____more____topic_153_en X)
union all
(select 140 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Positive_Contextual___topic_154_en X)
union all
(select 141 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___2_topics_155_en X)
union all
(select 142 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Negative___topic_156_en X)
union all
(select 143 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___topic___positive_157_en X)
union all
(select 144 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___topic_158_en X)
union all
(select 145 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___Contextual___topic_159_en X)
union all
(select 146 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion___topic_160_en X)
union all
(select 147 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion___topic_161_en X)
union all
(select 148 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_topics___emoticon_162_en X)
union all
(select 149 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____compared_to____2_topic_163_en X)
union all
(select 150 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____compared_to____topic_164_en X)
union all
(select 151 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___prep___topic____too____Positive_Contextual_165_en X)
union all
(select 152 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____too____Positive_Contextual_166_en X)
union all
(select 153 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion___topic_167_en X)
union all
(select 154 as priorityLevel, X.pattern_val, X.patternName from Ptn__less____Negative____more____Positive___topic_169_en X)
union all
(select 155 as priorityLevel, X.pattern_val, X.patternName from Ptn__more____Positive____less____Negative___topic_170_en X)
union all
(select 156 as priorityLevel, X.pattern_val, X.patternName from Ptn__more____Contextual____less____Contextual___topic_171_en X)
union all
(select 157 as priorityLevel, X.pattern_val, X.patternName from Ptn_3_opinions___topic_172_en X)
union all
(select 158 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_opinions___topic_173_en X)
union all
(select 159 as priorityLevel, X.pattern_val, X.patternName from Ptn__get____topic___Positive___prep_topic_174_en X)
union all
(select 160 as priorityLevel, X.pattern_val, X.patternName from Ptn__get____topic___Positive_175_en X)
union all
(select 161 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic_opinion____comma__176_en X)
union all
(select 162 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____more____topic_177_en X)
union all
(select 163 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____more____Positive_Contextual_178_en X)
union all
(select 164 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____less____Negative_179_en X)
union all
(select 165 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____no____Positive_180_en X)
union all
(select 166 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____in_of_on____topic____not____Contextual_182_en X)
union all
(select 167 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____in_of_on____topic___opinion_183_en X)
union all
(select 168 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___prep___topic___2_opinions_184_en X)
union all
(select 169 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___prep___topic___opinion_185_en X)
union all
(select 170 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion____than__186_en X)
union all
(select 171 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion___topic_187_en X)
union all
(select 172 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion___topic_188_en X)
union all
(select 173 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___opinion_189_en X)
union all
(select 174 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___3_topics_196_en X)
union all
(select 175 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic___topic____not____Positive_197_en X)
union all
(select 176 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinions___topic___topic___Negative_198_en X)
union all
(select 177 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic___topic___opinion_199_en X)
union all
(select 178 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___2_topics_200_en X)
union all
(select 179 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___3_topics_203_en X)
union all
(select 180 as priorityLevel, X.pattern_val, X.patternName from Ptn_Uncertain___topic___opinion_205_en X)
union all
(select 181 as priorityLevel, X.pattern_val, X.patternName from Ptn_Uncertain____but__topic_206_en X)
union all
(select 182 as priorityLevel, X.pattern_val, X.patternName from Ptn_Uncertain___topic_207_en X)
union all
(select 183 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___Uncertain_208_en X)
union all
(select 184 as priorityLevel, X.pattern_val, X.patternName from Ptn__more____Positive___2_topics_209_en X)
union all
(select 185 as priorityLevel, X.pattern_val, X.patternName from Ptn__less____Negative___topic___wish_210_en X)
union all
(select 186 as priorityLevel, X.pattern_val, X.patternName from Ptn__less____Negative___topic_211_en X)
union all
(select 187 as priorityLevel, X.pattern_val, X.patternName from Ptn__never____2_Positive___topic_214_en X)
union all
(select 188 as priorityLevel, X.pattern_val, X.patternName from Ptn__never____Positive___topic_215_en X)
union all
(select 189 as priorityLevel, X.pattern_val, X.patternName from Ptn__more____Positive___Positive___topic_216_en X)
union all
(select 190 as priorityLevel, X.pattern_val, X.patternName from Ptn__more____Positive___topic_217_en X)
union all
(select 191 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic___topic_218_en X)
union all
(select 192 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic___opinion___topic_219_en X)
union all
(select 193 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___2_topics_220_en X)
union all
(select 194 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic____are____topic_221_en X)
union all
(select 195 as priorityLevel, X.pattern_val, X.patternName from Ptn__nothing_____but____opinion_222_en X)
union all
(select 196 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic____with____topic_223_en X)
union all
(select 197 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion____and____topic___opinion_224_en X)
union all
(select 198 as priorityLevel, X.pattern_val, X.patternName from Ptn_Positive____with____Negative___topic_225_en X)
union all
(select 199 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion____and_with____opinion___topic_226_en X)
union all
(select 200 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_Negative___topic_227_en X)
union all
(select 201 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_opinions___topic___prep___topic_228_en X)
union all
(select 202 as priorityLevel, X.pattern_val, X.patternName from Ptn_2_opinions___topic_229_en X)
union all
(select 203 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic___opinion___topic_230_en X)
union all
(select 204 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___topic___Neg_Contextual_231_en X)
union all
(select 205 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___Negative___topic_232_en X)
union all
(select 206 as priorityLevel, X.pattern_val, X.patternName from Ptn_Positive_Contextual___topic___desire___Positive_233_en X)
union all
(select 207 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___2_Positive___topic_234_en X)
union all
(select 208 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___Negative___topic_235_en X)
union all
(select 209 as priorityLevel, X.pattern_val, X.patternName from Ptn_Contextual___Positive___topic_236_en X)
union all
(select 210 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion____no____topic_237_en X)
union all
(select 211 as priorityLevel, X.pattern_val, X.patternName from Ptn_Contextual___topic____too____opinion_238_en X)
union all
(select 212 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____lack____Positive_239_en X)
union all
(select 213 as priorityLevel, X.pattern_val, X.patternName from Ptn__less_more____2_topics_240_en X)
union all
(select 214 as priorityLevel, X.pattern_val, X.patternName from Ptn__more____topic___Positive_241_en X)
union all
(select 215 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____more____topic_242_en X)
union all
(select 216 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic____more__243_en X)
union all
(select 217 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Positive_Contextual___topic_244_en X)
union all
(select 218 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___desire___Positive___topic_245_en X)
union all
(select 219 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___topic___Positive_246_en X)
union all
(select 220 as priorityLevel, X.pattern_val, X.patternName from Ptn_Positive___topic____more_than____topic_247_en X)
union all
(select 221 as priorityLevel, X.pattern_val, X.patternName from Ptn_Positive___topic____less_than____topic_248_en X)
union all
(select 222 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___topic____more_than____topic_249_en X)
union all
(select 223 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___topic____less_than____topic_250_en X)
union all
(select 224 as priorityLevel, X.pattern_val, X.patternName from Ptn_Contextual___Topic___opinion_251_en X)
union all
(select 225 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic____than_expected__252_en X)
union all
(select 226 as priorityLevel, X.pattern_val, X.patternName from Ptn_negative___pos_cont___topic_253_en X)
union all
(select 227 as priorityLevel, X.pattern_val, X.patternName from Ptn_negative___negative___topic_254_en X)
union all
(select 228 as priorityLevel, X.pattern_val, X.patternName from Ptn_contextual___topic____than____topic_255_en X)
union all
(select 229 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic____except____topic_256_en X)
union all
(select 230 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic___NP_257_en X)
union all
(select 231 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion___topic_258_en X)
union all
(select 232 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Positive_259_en X)
union all
(select 233 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Positive_260_en X)
union all
(select 234 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Positive_261_en X)
union all
(select 235 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Positive_262_en X)
union all
(select 236 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Positive_263_en X)
union all
(select 237 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Positive_264_en X)
union all
(select 238 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____PositiveAttitude_265_en X)
union all
(select 239 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____2_Negative_266_en X)
union all
(select 240 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive___Negative_267_en X)
union all
(select 241 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Negative___Positive_268_en X)
union all
(select 242 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive_269_en X)
union all
(select 243 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Positive_270_en X)
union all
(select 244 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____PositiveBudget_271_en X)
union all
(select 245 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____PositiveCompetence_272_en X)
union all
(select 246 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____PositiveFeeling_273_en X)
union all
(select 247 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____PositiveFunctioning_274_en X)
union all
(select 248 as priorityLevel, X.pattern_val, X.patternName from Ptn__must_____not____Negative_275_en X)
union all
(select 249 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____Negative_276_en X)
union all
(select 250 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeAttitude_277_en X)
union all
(select 251 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeBudget_278_en X)
union all
(select 252 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeCompetence_279_en X)
union all
(select 253 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeFeeling_280_en X)
union all
(select 254 as priorityLevel, X.pattern_val, X.patternName from Ptn__not____NegativeFunctioning_281_en X)
union all
(select 255 as priorityLevel, X.pattern_val, X.patternName from Ptn__should_not____Negative_282_en X)
union all
(select 256 as priorityLevel, X.pattern_val, X.patternName from Ptn__too____Positive_Contextual_283_en X)
union all
(select 257 as priorityLevel, X.pattern_val, X.patternName from Ptn__couldn_t_____more____Positive_Contextual_284_en X)
union all
(select 258 as priorityLevel, X.pattern_val, X.patternName from Ptn__the_more____Positive_285_en X)
union all
(select 259 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire____more____2_Positive_286_en X)
union all
(select 260 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire____more____Positive_287_en X)
union all
(select 261 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___2_Positive_Contextual___Topic_288_en X)
union all
(select 262 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___2_Positive_289_en X)
union all
(select 263 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Pos___Positive_Contextual___Topic_290_en X)
union all
(select 264 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Positive_291_en X)
union all
(select 265 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative_Contextual___Positive_292_en X)
union all
(select 266 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative___Positive_293_en X)
union all
(select 267 as priorityLevel, X.pattern_val, X.patternName from Ptn_Positive____or____Negative_294_en X)
union all
(select 268 as priorityLevel, X.pattern_val, X.patternName from Ptn_Negative_____to____Positive_295_en X)
union all
(select 269 as priorityLevel, X.pattern_val, X.patternName from Ptn_Uncertain___Negative_296_en X)
union all
(select 270 as priorityLevel, X.pattern_val, X.patternName from Ptn_Positive___Negative_297_en X)
union all
(select 271 as priorityLevel, X.pattern_val, X.patternName from Ptn_Uncertain___Positive_298_en X)
union all
(select 272 as priorityLevel, X.pattern_val, X.patternName from Ptn_Uncertain____but____opinion___topic_299_en X)
union all
(select 273 as priorityLevel, X.pattern_val, X.patternName from Ptn_Uncertain____but____opinion_300_en X)
union all
(select 274 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Contextual___topic_301_en X)
union all
(select 275 as priorityLevel, X.pattern_val, X.patternName from Ptn_desire___Contextual_302_en X)
union all
(select 276 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___desire____more____Positive_Contextual_303_en X)
union all
(select 277 as priorityLevel, X.pattern_val, X.patternName from Ptn__more_less____opinion_304_en X)
union all
(select 278 as priorityLevel, X.pattern_val, X.patternName from Ptn_opinion_305_en X)
union all
(select 279 as priorityLevel, X.pattern_val, X.patternName from Ptn__more_less____topic_307_en X)
union all
(select 280 as priorityLevel, X.pattern_val, X.patternName from Ptn__has____topic___topic_308_en X)
union all
(select 281 as priorityLevel, X.pattern_val, X.patternName from Ptn__has____topic_309_en X)
union all
(select 282 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___nonlinguistic_entity_310_en X)
union all
(select 283 as priorityLevel, X.pattern_val, X.patternName from Ptn__super____topic_311_en X)
union all
(select 284 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic___emoticon_312_en X)
union all
(select 285 as priorityLevel, X.pattern_val, X.patternName from Ptn__why_don_t_you_have____topic_313_en X)
union all
(select 286 as priorityLevel, X.pattern_val, X.patternName from Ptn_topic_314_en X)
union all
(select 287 as priorityLevel, X.pattern_val, X.patternName from Ptn_Nonlinguistic_Entity_315_en X)
;
create view patterns_union_consolidated as
select * from patterns_union_unconsolidated X
consolidate on X.pattern_val using 'LeftToRight' with priority from X.priorityLevel;

-- output view patterns_union_consolidated;

-- to put back all outputs of consolidated patterns
create view Final_Tlas_en as
select
Y.priorityLevel as priorityLevel,
Y.concept1 as concept1, Y.type1 as type1,
Y.concept2 as concept2, Y.type2 as type2,
Y.concept3 as concept3, Y.type3 as type3,
Y.concept4 as concept4, Y.type4 as type4,
Y.concept5 as concept5, Y.type5 as type5,
Y.pattern_val as pattern_val,
Y.outputRank as outputRank,
Y.patternName as patternName
from patterns_union_consolidated X, pattern_outputs_union_unconsolidated Y
where 
Equals(GetText(X.patternName), GetText(Y.patternName))
and
Equals(X.pattern_val, Y.pattern_val);


export view Final_Tlas_en;
