select R.match as name
into CapsPerson
from   Regex(
--/\b\p{Lu}\p{M}*(\p{L}\p{M}*){0,10}(['-][\p{Lu}\p{M}*])?(\p{L}\p{M}*){1,10}\b/, 
/\b\p{Lu}(\p{L}){0,10}(['-][\p{Lu}])?(\p{L}){1,10}\b/, 
    --'
    DocScan.text) R 
where  Not(ContainsDicts(
            'FilterPersonDict', 
            'dictionaries/filterPersonGerman.dict',
            'InitialDict',
            'StrongPhoneVariantDictionary',
            'dictionaries/Statelist.dict',
            'dictionaries/organization_suffixes.dict',
            'dictionaries/industry_types_retained.dict',
            'dictionaries/streetSuffixesForPerson.dict', R.match))
   and Not(MatchesRegex(/(\p{Lu})+-.*([\p{Ll}\p{Lo}]).*/, R.match))
   and Not(MatchesRegex(/.*([\p{Ll}\p{Lo}]).*-(\p{Lu})+/, R.match));
   
select R.match as name
into CapsPersonTok
from   RegexTok(
	/\p{Lu}(\p{L}){0,10}(['-]\p{Lu})?(\p{L}){1,10}/,  --'
    3,
    DocScan.text) R 
where  Not(ContainsDicts(
            'FilterPersonDict', 
            'dictionaries/filterPersonGerman.dict',
            'InitialDict',
            'StrongPhoneVariantDictionary',
            'dictionaries/Statelist.dict',
            'dictionaries/organization_suffixes.dict',
            'dictionaries/industry_types_retained.dict',
            'dictionaries/streetSuffixesForPerson.dict', R.match))
   and Not(MatchesRegex(/(\p{Lu})+-.*([\p{Ll}\p{Lo}]).*/, R.match))
   and Not(MatchesRegex(/.*([\p{Ll}\p{Lo}]).*-(\p{Lu})+/, R.match));
   
 
------------------------------------------------------------------------------
-- DICTIONARIES:

create dictionary FilterPersonDict as
(
	'Travel', 'Fellow', 'Sir', 'IBMer', 'Researcher', 'All','Tell',
	'Friends', 'Friend', 'Colleague', 'Colleagues', 'Managers','If',
	'Customer', 'Users', 'User', 'Valued', 'Executive', 'Chairs',
	'New', 'Owner', 'Conference', 'Please', 'Outlook', 'Lotus', 'Notes',
	'This', 'That', 'There', 'Here', 'Subscribers', 'What', 'When', 'Where',
	'With', 'While', 'Thanks', 'Thanksgiving','Senator', 'Platinum',
        'Perspective',
	'Manager', 'Ambassador', 'Professor', 'Dear', 'Contact', 'Cheers',
        'Athelet',
	'And', 'Act', 'But', 'Hello', 'Call', 'From', 'Center', 'The', 'Take',
        'Junior',
	'Both', 'Communities', 'Greetings', 'Hope', 'Restaurants', 'Properties',
	'Let', 'Corp', 'Memorial', 'You', 'Your', 'Our',  'My', 'His','Her',
	'Their','Popcorn', 'Name', 'July', 'June','Join',
	'Business', 'Administrative', 'South', 'Members', 'Address', 'Please',
        'List',
	'Public', 'Inc', 'Parkway', 'Brother', 'Buy', 'Then', 'Services',
        'Statements',
	'President', 'Commissioner', 'Commitment', 'Commits', 'Hey',
	'Director', 'End', 'Exit', 'Experiences', 'Finance', 'Elementary',
        'Wednesday',
	'Nov', 'Infrastructure', 'Inside', 'Convention',
	'Judge', 'Lady', 'Friday',  'Project', 'Projected', 
	'Recalls', 'Regards', 'Recently', 'Administration', 'Independence',
        'Denied',
	'Unfortunately', 'Under', 'Uncle', 'Utility', 'Unlike', 'Was', 'Were',
        'Secretary',
	'Speaker', 'Chairman', 'Consider', 'Consultant', 'County', 'Court',
        'Defensive',
	'Northwestern', 'Place', 'Hi', 'Futures', 'Athlete', 'Invitational',
        'System',
	'International', 'Main', 'Online', 'Ideally'
	-- more entries
	,'If','Our', 'About', 'Analyst', 'On', 'Of', 'By', 'HR', 'Mkt', 'Pre',
        'Post',
	'Condominium', 'Ice', 'Surname', 'Lastname', 'firstname', 'Name',
        'familyname',
	-- Italian greeting
   'Ciao',
   -- Spanish greeting
   'Hola',
   -- French greeting
   'Bonjour',
   -- new entries 
   'Pro','Bono','Enterprises','Group','Said','Says','Assistant','Vice','Warden','Contribution',
   'Research', 'Development', 'Product', 'Sales', 'Support', 'Manager',
   'Telephone', 'Phone', 'Contact', 'Information',
   'Electronics','Managed','West','East','North','South', 
   'Teaches','Ministry', 'Church', 'Association', 'Laboratories', 'Living', 'Community', 'Visiting',
   'Officer'
);

create dictionary InitialDict as
(
	'rev.', 'col.', 'reverend', 'prof.', 'professor.', 
	'lady', 'miss.', 'mrs.', 'mrs', 'mr.', 'pt.', 'ms.',
	'messrs.', 'dr.', 'master.', 'marquis', 'monsieur',
	'ds', 'di'
	--'Dear' (Yunyao: comments out to avoid mismatches such as Dear Member),
	--'Junior' (Yunyao: comments out to avoid mismatches such as Junior National [team player],
 	-- If we can have large negative dictionary to eliminate such mismatches, 
	-- then this may be recovered 
	--'Name:' ((Yunyao: comments out to avoid mismatches such as 'Name: Last Name')
	-- for German names
	-- TODO: need further test
	,'herr', 'Fraeulein', 'Doktor', 'Herr Doktor', 'Frau Doktor',
	'Herr Professor', 'Frau professor', 'Baron', 'graf'
);

create dictionary StrongPhoneVariantDictionary as (
	 'phone',
 	'cell',
 	'contact',
 	'direct',
	'office',
 	-- Yunyao: Added new strong clues for phone numbers
	'tel',
	'dial',
	'Telefon',
	'mobile',
	'Ph',
	-- German
	'Fon',
	'Telefon Geschaeftsstelle', 
	'Telefon Gesch�ftsstelle',
	'Telefon Zweigstelle',
	'Telefon Hauptsitz',
	'Telefon (Geschaeftsstelle)', 
	'Telefon (Gesch�ftsstelle)',
	'Telefon (Zweigstelle)',
	'Telefon (Hauptsitz)',
	'Telefonnummer',
	'Telefon Geschaeftssitz',
	'Telefon Gesch�ftssitz',
	'Telefon (Geschaeftssitz)',
	'Telefon (Gesch�ftssitz)',
	'Telefon Pers�nlich',
	'Telefon persoenlich',
	'Telefon (Pers�nlich)',
	'Telefon (persoenlich)',
	'Handy',
	'Handy-Nummer',
	'Telefon arbeit',
	'Telefon (arbeit)'
);
   
   