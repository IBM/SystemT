/**
 * Rule 2: identifies emails in Lotus Notes format
 * Examples: 
 *           John Doe/Almaden/IBM
 */
--Non Person email (only one capitalized word before the first slash symbol)
create view Email2_a as
    select R.match as annot
    from   RegexTok(/((\p{Lu}\p{M}*[\p{Ll}\p{Lo}]\p{M}*[\p{Ll}\p{Lu}\p{Lt}\p{Lo}\p{Nd}\p{Pc}]{1,20}\s*[\/]\s*)((\p{Lu}\p{M}*(\p{L}\p{M}*){1,20}\s*){1,2}[\/]\s*){1,2}(\p{Lu}\p{M}*){2,20}(@(\p{L}\p{M}*){2,20})?)/, 15, Document.text) R
    where  Not(MatchesRegex(/\/|\p{L}/,RightContext(R.match,1)));

-- Person email (more than one capitalized words before the first '/')
create view Email2_b as
    select R.match as annot
    from   RegexTok(/(((\p{Lu}\p{M}*[\p{Ll}\p{Lo}]\p{M}*(\p{L}\p{M}*){0,10}(['-]\p{L}\p{M}*)?(\p{L}\p{M}*){1,10}\s+))?((\p{Lu}\p{M}*\.?){1,2}\s+)?(\p{Lu}\p{M}*[\p{Ll}\p{Lo}]\p{M}*(\p{L}\p{M}*){0,20}(['-]\p{L}\p{M}*(\p{L}\p{M}*){1,8})?\w{0,2}\s*[\/]\s*)((\p{L}\p{M}*(\p{L}\p{M}*){1,20}\s*){1,2}[\/]\s*){1,2}(\p{L}\p{M}*){2,20}(@(\p{L}\p{M}*){1,20}){0,3})/, 15, Document.text) R
    where  Not(MatchesRegex(/\/|\p{L}/,RightContext(R.match,1)));
 
 /**
  * Output Lotus Notes email addresses
  */
create view Email2 as 
    (select Email2_a.annot as annot from Email2_a)
    union all
    (select Email2_b.annot as annot from Email2_b); 

-- Yunyao: added 05/05/2008 to capture organization names mentioned in NotesEmail
create view OrgWithinNotesEmail1 as
	select R.match as match
	from RegexTok(/[a-zA-Z]+/, 1, Email2.annot) R 
	where MatchesRegex(/[\/]/, LeftContext(R.match, 1)) and
		MatchesRegex(/[\s@]/, RightContext(R.match, 1));  	 

create view OrgWithinNotesEmail2 as
	select R.match as match
	from RegexTok(/[a-zA-Z]+/, 1, Email2.annot) R 
	where MatchesRegex(/[@]/, LeftContext(R.match, 1));        
    
--Tatiana: added 27.01.09 to capture the personal names within the LotusNotes emails
create view NameWithinLotusEmail as
    select R.match as match
	from Regex(/^([a-zA-Z\s-]+)/, Email2.annot) R
    where MatchesRegex(/[\/]/, RightContext(R.match, 1));
