module module2; 
-- TODO: Add AQL content here 
import module module1;

-- TODO: Add AQL content here 
/*******************************************************************************
* Copyright IBM
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*******************************************************************************/

--*****************************************************************************
-- BigInsights TextAnalytics sample Indicator extractor
-- 
-- File name: aql/Indicator/refinement.aql
-- Description: Filter and Consolidate rules
--*****************************************************************************


-- Identify one type of invalid Indicator candidates: mentions that contain  
-- another metric in between the Metric and Amount mentions 
-- Example:
-- 	[EPS growth]; Revenue of [$99.9 billion]
-- 	[revenue] up 19 percent; Free cash flow of [$8.7 billion]

create view IndicatorInvalid1 as
select R.* 
from module1.IndicatorCandidate R, module1.Metric M
where Contains(SpanBetween(R.metric, R.amount), M.match);




create view IndicatorInvalid2 as
select r.metric as metric, r.amount as amount, r.match as match
from module1.IndicatorCandidate r, module1.SentenceBoundary b
where Contains(r.match, b.match);



create view IndicatorInvalid as
(select R.* from IndicatorInvalid1 R)
union all
(select R.* from IndicatorInvalid2 R); 

export view IndicatorInvalid;