/**
* Test Case: Define two AQL elements in 1.aql and attempt to import them into another module using same alias name.
* Expected result: Compiler error stating there are duplicates.
*/
module module1;

-- create a simple view
create view TestView1
as select D.text from Document D;

export view TestView1;

create view TestView2
as select D.text from Document D;

export view TestView2;

-- create a simple Dictionary
create dictionary TestDict1 as 
('one', 'two');

export dictionary TestDict1;

create dictionary TestDict2 as 
('one', 'two');

export dictionary TestDict2;

-- create a simple table
create table TestTable1 
  (name Text, value Text) as
 values 
	('One', '1'), 
	('Two', '2');

export table TestTable1;

create table TestTable2 
  (name Text, value Text) as
 values 
	('Three', '3'), 
	('Four', '4');

export table TestTable2;

-- create a simple external view
create external view TestExtView1(field1 Text, field2 Text)
external_name 'TestExtView1';

export view TestExtView1;

create external view TestExtView2(field1 Text, field2 Text)
external_name 'TestExtView2';

export view TestExtView2;

-- create a simple function
create function TestFunc1 
(p1 Span  ,p2 Span)
return Span like p1
external_name 'udfjars/udfs.jar:com.ibm.test.udfs.udf1!combineSpans'
language java
deterministic
return null on null input;

export function TestFunc1;

create function TestFunc2 
(p1 Span  ,p2 Span)
return Span like p1
external_name 'udfjars/udfs.jar:com.ibm.test.udfs.udf1!combineSpans'
language java
deterministic
return null on null input;

export function TestFunc2;