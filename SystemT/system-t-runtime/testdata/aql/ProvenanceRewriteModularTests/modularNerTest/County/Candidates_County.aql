module County;

import dictionary CountyNegativeClues from module Dictionaries as CountyNegativeClues;

import view CapsPlaceOnetoTwo from module Linguistics as CapsPlaceOnetoTwo;
import view OrganizationFull from module OrganizationCandidates as OrganizationFull;
import view StateCandidate from module CommonFeatures as StateCandidate;
import view CityorStateOrCountry from module CommonFeatures as CityorStateOrCountry;

create view CountyCandidates1 as
select CombineSpans(C.match, CC.match) as match
from CapsPlaceOnetoTwo C,
	 CountyClue CC
where FollowsTok(C.match, CC.match, 0, 0)
  and Not(ContainsRegex(/[\r\n\t]/, C.match))
  and Not(ContainsRegex(/[\r\n\t]{2}/, SpanBetween(C.match, CC.match)))
  and Not(ContainsDict('CountyNegativeClues', C.match));

create view CountyCandidates2 as
select CombineSpans(C.match, CC.match) as match
from WeakCounty C,
	 CountyClue CC
where FollowsTok(C.match, CC.match, 0, 0)
  and Not(ContainsRegex(/[\r\n\t]/, C.match))
  and Not(ContainsRegex(/[\r\n\t]{2}/, SpanBetween(C.match, CC.match)));

-- county that are not state/city

create view CountyWrong as
select C.match as match
from WeakCounty C,
	 CityorStateOrCountry CSC
where Equals(C.match, CSC.match);

create view StrongCounty as
	(select C.match as match from WeakCounty C)
	minus
	(select C.match as match from CountyWrong C);
  
create view CountyCandidates3 as
select C.match as match
from StateCandidate S,
	 WeakCounty C
where FollowsTok(C.match, S.match, 1, 1)
  and MatchesRegex(/\s*\(\s*/, SpanBetween(C.match, S.match))
  and Not(ContainsRegex(/[\r\n\t]/, SpanBetween(C.match, S.match)));
  
create view CountyCandidates as
	(select C.match as match from CountyCandidates1 C)
	union all
	(select C.match as match from CountyCandidates2 C)
	union all
	(select C.match as match from CountyCandidates3 C);
    
create view CountyConsolidated as
select C.match as match
from CountyCandidates C
consolidate on C.match;


create view CountyInvalid as
select C.match as match
from OrganizationFull O,
	 CountyConsolidated C
where Contains(O.organization, C.match);

create view CountyValid as
	(select C.match as match from CountyConsolidated C)
	minus
	(select C.match as match from CountyInvalid C);