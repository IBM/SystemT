module Sentiment;

create view MyAdjectives as 
	select * 
	from Adjectives;
--output view MyAdjectives;

create view MyActions as
	select *
	from Actions;
--output view MyActions;

-----------------------------
create view NegativeSentiment2 as
select S.text as sentence
from NegativeSentiment S;

--output view NegativeSentiment2 as 'NegativeSentiment';
-----------------------------

--create dictionary ImplicitSentimentPatternDic as
--	('Action w/ negative adverb', 'Extra negated actions', 'No way to desire', 'Please apply to target', 'Target doesn\'t do expected', 
--	'Target needs revision', 'Target needs to be revised');
--	
--create dictionary ExplicitSentimentPatternDic as
--	('Not[Speaker does positive]', 'Not[target does positive]', 'Not[target is positive]', 'Target has negative adjective', 'Target is negative');
--
--create view NegativeSentimentImplicit as
--	select S.*
--	from NegativeSentiment S
--	where MatchesDict('ImplicitSentimentPatternDic', S.Pattern);
----output view NegativeSentimentImplicit;
--
--create view NegativeSentimentExplicit as
--	select S.*
--	from NegativeSentiment S
--	where MatchesDict('ExplicitSentimentPatternDic', S.Pattern);
----output view NegativeSentimentExplicit;
--
--create view NegativeSentimentRemainder1 as
--	(select S.* 
--	from NegativeSentiment S)
--	minus
--	(select S.*
--	from NegativeSentimentImplicit S);
--	
--create view NegativeSentimentRemainder as
--	(select S.* 
--	from NegativeSentimentRemainder1 S)
--	minus
--	(select S.*
--	from NegativeSentimentExplicit S);
--output view NegativeSentimentRemainder;
--
--create view Sentiment as
--	(select 'Hao Wang' as FAID, S.target as NormalizedObject, S.target as Object, S.target as Target, 'negative' as Polarity, 
--	'H' as Degree, '3' as DegreeId, '8/1/2013' as TimeStamp, '30001' as CaseNumber
--	from NegativeSentimentExplicit S)
--	union all
--	(select 'Howard Ho' as FAID, S.target as NormalizedObject, S.target as Object, S.target as Target, 'negative' as Polarity, 
--	'M' as Degree, '2' as DegreeId, '7/1/2013' as TimeStamp, '20001' as CaseNumber
--	from NegativeSentimentImplicit S)
--	union all
--	(select 'Benny Kimelfeld' as FAID, S.target as NormalizedObject, S.target as Object, S.target as Target, 'positive' as Polarity, 
--	'L' as Degree, '1' as DegreeId, '6/1/2013' as TimeStamp, '10001' as CaseNumber
--	from PositiveSentiment S);
--output view Sentiment;
	
	