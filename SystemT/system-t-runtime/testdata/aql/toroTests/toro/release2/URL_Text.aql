-- **************************************************************************** 
-- Purpose : Extract Following entities from a detaged document
--           1. URL from text
--           2. 5 left and right tokens from the URL 
--
--This uses URL extractor created By : Yunyao Li (yunyaoli@us.ibm.com)
-- ****************************************************************************

--Detag the document

detag Document.text as DetaggedDoc
detect content_type always
annotate 
    element 'a' as Anchor
		with attribute 'href' as target;

--Identifies urls that begins with protocol names http or ftp

create view URL1 as
select R.match as annot
from RegexTok(/((ht|f)tps?:\/\/\w+[\w\-:&=_?\/~.<>@:]+[\w\-:&=_?\/~]{2,100})/, 50, DetaggedDoc.text) R;

--Identifies urls that contains known domain suffixes

create view URL1a as
select R.match as annot
from RegexTok(/(\w+[\w\-:&=_?\/~.<>@:]+\.(com|edu|org)\/[\w&_?~.<>@:][\w\-:&=_?\/~.<>@:]+[\w\-:&=_?\/~]{2,100})/, 50, DetaggedDoc.text) 
R;

--Identifies urls that are not necessarily begin with protocol names http or ftp

create view URL2 as
select R.match as annot
from   RegexTok(/(((([\w]+:)\/\/)|(w\w+\.))(([\d\w]|%[a-fA-f\d]{2,2})+(:([\d\w]|%[a-fA-f\d]{2,2})+)?@)?([\d\w][-\d\w]{0,253}[\d\w]\.)+[\w]{2,4}(:[\d]+)?(\/([-+_~.\d\w]|%[a-fA-f\d]{2,2})*)*(\?(&?([-+_~.\d\w]|%[a-fA-f\d]{2,2})=?)*)?(#([-+_~.\d\w]|%[a-fA-f\d]{2,2})*)?)/, 50, DetaggedDoc.text) R;

-- union URL1a and URL2

create view URL1a_2 as
	(select U.annot as annot from URL1a U)
	union all
	(select U.annot as annot from URL2 U);

create view URL1a_2BeginwithProtocol as
select R.match as annot
from Regex(/(ht|f)tps?.+/, URL1a_2.annot) R;

create view URL1a_2All as
	(select U.annot as annot from URL1a_2 U)
	union all
	(select U.annot as annot from URL1a_2BeginwithProtocol U);

create view URL1a_2Consolidated as
select C.annot as annot
from URL1a_2All C
consolidate on C.annot 
using 'NotContainedWithin';
	
--Since Rule1 is more restrictive than Rule2,...
--...we prefer matches generated by Rule1 over those produced by Rule2, whenever they overlap

create view URLWeakOverlap as
select U2.annot as annot
from   URL1 U1,
       URL1a_2Consolidated U2
where  Overlaps(U1.annot, U2.annot);

create view URLWeakOnly as
	(select U.annot as annot from URL1a_2Consolidated U)
	minus
	(select U.annot as annot from URLWeakOverlap U);

--Combine all the matches identified so far

create view URLAll as
  (select URL1.annot as annot from URL1)
union all
  (select URLWeakOnly.annot as annot from URLWeakOnly);

--Get 5 left and right tokens of URL 

create view URLWithContents as
select
    U.annot as url,LeftContextTok(U.annot,5) as lefttokens,RightContextTok(U.annot,5) as righttokens 
from URLAll U;

output view URLWithContents;
