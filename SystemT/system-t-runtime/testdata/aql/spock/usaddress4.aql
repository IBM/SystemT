-- Identify street suffixes using a dictionary
create view StreetSuffix  as
select 	D.match as match
from  	Dictionary("spock/streetSuffixesAll.dict",  DocScan.text) D 
where 	MatchesRegex(/^\p{Upper}[\p{Lower}\&]{1,20}.?/, D.match);	
	
-- Identify street numbers like 123, 4-B
create view NumCP as
select	R.match as match
from    Regex(/\b([[1-9]\p{Alpha}\-\,]*\d[\d\p{Alpha}\-\,]*)\s+(\p{Upper}\.?\s)?(\p{Upper}[\p{Lower}\&]{1,20}|\d{1,3}(st|nd|rd|th))\b/, DocScan.text) R;
		
-- Identify Street address, allowing for two capitalized words in between
create view StreetAddress  as
select	CombineSpans(nc.match, ssw.match) as match
from	NumCP nc, StreetSuffix  ssw
where   FollowsTok(nc.match,ssw.match, 0, 2)  and
	MatchesRegex(/\s*(\p{Upper}[\p{Lower}\&]+\s*){0,2}/, 
			SpanBetween(nc.match,ssw.match));

-- Capitalized word for candidate city name
create view CapsPlace as
select	R.match as match
from    Regex(/\b\p{Upper}[\p{Lower}\&\.-\/]{1,20}\b/, DocScan.text) R;

-- City name is a block of 1 or 2 capitalized words
-- combine with Street address allowing up to five tokens in between
create view StreetAddressWithCity as
select	CombineSpans(S.match, cp.block) as match
from	StreetAddress S, BlockTok(0,1,2,CapsPlace.match) cp
where	FollowsTok(S.match,cp.block, 0, 5);

-- State abbreviations from a dictionary
create view StateStrongAbbrev  as
select	D.match as match
from	Dictionary("spock/Statelist.abbrev.dict",  "Exact", DocScan.text) D;

-- State names from a dictionary
create view State  as
select 	D.match as match
from	Dictionary("spock/Statelist.dict",  DocScan.text) D;

-- All state names		
create view StateStrongAll as
(select S.match as match from State S)
union all 
(select S.match as match from StateStrongAbbrev S);	

-- StreetAddressWithCity combined with State
create view StreetAddressWithCityStrongState as
select	CombineSpans(Sawc.match, Sa.match) as match
from	StreetAddressWithCity Sawc, StateStrongAll Sa
where	FollowsTok(Sawc.match,Sa.match, 0, 1)  and
	MatchesRegex(/\s*,?\s*/, SpanBetween(Sawc.match,Sa.match));

-- 5 and 9 digit zipcodes
create view Zipcode as
select 	R.match as match
from	Regex(/\b[0-9]{5}(\-[0-9]{4})?\b/, DocScan.text) R;

-- Complete street addresses	 
create view CompleteStreetAddress  as
select	CombineSpans(Sawcos.match, z.match) as match
from	StreetAddressWithCityStrongState Sawcos, Zipcode z
where	FollowsTok(Sawcos.match,z.match, 0, 1)  and
	ContainsRegex(/^\s*,?\s*$/, SpanBetween(Sawcos.match,z.match));

select R.match as match
into Result
from Consolidate(CompleteStreetAddress.match) R;