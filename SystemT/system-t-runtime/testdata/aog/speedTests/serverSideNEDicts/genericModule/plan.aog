$Document = DocScan(
  (
    "text" => "Text",
    "label" => "Text"
  )
);
CreateDict(
    "name" => "ClueCityDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "DotComSuffixDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "FilterOrgDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "FilterPersonDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "FilterPhoneNum",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "GreetingsDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "HighwayDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "InitialDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "NotesEmailFilter",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "OrgConjDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "OrgPartnershipDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "OrgPrepDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "OrgToAvoidDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "PersonSuffixDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "PhoneVariants",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "StrongPhoneVariantDictionary",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "TheDict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "abbreviation.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "cities/city_bayarea.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "cities/majorCities.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "cities/majorCity_world.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "city.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "city_german.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "continent.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "country.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "filterOrg_domain.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "filterOrg_german.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "filterPerson_LCDict.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "filterPerson_RCDict.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "filterPerson_german.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "filterPerson_position.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "industryType_prefix.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "industryType_suffix.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "invalidPersonFragment.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "location/provinceAbbrev_canada.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "location/province_canada.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "month.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "name.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/name_france.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/name_israel.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/name_italy.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/name_spain.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictFirst_france.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictFirst_india.partial.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictFirst_israel.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictFirst_italy.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictFirst_spain.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictLast_france.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictLast_india.partial.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictLast_israel.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictLast_italy.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "names/strictLast_spain.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "nationality.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "organization_full_case.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "organization_full_noCase.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "organization_media.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "organization_newspaper.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "organization_suffix.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "orgs/organization_fortune1000_2000_2008.case.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "orgs/organization_fortune1000_2000_2008.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "secondaryUnit.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "specialNamePrefix.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "stateAbbrv.ChicagoAPStyle.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "stateList.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "stateListAbbrev.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "stockmarket/exchanges.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "stockmarket/reuters_instrument_codes.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "streetSuffix.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "streetSuffix_forPerson.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "streetSuffix_weak.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "strictFirst.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "strictFirst_german.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "strictFirst_german_bluePages.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "strictLast.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "strictLast_german.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "strictLast_german_bluePages.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "strictNickName.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "timeZone.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "uniqMostCommonSurname.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

CreateDict(
    "name" => "wkday.dict",
    "language" => "de,es,en,fr,it,x_unspecified",
    "case" => "insensitive",
    "isExternal" => "false"
);

$Doc =
Project(
  (
    "D.text" => "text"
  ),
  Project(
    (
      "text" => "D.text"
    ),
    $Document
  )
);



# Dicts() operator created through Shared Dictionary Matching
(
  $SDM_TMP_stockmarket_reuters_instrument_codes_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_stockmarket_exchanges_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_DotComSuffixDict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_city_german_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_HighwayDict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_InitialDict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_specialNamePrefix_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_invalidPersonFragment_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_cities_majorCity_world_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_cities_majorCities_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_cities_city_bayarea_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_month_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_name_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_name_italy_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_name_france_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_name_spain_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_name_israel_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_nationality_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_OrgPartnershipDict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_industryType_suffix_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_industryType_prefix_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_organization_suffix_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_OrgConjDict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_OrgPrepDict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_OrgToAvoidDict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_orgs_organization_fortune1000_2000_2008_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_orgs_organization_fortune1000_2000_2008_case_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_PersonSuffixDict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_FilterPhoneNum_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_PhoneVariants_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_secondaryUnit_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_streetSuffix_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_streetSuffix_weak_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_strictFirst_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_strictFirst_german_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_strictNickName_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_strictFirst_german_bluePages_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictFirst_italy_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictFirst_france_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictFirst_spain_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictFirst_india_partial_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictFirst_israel_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_strictLast_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_strictLast_german_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_strictLast_german_bluePages_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_uniqMostCommonSurname_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictLast_italy_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictLast_france_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictLast_spain_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictLast_india_partial_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_names_strictLast_israel_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_StrongPhoneVariantDictionary_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_TheDict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_timeZone_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_city_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_stateList_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_stateListAbbrev_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_stateListAbbrev_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_wkday_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_location_province_canada_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_location_provinceAbbrev_canada_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_location_provinceAbbrev_canada_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_ClueCityDict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_continent_dict_WITH_IgnoreCase_OVER_Doc_text,
  $SDM_TMP_country_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_organization_full_case_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_organization_media_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_organization_newspaper_dict_WITH_Exact_OVER_Doc_text,
  $SDM_TMP_organization_full_noCase_dict_WITH_IgnoreCase_OVER_Doc_text
) = 
Dicts(
  (
    "stockmarket/reuters_instrument_codes.dict" => "Exact",
    "stockmarket/exchanges.dict" => "Exact",
    "DotComSuffixDict" => "IgnoreCase",
    "city_german.dict" => "IgnoreCase",
    "HighwayDict" => "Exact",
    "InitialDict" => "IgnoreCase",
    "specialNamePrefix.dict" => "IgnoreCase",
    "invalidPersonFragment.dict" => "IgnoreCase",
    "cities/majorCity_world.dict" => "IgnoreCase",
    "cities/majorCities.dict" => "IgnoreCase",
    "cities/city_bayarea.dict" => "IgnoreCase",
    "month.dict" => "IgnoreCase",
    "name.dict" => "IgnoreCase",
    "names/name_italy.dict" => "IgnoreCase",
    "names/name_france.dict" => "IgnoreCase",
    "names/name_spain.dict" => "IgnoreCase",
    "names/name_israel.dict" => "IgnoreCase",
    "nationality.dict" => "IgnoreCase",
    "OrgPartnershipDict" => "Exact",
    "industryType_suffix.dict" => "Exact",
    "industryType_prefix.dict" => "Exact",
    "organization_suffix.dict" => "Exact",
    "OrgConjDict" => "IgnoreCase",
    "OrgPrepDict" => "IgnoreCase",
    "OrgToAvoidDict" => "IgnoreCase",
    "orgs/organization_fortune1000_2000_2008.dict" => "IgnoreCase",
    "orgs/organization_fortune1000_2000_2008.case.dict" => "Exact",
    "PersonSuffixDict" => "IgnoreCase",
    "FilterPhoneNum" => "IgnoreCase",
    "PhoneVariants" => "IgnoreCase",
    "secondaryUnit.dict" => "IgnoreCase",
    "streetSuffix.dict" => "IgnoreCase",
    "streetSuffix_weak.dict" => "IgnoreCase",
    "strictFirst.dict" => "IgnoreCase",
    "strictFirst_german.dict" => "IgnoreCase",
    "strictNickName.dict" => "IgnoreCase",
    "strictFirst_german_bluePages.dict" => "IgnoreCase",
    "names/strictFirst_italy.dict" => "IgnoreCase",
    "names/strictFirst_france.dict" => "IgnoreCase",
    "names/strictFirst_spain.dict" => "IgnoreCase",
    "names/strictFirst_india.partial.dict" => "IgnoreCase",
    "names/strictFirst_israel.dict" => "IgnoreCase",
    "strictLast.dict" => "IgnoreCase",
    "strictLast_german.dict" => "IgnoreCase",
    "strictLast_german_bluePages.dict" => "IgnoreCase",
    "uniqMostCommonSurname.dict" => "IgnoreCase",
    "names/strictLast_italy.dict" => "IgnoreCase",
    "names/strictLast_france.dict" => "IgnoreCase",
    "names/strictLast_spain.dict" => "IgnoreCase",
    "names/strictLast_india.partial.dict" => "IgnoreCase",
    "names/strictLast_israel.dict" => "IgnoreCase",
    "StrongPhoneVariantDictionary" => "IgnoreCase",
    "TheDict" => "IgnoreCase",
    "timeZone.dict" => "IgnoreCase",
    "city.dict" => "Exact",
    "stateList.dict" => "IgnoreCase",
    "stateListAbbrev.dict" => "Exact",
    "stateListAbbrev.dict" => "IgnoreCase",
    "wkday.dict" => "IgnoreCase",
    "location/province_canada.dict" => "IgnoreCase",
    "location/provinceAbbrev_canada.dict" => "Exact",
    "location/provinceAbbrev_canada.dict" => "IgnoreCase",
    "ClueCityDict" => "IgnoreCase",
    "continent.dict" => "IgnoreCase",
    "country.dict" => "Exact",
    "organization_full_case.dict" => "Exact",
    "organization_media.dict" => "Exact",
    "organization_newspaper.dict" => "Exact",
    "organization_full_noCase.dict" => "IgnoreCase"
  ),
  "text", "__sdm_match", $Doc
);

# Apply labels to outputs of generated Dicts() operator.
$SDM_OUTPUT_stockmarket_reuters_instrument_codes_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_stockmarket_reuters_instrument_codes_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_stockmarket_exchanges_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_stockmarket_exchanges_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_DotComSuffixDict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_DotComSuffixDict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_city_german_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_city_german_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_HighwayDict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_HighwayDict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_InitialDict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_InitialDict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_specialNamePrefix_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_specialNamePrefix_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_invalidPersonFragment_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_invalidPersonFragment_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_cities_majorCity_world_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_cities_majorCity_world_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_cities_majorCities_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_cities_majorCities_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_cities_city_bayarea_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_cities_city_bayarea_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_month_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_month_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_name_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_name_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_name_italy_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_name_italy_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_name_france_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_name_france_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_name_spain_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_name_spain_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_name_israel_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_name_israel_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_nationality_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_nationality_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_OrgPartnershipDict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_OrgPartnershipDict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_industryType_suffix_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_industryType_suffix_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_industryType_prefix_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_industryType_prefix_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_organization_suffix_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_organization_suffix_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_OrgConjDict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_OrgConjDict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_OrgPrepDict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_OrgPrepDict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_OrgToAvoidDict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_OrgToAvoidDict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_orgs_organization_fortune1000_2000_2008_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_orgs_organization_fortune1000_2000_2008_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_orgs_organization_fortune1000_2000_2008_case_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_orgs_organization_fortune1000_2000_2008_case_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_PersonSuffixDict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_PersonSuffixDict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_FilterPhoneNum_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_FilterPhoneNum_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_PhoneVariants_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_PhoneVariants_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_secondaryUnit_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_secondaryUnit_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_streetSuffix_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_streetSuffix_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_streetSuffix_weak_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_streetSuffix_weak_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_strictFirst_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_strictFirst_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_strictFirst_german_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_strictFirst_german_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_strictNickName_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_strictNickName_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_strictFirst_german_bluePages_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_strictFirst_german_bluePages_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictFirst_italy_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictFirst_italy_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictFirst_france_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictFirst_france_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictFirst_spain_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictFirst_spain_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictFirst_india_partial_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictFirst_india_partial_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictFirst_israel_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictFirst_israel_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_strictLast_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_strictLast_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_strictLast_german_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_strictLast_german_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_strictLast_german_bluePages_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_strictLast_german_bluePages_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_uniqMostCommonSurname_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_uniqMostCommonSurname_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictLast_italy_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictLast_italy_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictLast_france_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictLast_france_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictLast_spain_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictLast_spain_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictLast_india_partial_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictLast_india_partial_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_names_strictLast_israel_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_names_strictLast_israel_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_StrongPhoneVariantDictionary_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_StrongPhoneVariantDictionary_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_TheDict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_TheDict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_timeZone_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_timeZone_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_city_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_city_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_stateList_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_stateList_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_stateListAbbrev_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_stateListAbbrev_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_stateListAbbrev_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_stateListAbbrev_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_wkday_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_wkday_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_location_province_canada_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_location_province_canada_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_location_provinceAbbrev_canada_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_location_provinceAbbrev_canada_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_location_provinceAbbrev_canada_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_location_provinceAbbrev_canada_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_ClueCityDict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_ClueCityDict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_continent_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_continent_dict_WITH_IgnoreCase_OVER_Doc_text);
$SDM_OUTPUT_country_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_country_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_organization_full_case_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_organization_full_case_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_organization_media_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_organization_media_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_organization_newspaper_dict_WITH_Exact_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_organization_newspaper_dict_WITH_Exact_OVER_Doc_text);
$SDM_OUTPUT_organization_full_noCase_dict_WITH_IgnoreCase_OVER_Doc_text = Project(("__sdm_match" => "__sdm_match", "text" => "text" ), $SDM_TMP_organization_full_noCase_dict_WITH_IgnoreCase_OVER_Doc_text);



# Something has to be output...
Output:  $SDM_TMP_TheDict_WITH_IgnoreCase_OVER_Doc_text;
